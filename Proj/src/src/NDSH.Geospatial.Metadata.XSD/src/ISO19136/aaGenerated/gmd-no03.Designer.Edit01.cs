// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 6.0.74.0. www.xsd2code.com
//    {"TargetFramework":"NetStandard","NameSpace":"NDSH.Geospatial.Metadata","GenerateUnusedComplexType":true,"GenerateUnusedSimpleType":true,"Properties":{"NotifyPropertyChanged":true},"XmlAttribute":{"Enabled":true,"GenerateOrderXmlAttributes":true},"JsonAttribute":{"Enabled":true,"MemberName":1},"DataAnnotationsAttribute":{"StringLengthAttribute":true,"RequiredAttribute":true,"MaxLengthAttribute":true,"MinLengthAttribute":true,"RegularExpressionAttribute":true,"RangeAttribute":true,"MaxDigitsAttribute":true,"FractionDigitsAttribute":true,"DefautValueAttribute":true,"ValidatePropertyInSetter":true,"Enabled":true},"ClassParams":{"PartialClass":false,"GenerateInSeparateFilesDirectory":""},"Miscellaneous":{"EnableSummaryComment":true}}
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace AAAA {
  using System;
  using System.Diagnostics;
  using System.Xml.Serialization;
  using System.Runtime.Serialization;
  using System.Collections;
  using System.Xml.Schema;
  using System.ComponentModel;
  using System.Globalization;
  using System.Xml;
  using System.ComponentModel.DataAnnotations;
  using System.Collections.Generic;
  using Newtonsoft.Json;
  using Newtonsoft.Json.Converters;
  using System.Runtime.CompilerServices;

  /// <summary>
  /// 
  /// </summary>
  public abstract class Model : INotifyPropertyChanged {

    #region Public Events

    /// <summary>
    /// The event that is raised when a property value has been changed.
    /// </summary>
    public event PropertyChangedEventHandler? PropertyChanged;

    #endregion

    #region Private Procedures

    /// <summary>
    /// Executed when a property value has been changed.
    /// The procedure is used to raise the <see cref="PropertyChanged"/> event.
    /// </summary>
    /// <param name="propertyName">
    /// The name of the property whose value has been changed.</param>
    public void OnPropertyChanged([CallerMemberName] string propertyName = "") {
      PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }

    #endregion

  }

  #region FractionDigitsAttribute
  public class FractionDigitsAttribute : ValidationAttribute {
    private readonly uint _decimalPrecision;

    public FractionDigitsAttribute(uint decimalPrecision) {
      _decimalPrecision = decimalPrecision;
    }

    public override bool IsValid(object value) {
      if (value == null)
        return true;

      if (value is decimal)
        return HasPrecision(value, _decimalPrecision);

      if (value is float)
        return HasPrecision(value, _decimalPrecision);

      if (value is double)
        return HasPrecision(value, _decimalPrecision);

      return false;
    }

    private static bool HasPrecision(object value, uint precision) {
      string valueStr = String.Empty;
      if (value is decimal)
        valueStr = ((decimal)value).ToString(CultureInfo.InvariantCulture);

      if (value is float)
        valueStr = ((float)value).ToString(CultureInfo.InvariantCulture);

      if (value is double)
        valueStr = ((double)value).ToString(CultureInfo.InvariantCulture);

      int indexOfDot = valueStr.IndexOf('.');
      if (indexOfDot == -1) {
        return true;
      }
      return valueStr.Length - indexOfDot - 1 <= precision;
    }
  }
  #endregion

  #region MaxDigitsAttribute
  public class MaxDigitsAttribute : ValidationAttribute {
    private readonly int _max;
    private readonly int _min;

    public MaxDigitsAttribute(int max, int min = 0) {
      _max = max;
      _min = min;
    }

    protected override ValidationResult IsValid(object value, ValidationContext validationContext) {
      if (!IsValid(value)) {
        return new ValidationResult(FormatErrorMessage(validationContext.DisplayName));
      }

      return null;
    }

    public override bool IsValid(object value) {
      // you could do any custom validation you like if (value is int) {
      var stringValue = "" + (int)value;
      var length = stringValue.Length;
      if (length >= _min && length <= _max)
        return true;

      return false;
    }
  }
  #endregion

  /// <summary>
  /// Time period covered by the content of the dataset
  /// </summary>
  [XmlInclude(typeof(EX_SpatialTemporalExtent_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_TemporalExtent", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_TemporalExtent_Type")]
  public class EX_TemporalExtent_Type : AbstractObject_Type {
    #region Private fields
    private TM_Primitive_PropertyType _extent;
    #endregion

    /// <summary>
    /// EX_TemporalExtent_Type class constructor
    /// </summary>
    public EX_TemporalExtent_Type() {
      _extent = new TM_Primitive_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("extent", Order = 0)]
    public TM_Primitive_PropertyType extent {
      get {
        return _extent;
      }
      set {
        if ((_extent == value)) {
          return;
        }
        if (((_extent == null)
                    || (_extent.Equals(value) != true))) {
          _extent = value;
          OnPropertyChanged("extent");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gts")]
  [JsonObject("TM_Primitive_PropertyType")]
  public class TM_Primitive_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractTimePrimitiveType _abstractTimePrimitive;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("AbstractTimePrimitive", Order = 0)]
    public AbstractTimePrimitiveType AbstractTimePrimitive {
      get {
        return _abstractTimePrimitive;
      }
      set {
        if ((_abstractTimePrimitive == value)) {
          return;
        }
        if (((_abstractTimePrimitive == null)
                    || (_abstractTimePrimitive.Equals(value) != true))) {
          _abstractTimePrimitive = value;
          OnPropertyChanged("AbstractTimePrimitive");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(AbstractTimeTopologyPrimitiveType))]
  [XmlInclude(typeof(TimeEdgeType))]
  [XmlInclude(typeof(TimeNodeType))]
  [XmlInclude(typeof(AbstractTimeGeometricPrimitiveType))]
  [XmlInclude(typeof(TimePeriodType))]
  [XmlInclude(typeof(TimeInstantType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTimePrimitiveType")]
  public abstract class AbstractTimePrimitiveType : AbstractTimeObjectType {
    #region Private fields
    private List<RelatedTimeType> _relatedTime;
    #endregion

    /// <summary>
    /// AbstractTimePrimitiveType class constructor
    /// </summary>
    public AbstractTimePrimitiveType() {
      _relatedTime = new List<RelatedTimeType>();
    }

    [XmlElement("relatedTime", Order = 0)]
    [JsonProperty("relatedTime", Order = 0)]
    public List<RelatedTimeType> relatedTime {
      get {
        return _relatedTime;
      }
      set {
        if ((_relatedTime == value)) {
          return;
        }
        if (((_relatedTime == null)
                    || (_relatedTime.Equals(value) != true))) {
          _relatedTime = value;
          OnPropertyChanged("relatedTime");
        }
      }
    }
  }

  /// <summary>
  /// gml:RelatedTimeType provides a content model for indicating the relative position of an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive. It extends the generic gml:TimePrimitivePropertyType with an XML attribute relativePosition, whose value is selected from the set of 13 temporal relationships identified by Allen (1983)
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RelatedTimeType")]
  public class RelatedTimeType : TimePrimitivePropertyType {
    #region Private fields
    private RelatedTimeTypeRelativePosition _relativePosition;
    #endregion

    [XmlAttribute]
    [JsonProperty("relativePosition")]
    public RelatedTimeTypeRelativePosition relativePosition {
      get {
        return _relativePosition;
      }
      set {
        if ((_relativePosition.Equals(value) != true)) {
          _relativePosition = value;
          OnPropertyChanged("relativePosition");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  public enum RelatedTimeTypeRelativePosition {
    Before,
    After,
    Begins,
    Ends,
    During,
    Equals,
    Contains,
    Overlaps,
    Meets,
    OverlappedBy,
    MetBy,
    BegunBy,
    EndedBy,
  }

  /// <summary>
  /// gml:TimePrimitivePropertyType provides a standard content model for associations between an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive and another object.
  /// </summary>
  [XmlInclude(typeof(RelatedTimeType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimePrimitivePropertyType")]
  public class TimePrimitivePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractTimePrimitiveType _abstractTimePrimitive;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimePrimitivePropertyType class constructor
    /// </summary>
    public TimePrimitivePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractTimePrimitive", Order = 0)]
    public AbstractTimePrimitiveType AbstractTimePrimitive {
      get {
        return _abstractTimePrimitive;
      }
      set {
        if ((_abstractTimePrimitive == value)) {
          return;
        }
        if (((_abstractTimePrimitive == null)
                    || (_abstractTimePrimitive.Equals(value) != true))) {
          _abstractTimePrimitive = value;
          OnPropertyChanged("AbstractTimePrimitive");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:TimeClockPropertyType provides for associating a gml:TimeClock with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeClockPropertyType")]
  public class TimeClockPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeClockType _timeClock;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TimeClockPropertyType class constructor
    /// </summary>
    public TimeClockPropertyType() {
      _timeClock = new TimeClockType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeClock", Order = 0)]
    public TimeClockType TimeClock {
      get {
        return _timeClock;
      }
      set {
        if ((_timeClock == value)) {
          return;
        }
        if (((_timeClock == null)
                    || (_timeClock.Equals(value) != true))) {
          _timeClock = value;
          OnPropertyChanged("TimeClock");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeClockType")]
  public class TimeClockType : TimeReferenceSystemType {
    #region Private fields
    private StringOrRefType _referenceEvent;
    private System.DateTime _referenceTime;
    private System.DateTime _utcReference;
    private List<TimeCalendarPropertyType> _dateBasis;
    #endregion

    /// <summary>
    /// TimeClockType class constructor
    /// </summary>
    public TimeClockType() {
      _dateBasis = new List<TimeCalendarPropertyType>();
      _referenceEvent = new StringOrRefType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("referenceEvent", Order = 0)]
    public StringOrRefType referenceEvent {
      get {
        return _referenceEvent;
      }
      set {
        if ((_referenceEvent == value)) {
          return;
        }
        if (((_referenceEvent == null)
                    || (_referenceEvent.Equals(value) != true))) {
          _referenceEvent = value;
          OnPropertyChanged("referenceEvent");
        }
      }
    }

    [XmlElement(DataType = "time", Order = 1)]
    [JsonProperty("referenceTime", Order = 1)]
    public System.DateTime referenceTime {
      get {
        return _referenceTime;
      }
      set {
        if ((_referenceTime.Equals(value) != true)) {
          _referenceTime = value;
          OnPropertyChanged("referenceTime");
        }
      }
    }

    [XmlElement(DataType = "time", Order = 2)]
    [JsonProperty("utcReference", Order = 2)]
    public System.DateTime utcReference {
      get {
        return _utcReference;
      }
      set {
        if ((_utcReference.Equals(value) != true)) {
          _utcReference = value;
          OnPropertyChanged("utcReference");
        }
      }
    }

    [XmlElement("dateBasis", Order = 3)]
    [JsonProperty("dateBasis", Order = 3)]
    public List<TimeCalendarPropertyType> dateBasis {
      get {
        return _dateBasis;
      }
      set {
        if ((_dateBasis == value)) {
          return;
        }
        if (((_dateBasis == null)
                    || (_dateBasis.Equals(value) != true))) {
          _dateBasis = value;
          OnPropertyChanged("dateBasis");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("StringOrRefType")]
  public class StringOrRefType : INotifyPropertyChanged {
    #region Private fields
    private string _nilReason;
    private string _remoteSchema;
    private string _value;
    #endregion

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:TimeCalendarPropertyType provides for associating a gml:TimeCalendar with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCalendarPropertyType")]
  public class TimeCalendarPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeCalendarType _timeCalendar;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TimeCalendarPropertyType class constructor
    /// </summary>
    public TimeCalendarPropertyType() {
      _timeCalendar = new TimeCalendarType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeCalendar", Order = 0)]
    public TimeCalendarType TimeCalendar {
      get {
        return _timeCalendar;
      }
      set {
        if ((_timeCalendar == value)) {
          return;
        }
        if (((_timeCalendar == null)
                    || (_timeCalendar.Equals(value) != true))) {
          _timeCalendar = value;
          OnPropertyChanged("TimeCalendar");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCalendarType")]
  public class TimeCalendarType : TimeReferenceSystemType {
    #region Private fields
    private List<TimeCalendarEraPropertyType> _referenceFrame;
    #endregion

    /// <summary>
    /// TimeCalendarType class constructor
    /// </summary>
    public TimeCalendarType() {
      _referenceFrame = new List<TimeCalendarEraPropertyType>();
    }

    [XmlElement("referenceFrame", Order = 0)]
    [JsonProperty("referenceFrame", Order = 0)]
    public List<TimeCalendarEraPropertyType> referenceFrame {
      get {
        return _referenceFrame;
      }
      set {
        if ((_referenceFrame == value)) {
          return;
        }
        if (((_referenceFrame == null)
                    || (_referenceFrame.Equals(value) != true))) {
          _referenceFrame = value;
          OnPropertyChanged("referenceFrame");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeCalendarEraPropertyType provides for associating a gml:TimeCalendarEra with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCalendarEraPropertyType")]
  public class TimeCalendarEraPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeCalendarEraType _timeCalendarEra;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TimeCalendarEraPropertyType class constructor
    /// </summary>
    public TimeCalendarEraPropertyType() {
      _timeCalendarEra = new TimeCalendarEraType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeCalendarEra", Order = 0)]
    public TimeCalendarEraType TimeCalendarEra {
      get {
        return _timeCalendarEra;
      }
      set {
        if ((_timeCalendarEra == value)) {
          return;
        }
        if (((_timeCalendarEra == null)
                    || (_timeCalendarEra.Equals(value) != true))) {
          _timeCalendarEra = value;
          OnPropertyChanged("TimeCalendarEra");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCalendarEraType")]
  public class TimeCalendarEraType : DefinitionType {
    #region Private fields
    private StringOrRefType _referenceEvent;
    private string _referenceDate;
    private decimal _julianReference;
    private TimePeriodPropertyType _epochOfUse;
    #endregion

    /// <summary>
    /// TimeCalendarEraType class constructor
    /// </summary>
    public TimeCalendarEraType() {
      _epochOfUse = new TimePeriodPropertyType();
      _referenceEvent = new StringOrRefType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("referenceEvent", Order = 0)]
    public StringOrRefType referenceEvent {
      get {
        return _referenceEvent;
      }
      set {
        if ((_referenceEvent == value)) {
          return;
        }
        if (((_referenceEvent == null)
                    || (_referenceEvent.Equals(value) != true))) {
          _referenceEvent = value;
          OnPropertyChanged("referenceEvent");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("referenceDate", Order = 1)]
    public string referenceDate {
      get {
        return _referenceDate;
      }
      set {
        if ((_referenceDate == value)) {
          return;
        }
        if (((_referenceDate == null)
                    || (_referenceDate.Equals(value) != true))) {
          _referenceDate = value;
          OnPropertyChanged("referenceDate");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("julianReference", Order = 2)]
    public decimal julianReference {
      get {
        return _julianReference;
      }
      set {
        if ((_julianReference.Equals(value) != true)) {
          _julianReference = value;
          OnPropertyChanged("julianReference");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("epochOfUse", Order = 3)]
    public TimePeriodPropertyType epochOfUse {
      get {
        return _epochOfUse;
      }
      set {
        if ((_epochOfUse == value)) {
          return;
        }
        if (((_epochOfUse == null)
                    || (_epochOfUse.Equals(value) != true))) {
          _epochOfUse = value;
          OnPropertyChanged("epochOfUse");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimePeriodPropertyType provides for associating a gml:TimePeriod with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimePeriodPropertyType")]
  public class TimePeriodPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimePeriodType _timePeriod;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimePeriodPropertyType class constructor
    /// </summary>
    public TimePeriodPropertyType() {
      _timePeriod = new TimePeriodType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimePeriod", Order = 0)]
    public TimePeriodType TimePeriod {
      get {
        return _timePeriod;
      }
      set {
        if ((_timePeriod == value)) {
          return;
        }
        if (((_timePeriod == null)
                    || (_timePeriod.Equals(value) != true))) {
          _timePeriod = value;
          OnPropertyChanged("TimePeriod");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimePeriodType")]
  public class TimePeriodType : AbstractTimeGeometricPrimitiveType {
    #region Private fields
    private object _item;
    private object _item1;
    private string _duration;
    private TimeIntervalLengthType _timeInterval;
    #endregion

    /// <summary>
    /// TimePeriodType class constructor
    /// </summary>
    public TimePeriodType() {
      _timeInterval = new TimeIntervalLengthType();
    }

    [XmlElement("begin", typeof(TimeInstantPropertyType), Order = 0)]
    [XmlElement("beginPosition", typeof(TimePositionType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement("end", typeof(TimeInstantPropertyType), Order = 1)]
    [XmlElement("endPosition", typeof(TimePositionType), Order = 1)]
    public object Item1 {
      get {
        return _item1;
      }
      set {
        if ((_item1 == value)) {
          return;
        }
        if (((_item1 == null)
                    || (_item1.Equals(value) != true))) {
          _item1 = value;
          OnPropertyChanged("Item1");
        }
      }
    }

    [XmlElement(DataType = "duration", Order = 2)]
    [JsonProperty("duration", Order = 2)]
    public string duration {
      get {
        return _duration;
      }
      set {
        if ((_duration == value)) {
          return;
        }
        if (((_duration == null)
                    || (_duration.Equals(value) != true))) {
          _duration = value;
          OnPropertyChanged("duration");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("timeInterval", Order = 3)]
    public TimeIntervalLengthType timeInterval {
      get {
        return _timeInterval;
      }
      set {
        if ((_timeInterval == value)) {
          return;
        }
        if (((_timeInterval == null)
                    || (_timeInterval.Equals(value) != true))) {
          _timeInterval = value;
          OnPropertyChanged("timeInterval");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeInstantPropertyType provides for associating a gml:TimeInstant with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeInstantPropertyType")]
  public class TimeInstantPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeInstantType _timeInstant;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimeInstantPropertyType class constructor
    /// </summary>
    public TimeInstantPropertyType() {
      _timeInstant = new TimeInstantType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeInstant", Order = 0)]
    public TimeInstantType TimeInstant {
      get {
        return _timeInstant;
      }
      set {
        if ((_timeInstant == value)) {
          return;
        }
        if (((_timeInstant == null)
                    || (_timeInstant.Equals(value) != true))) {
          _timeInstant = value;
          OnPropertyChanged("TimeInstant");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeInstantType")]
  public class TimeInstantType : AbstractTimeGeometricPrimitiveType {
    #region Private fields
    private TimePositionType _timePosition;
    #endregion

    /// <summary>
    /// TimeInstantType class constructor
    /// </summary>
    public TimeInstantType() {
      _timePosition = new TimePositionType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("timePosition", Order = 0)]
    public TimePositionType timePosition {
      get {
        return _timePosition;
      }
      set {
        if ((_timePosition == value)) {
          return;
        }
        if (((_timePosition == null)
                    || (_timePosition.Equals(value) != true))) {
          _timePosition = value;
          OnPropertyChanged("timePosition");
        }
      }
    }
  }

  /// <summary>
  /// The method for identifying a temporal position is specific to each temporal reference system.  gml:TimePositionType supports the description of temporal position according to the subtypes described in ISO 19108.
  /// Values based on calendars and clocks use lexical formats that are based on ISO 8601, as described in XML Schema Part 2:2001. A decimal value may be used with coordinate systems such as GPS time or UNIX time. A URI may be used to provide a reference to some era in an ordinal reference system .
  /// In common with many of the components modelled as data types in the ISO 19100 series of International Standards, the corresponding GML component has simple content. However, the content model gml:TimePositionType is defined in several steps.
  /// Three XML attributes appear on gml:TimePositionType:
  /// A time value shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. Components for describing temporal reference systems are described in 14.4, but it is not required that the reference system be described in this, as the reference may refer to anything that may be indentified with a URI.
  /// For time values using a calendar containing more than one era, the (optional) calendarEraName attribute provides the name of the calendar era.
  /// Inexact temporal positions may be expressed using the optional indeterminatePosition attribute.  This takes a value from an enumeration.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimePositionType")]
  public class TimePositionType : INotifyPropertyChanged {
    #region Private fields
    private string _frame;
    private string _calendarEraName;
    private TimeIndeterminateValueType _indeterminatePosition;
    private string _value;
    #endregion

    /// <summary>
    /// TimePositionType class constructor
    /// </summary>
    public TimePositionType() {
      _frame = "#ISO-8601";
    }

    [XmlAttribute(DataType = "anyURI")]
    [DefaultValue("#ISO-8601")]
    [JsonProperty("frame")]
    public string frame {
      get {
        return _frame;
      }
      set {
        if ((_frame == value)) {
          return;
        }
        if (((_frame == null)
                    || (_frame.Equals(value) != true))) {
          _frame = value;
          OnPropertyChanged("frame");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("calendarEraName")]
    public string calendarEraName {
      get {
        return _calendarEraName;
      }
      set {
        if ((_calendarEraName == value)) {
          return;
        }
        if (((_calendarEraName == null)
                    || (_calendarEraName.Equals(value) != true))) {
          _calendarEraName = value;
          OnPropertyChanged("calendarEraName");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("indeterminatePosition")]
    public TimeIndeterminateValueType indeterminatePosition {
      get {
        return _indeterminatePosition;
      }
      set {
        if ((_indeterminatePosition.Equals(value) != true)) {
          _indeterminatePosition = value;
          OnPropertyChanged("indeterminatePosition");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// These values are interpreted as follows:
  /// -	“unknown” indicates that no specific value for temporal position is provided.
  /// -	“now” indicates that the specified value shall be replaced with the current temporal position whenever the value is accessed.
  /// -	“before” indicates that the actual temporal position is unknown, but it is known to be before the specified value.
  /// -	“after” indicates that the actual temporal position is unknown, but it is known to be after the specified value.
  /// A value for indeterminatePosition may
  /// -	be used either alone, or
  /// -	qualify a specific value for temporal position.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum TimeIndeterminateValueType {
    after,
    before,
    now,
    unknown,
  }

  [XmlInclude(typeof(TimePeriodType))]
  [XmlInclude(typeof(TimeInstantType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTimeGeometricPrimitiveType")]
  public abstract class AbstractTimeGeometricPrimitiveType : AbstractTimePrimitiveType {
    #region Private fields
    private string _frame;
    #endregion

    /// <summary>
    /// AbstractTimeGeometricPrimitiveType class constructor
    /// </summary>
    public AbstractTimeGeometricPrimitiveType() {
      _frame = "#ISO-8601";
    }

    [XmlAttribute(DataType = "anyURI")]
    [DefaultValue("#ISO-8601")]
    [JsonProperty("frame")]
    public string frame {
      get {
        return _frame;
      }
      set {
        if ((_frame == value)) {
          return;
        }
        if (((_frame == null)
                    || (_frame.Equals(value) != true))) {
          _frame = value;
          OnPropertyChanged("frame");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeIntervalLengthType")]
  public class TimeIntervalLengthType : INotifyPropertyChanged {
    #region Private fields
    private string _unit;
    private string _radix;
    private string _factor;
    private decimal _value;
    #endregion

    [XmlAttribute]
    [JsonProperty("unit")]
    public string unit {
      get {
        return _unit;
      }
      set {
        if ((_unit == value)) {
          return;
        }
        if (((_unit == null)
                    || (_unit.Equals(value) != true))) {
          _unit = value;
          OnPropertyChanged("unit");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("radix")]
    public string radix {
      get {
        return _radix;
      }
      set {
        if ((_radix == value)) {
          return;
        }
        if (((_radix == null)
                    || (_radix.Equals(value) != true))) {
          _radix = value;
          OnPropertyChanged("radix");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [JsonProperty("factor")]
    public string factor {
      get {
        return _factor;
      }
      set {
        if ((_factor == value)) {
          return;
        }
        if (((_factor == null)
                    || (_factor.Equals(value) != true))) {
          _factor = value;
          OnPropertyChanged("factor");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public decimal Value {
      get {
        return _value;
      }
      set {
        if ((_value.Equals(value) != true)) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(TimeOrdinalEraType))]
  [XmlInclude(typeof(TimeCalendarEraType))]
  [XmlInclude(typeof(TimeReferenceSystemType))]
  [XmlInclude(typeof(TimeOrdinalReferenceSystemType))]
  [XmlInclude(typeof(TimeClockType))]
  [XmlInclude(typeof(TimeCalendarType))]
  [XmlInclude(typeof(TimeCoordinateSystemType))]
  [XmlInclude(typeof(IdentifiedObjectType))]
  [XmlInclude(typeof(EllipsoidType))]
  [XmlInclude(typeof(PrimeMeridianType))]
  [XmlInclude(typeof(AbstractDatumType))]
  [XmlInclude(typeof(TemporalDatumBaseType))]
  [XmlInclude(typeof(TemporalDatumType))]
  [XmlInclude(typeof(VerticalDatumType))]
  [XmlInclude(typeof(ImageDatumType))]
  [XmlInclude(typeof(EngineeringDatumType))]
  [XmlInclude(typeof(GeodeticDatumType))]
  [XmlInclude(typeof(CoordinateSystemAxisType))]
  [XmlInclude(typeof(AbstractCoordinateSystemType))]
  [XmlInclude(typeof(ObliqueCartesianCSType))]
  [XmlInclude(typeof(AffineCSType))]
  [XmlInclude(typeof(CylindricalCSType))]
  [XmlInclude(typeof(PolarCSType))]
  [XmlInclude(typeof(SphericalCSType))]
  [XmlInclude(typeof(UserDefinedCSType))]
  [XmlInclude(typeof(LinearCSType))]
  [XmlInclude(typeof(TemporalCSType))]
  [XmlInclude(typeof(TimeCSType))]
  [XmlInclude(typeof(VerticalCSType))]
  [XmlInclude(typeof(CartesianCSType))]
  [XmlInclude(typeof(EllipsoidalCSType))]
  [XmlInclude(typeof(AbstractGeneralOperationParameterType))]
  [XmlInclude(typeof(OperationParameterGroupType))]
  [XmlInclude(typeof(OperationParameterType))]
  [XmlInclude(typeof(OperationMethodType))]
  [XmlInclude(typeof(AbstractCoordinateOperationType))]
  [XmlInclude(typeof(PassThroughOperationType))]
  [XmlInclude(typeof(ConcatenatedOperationType))]
  [XmlInclude(typeof(AbstractGeneralTransformationType))]
  [XmlInclude(typeof(TransformationType))]
  [XmlInclude(typeof(AbstractGeneralConversionType))]
  [XmlInclude(typeof(ConversionType))]
  [XmlInclude(typeof(AbstractCRSType))]
  [XmlInclude(typeof(GeocentricCRSType))]
  [XmlInclude(typeof(TemporalCRSType))]
  [XmlInclude(typeof(ImageCRSType))]
  [XmlInclude(typeof(EngineeringCRSType))]
  [XmlInclude(typeof(VerticalCRSType))]
  [XmlInclude(typeof(CompoundCRSType))]
  [XmlInclude(typeof(GeographicCRSType))]
  [XmlInclude(typeof(GeodeticCRSType))]
  [XmlInclude(typeof(AbstractGeneralDerivedCRSType))]
  [XmlInclude(typeof(DerivedCRSType))]
  [XmlInclude(typeof(ProjectedCRSType))]
  [XmlInclude(typeof(UnitDefinitionType))]
  [XmlInclude(typeof(ConventionalUnitType))]
  [XmlInclude(typeof(DerivedUnitType))]
  [XmlInclude(typeof(BaseUnitType))]
  [XmlInclude(typeof(DefinitionProxyType))]
  [XmlInclude(typeof(DictionaryType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DefinitionType")]
  public class DefinitionType : DefinitionBaseType {
    #region Private fields
    private string _remarks;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("remarks", Order = 0)]
    public string remarks {
      get {
        return _remarks;
      }
      set {
        if ((_remarks == value)) {
          return;
        }
        if (((_remarks == null)
                    || (_remarks.Equals(value) != true))) {
          _remarks = value;
          OnPropertyChanged("remarks");
        }
      }
    }
  }

  [XmlInclude(typeof(DefinitionType))]
  [XmlInclude(typeof(TimeOrdinalEraType))]
  [XmlInclude(typeof(TimeCalendarEraType))]
  [XmlInclude(typeof(TimeReferenceSystemType))]
  [XmlInclude(typeof(TimeOrdinalReferenceSystemType))]
  [XmlInclude(typeof(TimeClockType))]
  [XmlInclude(typeof(TimeCalendarType))]
  [XmlInclude(typeof(TimeCoordinateSystemType))]
  [XmlInclude(typeof(IdentifiedObjectType))]
  [XmlInclude(typeof(EllipsoidType))]
  [XmlInclude(typeof(PrimeMeridianType))]
  [XmlInclude(typeof(AbstractDatumType))]
  [XmlInclude(typeof(TemporalDatumBaseType))]
  [XmlInclude(typeof(TemporalDatumType))]
  [XmlInclude(typeof(VerticalDatumType))]
  [XmlInclude(typeof(ImageDatumType))]
  [XmlInclude(typeof(EngineeringDatumType))]
  [XmlInclude(typeof(GeodeticDatumType))]
  [XmlInclude(typeof(CoordinateSystemAxisType))]
  [XmlInclude(typeof(AbstractCoordinateSystemType))]
  [XmlInclude(typeof(ObliqueCartesianCSType))]
  [XmlInclude(typeof(AffineCSType))]
  [XmlInclude(typeof(CylindricalCSType))]
  [XmlInclude(typeof(PolarCSType))]
  [XmlInclude(typeof(SphericalCSType))]
  [XmlInclude(typeof(UserDefinedCSType))]
  [XmlInclude(typeof(LinearCSType))]
  [XmlInclude(typeof(TemporalCSType))]
  [XmlInclude(typeof(TimeCSType))]
  [XmlInclude(typeof(VerticalCSType))]
  [XmlInclude(typeof(CartesianCSType))]
  [XmlInclude(typeof(EllipsoidalCSType))]
  [XmlInclude(typeof(AbstractGeneralOperationParameterType))]
  [XmlInclude(typeof(OperationParameterGroupType))]
  [XmlInclude(typeof(OperationParameterType))]
  [XmlInclude(typeof(OperationMethodType))]
  [XmlInclude(typeof(AbstractCoordinateOperationType))]
  [XmlInclude(typeof(PassThroughOperationType))]
  [XmlInclude(typeof(ConcatenatedOperationType))]
  [XmlInclude(typeof(AbstractGeneralTransformationType))]
  [XmlInclude(typeof(TransformationType))]
  [XmlInclude(typeof(AbstractGeneralConversionType))]
  [XmlInclude(typeof(ConversionType))]
  [XmlInclude(typeof(AbstractCRSType))]
  [XmlInclude(typeof(GeocentricCRSType))]
  [XmlInclude(typeof(TemporalCRSType))]
  [XmlInclude(typeof(ImageCRSType))]
  [XmlInclude(typeof(EngineeringCRSType))]
  [XmlInclude(typeof(VerticalCRSType))]
  [XmlInclude(typeof(CompoundCRSType))]
  [XmlInclude(typeof(GeographicCRSType))]
  [XmlInclude(typeof(GeodeticCRSType))]
  [XmlInclude(typeof(AbstractGeneralDerivedCRSType))]
  [XmlInclude(typeof(DerivedCRSType))]
  [XmlInclude(typeof(ProjectedCRSType))]
  [XmlInclude(typeof(UnitDefinitionType))]
  [XmlInclude(typeof(ConventionalUnitType))]
  [XmlInclude(typeof(DerivedUnitType))]
  [XmlInclude(typeof(BaseUnitType))]
  [XmlInclude(typeof(DefinitionProxyType))]
  [XmlInclude(typeof(DictionaryType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DefinitionBaseType")]
  public class DefinitionBaseType : AbstractGMLType {
  }

  [XmlInclude(typeof(ArrayType))]
  [XmlInclude(typeof(AbstractTopologyType))]
  [XmlInclude(typeof(TopoComplexType))]
  [XmlInclude(typeof(TopoVolumeType))]
  [XmlInclude(typeof(TopoSurfaceType))]
  [XmlInclude(typeof(TopoCurveType))]
  [XmlInclude(typeof(TopoPointType))]
  [XmlInclude(typeof(AbstractTopoPrimitiveType))]
  [XmlInclude(typeof(TopoSolidType))]
  [XmlInclude(typeof(NodeType))]
  [XmlInclude(typeof(EdgeType))]
  [XmlInclude(typeof(FaceType))]
  [XmlInclude(typeof(CompositeValueType))]
  [XmlInclude(typeof(ValueArrayType))]
  [XmlInclude(typeof(AbstractTimeSliceType))]
  [XmlInclude(typeof(MovingObjectStatusType))]
  [XmlInclude(typeof(AbstractFeatureType))]
  [XmlInclude(typeof(ObservationType))]
  [XmlInclude(typeof(DirectedObservationType))]
  [XmlInclude(typeof(DirectedObservationAtDistanceType))]
  [XmlInclude(typeof(AbstractCoverageType))]
  [XmlInclude(typeof(AbstractContinuousCoverageType))]
  [XmlInclude(typeof(AbstractDiscreteCoverageType))]
  [XmlInclude(typeof(RectifiedGridCoverageType))]
  [XmlInclude(typeof(GridCoverageType))]
  [XmlInclude(typeof(MultiSolidCoverageType))]
  [XmlInclude(typeof(MultiSurfaceCoverageType))]
  [XmlInclude(typeof(MultiCurveCoverageType))]
  [XmlInclude(typeof(MultiPointCoverageType))]
  [XmlInclude(typeof(DynamicFeatureType))]
  [XmlInclude(typeof(DynamicFeatureCollectionType))]
  [XmlInclude(typeof(AbstractFeatureCollectionType))]
  [XmlInclude(typeof(FeatureCollectionType))]
  [XmlInclude(typeof(BoundedFeatureType))]
  [XmlInclude(typeof(AbstractTimeObjectType))]
  [XmlInclude(typeof(AbstractTimeComplexType))]
  [XmlInclude(typeof(TimeTopologyComplexType))]
  [XmlInclude(typeof(AbstractTimePrimitiveType))]
  [XmlInclude(typeof(AbstractTimeTopologyPrimitiveType))]
  [XmlInclude(typeof(TimeEdgeType))]
  [XmlInclude(typeof(TimeNodeType))]
  [XmlInclude(typeof(AbstractTimeGeometricPrimitiveType))]
  [XmlInclude(typeof(TimePeriodType))]
  [XmlInclude(typeof(TimeInstantType))]
  [XmlInclude(typeof(AbstractGeometryType))]
  [XmlInclude(typeof(GridType))]
  [XmlInclude(typeof(RectifiedGridType))]
  [XmlInclude(typeof(GeometricComplexType))]
  [XmlInclude(typeof(AbstractGeometricAggregateType))]
  [XmlInclude(typeof(MultiSolidType))]
  [XmlInclude(typeof(MultiSurfaceType))]
  [XmlInclude(typeof(MultiCurveType))]
  [XmlInclude(typeof(MultiPointType))]
  [XmlInclude(typeof(MultiGeometryType))]
  [XmlInclude(typeof(AbstractGeometricPrimitiveType))]
  [XmlInclude(typeof(AbstractSolidType))]
  [XmlInclude(typeof(CompositeSolidType))]
  [XmlInclude(typeof(SolidType))]
  [XmlInclude(typeof(AbstractSurfaceType))]
  [XmlInclude(typeof(CompositeSurfaceType))]
  [XmlInclude(typeof(OrientableSurfaceType))]
  [XmlInclude(typeof(SurfaceType))]
  [XmlInclude(typeof(TriangulatedSurfaceType))]
  [XmlInclude(typeof(TinType))]
  [XmlInclude(typeof(PolyhedralSurfaceType))]
  [XmlInclude(typeof(PolygonType))]
  [XmlInclude(typeof(AbstractCurveType))]
  [XmlInclude(typeof(CompositeCurveType))]
  [XmlInclude(typeof(OrientableCurveType))]
  [XmlInclude(typeof(CurveType))]
  [XmlInclude(typeof(LineStringType))]
  [XmlInclude(typeof(PointType))]
  [XmlInclude(typeof(DefinitionBaseType))]
  [XmlInclude(typeof(DefinitionType))]
  [XmlInclude(typeof(TimeOrdinalEraType))]
  [XmlInclude(typeof(TimeCalendarEraType))]
  [XmlInclude(typeof(TimeReferenceSystemType))]
  [XmlInclude(typeof(TimeOrdinalReferenceSystemType))]
  [XmlInclude(typeof(TimeClockType))]
  [XmlInclude(typeof(TimeCalendarType))]
  [XmlInclude(typeof(TimeCoordinateSystemType))]
  [XmlInclude(typeof(IdentifiedObjectType))]
  [XmlInclude(typeof(EllipsoidType))]
  [XmlInclude(typeof(PrimeMeridianType))]
  [XmlInclude(typeof(AbstractDatumType))]
  [XmlInclude(typeof(TemporalDatumBaseType))]
  [XmlInclude(typeof(TemporalDatumType))]
  [XmlInclude(typeof(VerticalDatumType))]
  [XmlInclude(typeof(ImageDatumType))]
  [XmlInclude(typeof(EngineeringDatumType))]
  [XmlInclude(typeof(GeodeticDatumType))]
  [XmlInclude(typeof(CoordinateSystemAxisType))]
  [XmlInclude(typeof(AbstractCoordinateSystemType))]
  [XmlInclude(typeof(ObliqueCartesianCSType))]
  [XmlInclude(typeof(AffineCSType))]
  [XmlInclude(typeof(CylindricalCSType))]
  [XmlInclude(typeof(PolarCSType))]
  [XmlInclude(typeof(SphericalCSType))]
  [XmlInclude(typeof(UserDefinedCSType))]
  [XmlInclude(typeof(LinearCSType))]
  [XmlInclude(typeof(TemporalCSType))]
  [XmlInclude(typeof(TimeCSType))]
  [XmlInclude(typeof(VerticalCSType))]
  [XmlInclude(typeof(CartesianCSType))]
  [XmlInclude(typeof(EllipsoidalCSType))]
  [XmlInclude(typeof(AbstractGeneralOperationParameterType))]
  [XmlInclude(typeof(OperationParameterGroupType))]
  [XmlInclude(typeof(OperationParameterType))]
  [XmlInclude(typeof(OperationMethodType))]
  [XmlInclude(typeof(AbstractCoordinateOperationType))]
  [XmlInclude(typeof(PassThroughOperationType))]
  [XmlInclude(typeof(ConcatenatedOperationType))]
  [XmlInclude(typeof(AbstractGeneralTransformationType))]
  [XmlInclude(typeof(TransformationType))]
  [XmlInclude(typeof(AbstractGeneralConversionType))]
  [XmlInclude(typeof(ConversionType))]
  [XmlInclude(typeof(AbstractCRSType))]
  [XmlInclude(typeof(GeocentricCRSType))]
  [XmlInclude(typeof(TemporalCRSType))]
  [XmlInclude(typeof(ImageCRSType))]
  [XmlInclude(typeof(EngineeringCRSType))]
  [XmlInclude(typeof(VerticalCRSType))]
  [XmlInclude(typeof(CompoundCRSType))]
  [XmlInclude(typeof(GeographicCRSType))]
  [XmlInclude(typeof(GeodeticCRSType))]
  [XmlInclude(typeof(AbstractGeneralDerivedCRSType))]
  [XmlInclude(typeof(DerivedCRSType))]
  [XmlInclude(typeof(ProjectedCRSType))]
  [XmlInclude(typeof(UnitDefinitionType))]
  [XmlInclude(typeof(ConventionalUnitType))]
  [XmlInclude(typeof(DerivedUnitType))]
  [XmlInclude(typeof(BaseUnitType))]
  [XmlInclude(typeof(DefinitionProxyType))]
  [XmlInclude(typeof(DictionaryType))]
  [XmlInclude(typeof(BagType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGMLType")]
  public abstract class AbstractGMLType : INotifyPropertyChanged {
    #region Private fields
    private List<MetaDataPropertyType> _metaDataProperty;
    private StringOrRefType _description;
    private ReferenceType _descriptionReference;
    private CodeWithAuthorityType _identifier;
    private List<CodeType> _name;
    private string _id;
    #endregion

    /// <summary>
    /// AbstractGMLType class constructor
    /// </summary>
    public AbstractGMLType() {
      _name = new List<CodeType>();
      _identifier = new CodeWithAuthorityType();
      _descriptionReference = new ReferenceType();
      _description = new StringOrRefType();
      _metaDataProperty = new List<MetaDataPropertyType>();
    }

    [XmlElement("metaDataProperty", Order = 0)]
    [JsonProperty("metaDataProperty", Order = 0)]
    public List<MetaDataPropertyType> metaDataProperty {
      get {
        return _metaDataProperty;
      }
      set {
        if ((_metaDataProperty == value)) {
          return;
        }
        if (((_metaDataProperty == null)
                    || (_metaDataProperty.Equals(value) != true))) {
          _metaDataProperty = value;
          OnPropertyChanged("metaDataProperty");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("description", Order = 1)]
    public StringOrRefType description {
      get {
        return _description;
      }
      set {
        if ((_description == value)) {
          return;
        }
        if (((_description == null)
                    || (_description.Equals(value) != true))) {
          _description = value;
          OnPropertyChanged("description");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("descriptionReference", Order = 2)]
    public ReferenceType descriptionReference {
      get {
        return _descriptionReference;
      }
      set {
        if ((_descriptionReference == value)) {
          return;
        }
        if (((_descriptionReference == null)
                    || (_descriptionReference.Equals(value) != true))) {
          _descriptionReference = value;
          OnPropertyChanged("descriptionReference");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("identifier", Order = 3)]
    public CodeWithAuthorityType identifier {
      get {
        return _identifier;
      }
      set {
        if ((_identifier == value)) {
          return;
        }
        if (((_identifier == null)
                    || (_identifier.Equals(value) != true))) {
          _identifier = value;
          OnPropertyChanged("identifier");
        }
      }
    }

    [XmlElement("name", Order = 4)]
    [JsonProperty("name", Order = 4)]
    public List<CodeType> name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "ID")]
    [JsonProperty("id")]
    public string id {
      get {
        return _id;
      }
      set {
        if ((_id == value)) {
          return;
        }
        if (((_id == null)
                    || (_id.Equals(value) != true))) {
          _id = value;
          OnPropertyChanged("id");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MetaDataPropertyType")]
  public class MetaDataPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractMetaDataType _abstractMetaData;
    private string _nilReason;
    private string _remoteSchema;
    private string _about;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractMetaData", Order = 0)]
    public AbstractMetaDataType AbstractMetaData {
      get {
        return _abstractMetaData;
      }
      set {
        if ((_abstractMetaData == value)) {
          return;
        }
        if (((_abstractMetaData == null)
                    || (_abstractMetaData.Equals(value) != true))) {
          _abstractMetaData = value;
          OnPropertyChanged("AbstractMetaData");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("about")]
    public string about {
      get {
        return _about;
      }
      set {
        if ((_about == value)) {
          return;
        }
        if (((_about == null)
                    || (_about.Equals(value) != true))) {
          _about = value;
          OnPropertyChanged("about");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(GenericMetaDataType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractMetaDataType")]
  public abstract class AbstractMetaDataType : INotifyPropertyChanged {
    #region Private fields
    private List<string> _text;
    private string _id;
    #endregion

    /// <summary>
    /// AbstractMetaDataType class constructor
    /// </summary>
    public AbstractMetaDataType() {
      _text = new List<string>();
    }

    [XmlTextAttribute]
    [JsonProperty("Text")]
    public List<string> Text {
      get {
        return _text;
      }
      set {
        if ((_text == value)) {
          return;
        }
        if (((_text == null)
                    || (_text.Equals(value) != true))) {
          _text = value;
          OnPropertyChanged("Text");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "ID")]
    [JsonProperty("id")]
    public string id {
      get {
        return _id;
      }
      set {
        if ((_id == value)) {
          return;
        }
        if (((_id == null)
                    || (_id.Equals(value) != true))) {
          _id = value;
          OnPropertyChanged("id");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GenericMetaDataType")]
  public class GenericMetaDataType : AbstractMetaDataType {
    #region Private fields
    private List<System.Xml.XmlElement> _any;
    #endregion

    /// <summary>
    /// GenericMetaDataType class constructor
    /// </summary>
    public GenericMetaDataType() {
      _any = new List<System.Xml.XmlElement>();
    }

    [XmlAnyElementAttribute(Order = 0)]
    [JsonProperty("Any")]
    public List<System.Xml.XmlElement> Any {
      get {
        return _any;
      }
      set {
        if ((_any == value)) {
          return;
        }
        if (((_any == null)
                    || (_any.Equals(value) != true))) {
          _any = value;
          OnPropertyChanged("Any");
        }
      }
    }
  }

  /// <summary>
  /// gml:ReferenceType is intended to be used in application schemas directly, if a property element shall use a “by-reference only” encoding.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ReferenceType")]
  public class ReferenceType : INotifyPropertyChanged {
    #region Private fields
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ReferenceType class constructor
    /// </summary>
    public ReferenceType() {
      _owns = false;
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:CodeWithAuthorityType requires that the codeSpace attribute is provided in an instance.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CodeWithAuthorityType")]
  public class CodeWithAuthorityType : CodeType {
  }

  /// <summary>
  /// gml:CodeType is a generalized type to be used for a term, keyword or name.
  /// It adds a XML attribute codeSpace to a term, where the value of the codeSpace attribute (if present) shall indicate a dictionary, thesaurus, classification scheme, authority, or pattern for the term.
  /// </summary>
  [XmlInclude(typeof(CodeWithAuthorityType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CodeType")]
  public class CodeType : INotifyPropertyChanged {
    #region Private fields
    private string _codeSpace;
    private string _value;
    #endregion

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("codeSpace")]
    public string codeSpace {
      get {
        return _codeSpace;
      }
      set {
        if ((_codeSpace == value)) {
          return;
        }
        if (((_codeSpace == null)
                    || (_codeSpace.Equals(value) != true))) {
          _codeSpace = value;
          OnPropertyChanged("codeSpace");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArrayType")]
  public class ArrayType : AbstractGMLType {
    #region Private fields
    private ArrayAssociationType _members;
    #endregion

    /// <summary>
    /// ArrayType class constructor
    /// </summary>
    public ArrayType() {
      _members = new ArrayAssociationType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("members", Order = 0)]
    public ArrayAssociationType members {
      get {
        return _members;
      }
      set {
        if ((_members == value)) {
          return;
        }
        if (((_members == null)
                    || (_members.Equals(value) != true))) {
          _members = value;
          OnPropertyChanged("members");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArrayAssociationType")]
  public class ArrayAssociationType : INotifyPropertyChanged {
    #region Private fields
    private List<object> _abstractObject;
    private bool _owns;
    #endregion

    /// <summary>
    /// ArrayAssociationType class constructor
    /// </summary>
    public ArrayAssociationType() {
      _abstractObject = new List<object>();
      _owns = false;
    }

    [XmlElement("AbstractObject", Order = 0)]
    [JsonProperty("AbstractObject", Order = 0)]
    public List<object> AbstractObject {
      get {
        return _abstractObject;
      }
      set {
        if ((_abstractObject == value)) {
          return;
        }
        if (((_abstractObject == null)
                    || (_abstractObject.Equals(value) != true))) {
          _abstractObject = value;
          OnPropertyChanged("AbstractObject");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// This abstract type supplies the root or base type for all topological elements including primitives and complexes. It inherits AbstractGMLType and hence can be identified using the gml:id attribute.
  /// </summary>
  [XmlInclude(typeof(TopoComplexType))]
  [XmlInclude(typeof(TopoVolumeType))]
  [XmlInclude(typeof(TopoSurfaceType))]
  [XmlInclude(typeof(TopoCurveType))]
  [XmlInclude(typeof(TopoPointType))]
  [XmlInclude(typeof(AbstractTopoPrimitiveType))]
  [XmlInclude(typeof(TopoSolidType))]
  [XmlInclude(typeof(NodeType))]
  [XmlInclude(typeof(EdgeType))]
  [XmlInclude(typeof(FaceType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTopologyType")]
  public abstract class AbstractTopologyType : AbstractGMLType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoComplexType")]
  public class TopoComplexType : AbstractTopologyType {
    #region Private fields
    private TopoComplexMemberType _maximalComplex;
    private List<TopoComplexMemberType> _superComplex;
    private List<TopoComplexMemberType> _subComplex;
    private List<TopoPrimitiveMemberType> _topoPrimitiveMember;
    private TopoPrimitiveArrayAssociationType _topoPrimitiveMembers;
    private bool _isMaximal;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// TopoComplexType class constructor
    /// </summary>
    public TopoComplexType() {
      _topoPrimitiveMembers = new TopoPrimitiveArrayAssociationType();
      _topoPrimitiveMember = new List<TopoPrimitiveMemberType>();
      _subComplex = new List<TopoComplexMemberType>();
      _superComplex = new List<TopoComplexMemberType>();
      _maximalComplex = new TopoComplexMemberType();
      _isMaximal = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("maximalComplex", Order = 0)]
    public TopoComplexMemberType maximalComplex {
      get {
        return _maximalComplex;
      }
      set {
        if ((_maximalComplex == value)) {
          return;
        }
        if (((_maximalComplex == null)
                    || (_maximalComplex.Equals(value) != true))) {
          _maximalComplex = value;
          OnPropertyChanged("maximalComplex");
        }
      }
    }

    [XmlElement("superComplex", Order = 1)]
    [JsonProperty("superComplex", Order = 1)]
    public List<TopoComplexMemberType> superComplex {
      get {
        return _superComplex;
      }
      set {
        if ((_superComplex == value)) {
          return;
        }
        if (((_superComplex == null)
                    || (_superComplex.Equals(value) != true))) {
          _superComplex = value;
          OnPropertyChanged("superComplex");
        }
      }
    }

    [XmlElement("subComplex", Order = 2)]
    [JsonProperty("subComplex", Order = 2)]
    public List<TopoComplexMemberType> subComplex {
      get {
        return _subComplex;
      }
      set {
        if ((_subComplex == value)) {
          return;
        }
        if (((_subComplex == null)
                    || (_subComplex.Equals(value) != true))) {
          _subComplex = value;
          OnPropertyChanged("subComplex");
        }
      }
    }

    [XmlElement("topoPrimitiveMember", Order = 3)]
    [JsonProperty("topoPrimitiveMember", Order = 3)]
    public List<TopoPrimitiveMemberType> topoPrimitiveMember {
      get {
        return _topoPrimitiveMember;
      }
      set {
        if ((_topoPrimitiveMember == value)) {
          return;
        }
        if (((_topoPrimitiveMember == null)
                    || (_topoPrimitiveMember.Equals(value) != true))) {
          _topoPrimitiveMember = value;
          OnPropertyChanged("topoPrimitiveMember");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("topoPrimitiveMembers", Order = 4)]
    public TopoPrimitiveArrayAssociationType topoPrimitiveMembers {
      get {
        return _topoPrimitiveMembers;
      }
      set {
        if ((_topoPrimitiveMembers == value)) {
          return;
        }
        if (((_topoPrimitiveMembers == null)
                    || (_topoPrimitiveMembers.Equals(value) != true))) {
          _topoPrimitiveMembers = value;
          OnPropertyChanged("topoPrimitiveMembers");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("isMaximal")]
    public bool isMaximal {
      get {
        return _isMaximal;
      }
      set {
        if ((_isMaximal.Equals(value) != true)) {
          _isMaximal = value;
          OnPropertyChanged("isMaximal");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoComplexMemberType")]
  public class TopoComplexMemberType : INotifyPropertyChanged {
    #region Private fields
    private TopoComplexType _topoComplex;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TopoComplexMemberType class constructor
    /// </summary>
    public TopoComplexMemberType() {
      _topoComplex = new TopoComplexType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TopoComplex", Order = 0)]
    public TopoComplexType TopoComplex {
      get {
        return _topoComplex;
      }
      set {
        if ((_topoComplex == value)) {
          return;
        }
        if (((_topoComplex == null)
                    || (_topoComplex.Equals(value) != true))) {
          _topoComplex = value;
          OnPropertyChanged("TopoComplex");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoPrimitiveMemberType")]
  public class TopoPrimitiveMemberType : INotifyPropertyChanged {
    #region Private fields
    private AbstractTopoPrimitiveType _abstractTopoPrimitive;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TopoPrimitiveMemberType class constructor
    /// </summary>
    public TopoPrimitiveMemberType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractTopoPrimitive", Order = 0)]
    public AbstractTopoPrimitiveType AbstractTopoPrimitive {
      get {
        return _abstractTopoPrimitive;
      }
      set {
        if ((_abstractTopoPrimitive == value)) {
          return;
        }
        if (((_abstractTopoPrimitive == null)
                    || (_abstractTopoPrimitive.Equals(value) != true))) {
          _abstractTopoPrimitive = value;
          OnPropertyChanged("AbstractTopoPrimitive");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(TopoSolidType))]
  [XmlInclude(typeof(NodeType))]
  [XmlInclude(typeof(EdgeType))]
  [XmlInclude(typeof(FaceType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTopoPrimitiveType")]
  public abstract class AbstractTopoPrimitiveType : AbstractTopologyType {
    #region Private fields
    private List<IsolatedPropertyType> _isolated;
    private ContainerPropertyType _container;
    #endregion

    /// <summary>
    /// AbstractTopoPrimitiveType class constructor
    /// </summary>
    public AbstractTopoPrimitiveType() {
      _container = new ContainerPropertyType();
      _isolated = new List<IsolatedPropertyType>();
    }

    [XmlElement("isolated", Order = 0)]
    [JsonProperty("isolated", Order = 0)]
    public List<IsolatedPropertyType> isolated {
      get {
        return _isolated;
      }
      set {
        if ((_isolated == value)) {
          return;
        }
        if (((_isolated == null)
                    || (_isolated.Equals(value) != true))) {
          _isolated = value;
          OnPropertyChanged("isolated");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("container", Order = 1)]
    public ContainerPropertyType container {
      get {
        return _container;
      }
      set {
        if ((_container == value)) {
          return;
        }
        if (((_container == null)
                    || (_container.Equals(value) != true))) {
          _container = value;
          OnPropertyChanged("container");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("IsolatedPropertyType")]
  public class IsolatedPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractTopoPrimitiveType _item;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// IsolatedPropertyType class constructor
    /// </summary>
    public IsolatedPropertyType() {
      _owns = false;
    }

    [XmlElement("Edge", typeof(EdgeType), Order = 0)]
    [XmlElement("Node", typeof(NodeType), Order = 0)]
    public AbstractTopoPrimitiveType Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EdgeType")]
  public class EdgeType : AbstractTopoPrimitiveType {
    #region Private fields
    private List<DirectedNodePropertyType> _directedNode;
    private List<DirectedFacePropertyType> _directedFace;
    private CurvePropertyType _curveProperty;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// EdgeType class constructor
    /// </summary>
    public EdgeType() {
      _curveProperty = new CurvePropertyType();
      _directedFace = new List<DirectedFacePropertyType>();
      _directedNode = new List<DirectedNodePropertyType>();
    }

    [XmlElement("directedNode", Order = 0)]
    [RequiredAttribute()]
    [JsonProperty("directedNode", Order = 0)]
    public List<DirectedNodePropertyType> directedNode {
      get {
        return _directedNode;
      }
      set {
        if ((_directedNode == value)) {
          return;
        }
        if (((_directedNode == null)
                    || (_directedNode.Equals(value) != true))) {
          ValidationContext validatorPropContext = new ValidationContext(this, null, null);
          validatorPropContext.MemberName = "directedNode";
          Validator.ValidateProperty(value, validatorPropContext);
          _directedNode = value;
          OnPropertyChanged("directedNode");
        }
      }
    }

    [XmlElement("directedFace", Order = 1)]
    [JsonProperty("directedFace", Order = 1)]
    public List<DirectedFacePropertyType> directedFace {
      get {
        return _directedFace;
      }
      set {
        if ((_directedFace == value)) {
          return;
        }
        if (((_directedFace == null)
                    || (_directedFace.Equals(value) != true))) {
          _directedFace = value;
          OnPropertyChanged("directedFace");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("curveProperty", Order = 2)]
    public CurvePropertyType curveProperty {
      get {
        return _curveProperty;
      }
      set {
        if ((_curveProperty == value)) {
          return;
        }
        if (((_curveProperty == null)
                    || (_curveProperty.Equals(value) != true))) {
          _curveProperty = value;
          OnPropertyChanged("curveProperty");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectedNodePropertyType")]
  public class DirectedNodePropertyType : INotifyPropertyChanged {
    #region Private fields
    private NodeType _node;
    private SignType _orientation;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// DirectedNodePropertyType class constructor
    /// </summary>
    public DirectedNodePropertyType() {
      _node = new NodeType();
      _orientation = SignType.Item1;
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Node", Order = 0)]
    public NodeType Node {
      get {
        return _node;
      }
      set {
        if ((_node == value)) {
          return;
        }
        if (((_node == null)
                    || (_node.Equals(value) != true))) {
          _node = value;
          OnPropertyChanged("Node");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(SignType.Item1)]
    [JsonProperty("orientation")]
    public SignType orientation {
      get {
        return _orientation;
      }
      set {
        if ((_orientation.Equals(value) != true)) {
          _orientation = value;
          OnPropertyChanged("orientation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("NodeType")]
  public class NodeType : AbstractTopoPrimitiveType {
    #region Private fields
    private List<DirectedEdgePropertyType> _directedEdge;
    private PointPropertyType _pointProperty;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// NodeType class constructor
    /// </summary>
    public NodeType() {
      _pointProperty = new PointPropertyType();
      _directedEdge = new List<DirectedEdgePropertyType>();
    }

    [XmlElement("directedEdge", Order = 0)]
    [JsonProperty("directedEdge", Order = 0)]
    public List<DirectedEdgePropertyType> directedEdge {
      get {
        return _directedEdge;
      }
      set {
        if ((_directedEdge == value)) {
          return;
        }
        if (((_directedEdge == null)
                    || (_directedEdge.Equals(value) != true))) {
          _directedEdge = value;
          OnPropertyChanged("directedEdge");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("pointProperty", Order = 1)]
    public PointPropertyType pointProperty {
      get {
        return _pointProperty;
      }
      set {
        if ((_pointProperty == value)) {
          return;
        }
        if (((_pointProperty == null)
                    || (_pointProperty.Equals(value) != true))) {
          _pointProperty = value;
          OnPropertyChanged("pointProperty");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectedEdgePropertyType")]
  public class DirectedEdgePropertyType : INotifyPropertyChanged {
    #region Private fields
    private EdgeType _edge;
    private SignType _orientation;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// DirectedEdgePropertyType class constructor
    /// </summary>
    public DirectedEdgePropertyType() {
      _edge = new EdgeType();
      _orientation = SignType.Item1;
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Edge", Order = 0)]
    public EdgeType Edge {
      get {
        return _edge;
      }
      set {
        if ((_edge == value)) {
          return;
        }
        if (((_edge == null)
                    || (_edge.Equals(value) != true))) {
          _edge = value;
          OnPropertyChanged("Edge");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(SignType.Item1)]
    [JsonProperty("orientation")]
    public SignType orientation {
      get {
        return _orientation;
      }
      set {
        if ((_orientation.Equals(value) != true)) {
          _orientation = value;
          OnPropertyChanged("orientation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:SignType is a convenience type with values “+” (plus) and “-“ (minus).
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum SignType {
    [XmlEnumAttribute("-")]
    [EnumMember(Value = "-")]
    Item,
    [XmlEnumAttribute("+")]
    [EnumMember(Value = "+")]
    Item1,
  }

  /// <summary>
  /// A property that has a point as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PointPropertyType")]
  public class PointPropertyType : INotifyPropertyChanged {
    #region Private fields
    private PointType _point;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// PointPropertyType class constructor
    /// </summary>
    public PointPropertyType() {
      _point = new PointType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Point", Order = 0)]
    public PointType Point {
      get {
        return _point;
      }
      set {
        if ((_point == value)) {
          return;
        }
        if (((_point == null)
                    || (_point.Equals(value) != true))) {
          _point = value;
          OnPropertyChanged("Point");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PointType")]
  public class PointType : AbstractGeometricPrimitiveType {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }
  }

  /// <summary>
  /// This type is deprecated for tuples with ordinate values that are numbers.
  /// CoordinatesType is a text string, intended to be used to record an array of tuples or coordinates.
  /// While it is not possible to enforce the internal structure of the string through schema validation, some optional attributes have been provided in previous versions of GML to support a description of the internal structure. These attributes are deprecated. The attributes were intended to be used as follows:
  /// Decimal	symbol used for a decimal point (default=”.” a stop or period)
  /// cs        	symbol used to separate components within a tuple or coordinate string (default=”,” a comma)
  /// ts        	symbol used to separate tuples or coordinate strings (default=” “ a space)
  /// Since it is based on the XML Schema string type, CoordinatesType may be used in the construction of tables of tuples or arrays of tuples, including ones that contain mixed text and numeric values.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CoordinatesType")]
  public class CoordinatesType : INotifyPropertyChanged {
    #region Private fields
    private string _decimal;
    private string _cs;
    private string _ts;
    private string _value;
    #endregion

    /// <summary>
    /// CoordinatesType class constructor
    /// </summary>
    public CoordinatesType() {
      _decimal = ".";
      _cs = ",";
      _ts = " ";
    }

    [XmlAttribute]
    [DefaultValue(".")]
    [JsonProperty("decimal")]
    public string @decimal {
      get {
        return _decimal;
      }
      set {
        if ((_decimal == value)) {
          return;
        }
        if (((_decimal == null)
                    || (_decimal.Equals(value) != true))) {
          _decimal = value;
          OnPropertyChanged("decimal");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(",")]
    [JsonProperty("cs")]
    public string cs {
      get {
        return _cs;
      }
      set {
        if ((_cs == value)) {
          return;
        }
        if (((_cs == null)
                    || (_cs.Equals(value) != true))) {
          _cs = value;
          OnPropertyChanged("cs");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(" ")]
    [JsonProperty("ts")]
    public string ts {
      get {
        return _ts;
      }
      set {
        if ((_ts == value)) {
          return;
        }
        if (((_ts == null)
                    || (_ts.Equals(value) != true))) {
          _ts = value;
          OnPropertyChanged("ts");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Direct position instances hold the coordinates for a position within some coordinate reference system (CRS). Since direct positions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the srsName attribute will in general be missing, if this particular direct position is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
  /// if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc.
  /// </summary>
  [XmlInclude(typeof(VectorType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectPositionType")]
  public class DirectPositionType : INotifyPropertyChanged {
    #region Private fields
    private string _srsName;
    private string _srsDimension;
    private List<double> _text;
    #endregion

    /// <summary>
    /// DirectPositionType class constructor
    /// </summary>
    public DirectPositionType() {
      _text = new List<double>();
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("srsName")]
    public string srsName {
      get {
        return _srsName;
      }
      set {
        if ((_srsName == value)) {
          return;
        }
        if (((_srsName == null)
                    || (_srsName.Equals(value) != true))) {
          _srsName = value;
          OnPropertyChanged("srsName");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("srsDimension")]
    public string srsDimension {
      get {
        return _srsDimension;
      }
      set {
        if ((_srsDimension == value)) {
          return;
        }
        if (((_srsDimension == null)
                    || (_srsDimension.Equals(value) != true))) {
          _srsDimension = value;
          OnPropertyChanged("srsDimension");
        }
      }
    }

    [XmlAttribute]
    public List<double> Text {
      get {
        return _text;
      }
      set {
        if ((_text == value)) {
          return;
        }
        if (((_text == null)
                    || (_text.Equals(value) != true))) {
          _text = value;
          OnPropertyChanged("Text");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// For some applications the components of the position may be adjusted to yield a unit vector.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VectorType")]
  public class VectorType : DirectPositionType {
  }

  /// <summary>
  /// gml:AbstractGeometricPrimitiveType is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
  /// </summary>
  [XmlInclude(typeof(AbstractSolidType))]
  [XmlInclude(typeof(CompositeSolidType))]
  [XmlInclude(typeof(SolidType))]
  [XmlInclude(typeof(AbstractSurfaceType))]
  [XmlInclude(typeof(CompositeSurfaceType))]
  [XmlInclude(typeof(OrientableSurfaceType))]
  [XmlInclude(typeof(SurfaceType))]
  [XmlInclude(typeof(TriangulatedSurfaceType))]
  [XmlInclude(typeof(TinType))]
  [XmlInclude(typeof(PolyhedralSurfaceType))]
  [XmlInclude(typeof(PolygonType))]
  [XmlInclude(typeof(AbstractCurveType))]
  [XmlInclude(typeof(CompositeCurveType))]
  [XmlInclude(typeof(OrientableCurveType))]
  [XmlInclude(typeof(CurveType))]
  [XmlInclude(typeof(LineStringType))]
  [XmlInclude(typeof(PointType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeometricPrimitiveType")]
  public abstract class AbstractGeometricPrimitiveType : AbstractGeometryType {
  }

  /// <summary>
  /// All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute (gml:id), one or more names (elements identifier and name) and a description (elements description and descriptionReference) . It may be associated with a spatial reference system (attribute group gml:SRSReferenceGroup).
  /// The following rules shall be adhered to:
  /// -	Every geometry type shall derive from this abstract type.
  /// -	Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of AbstractGeometry.
  /// </summary>
  [XmlInclude(typeof(GridType))]
  [XmlInclude(typeof(RectifiedGridType))]
  [XmlInclude(typeof(GeometricComplexType))]
  [XmlInclude(typeof(AbstractGeometricAggregateType))]
  [XmlInclude(typeof(MultiSolidType))]
  [XmlInclude(typeof(MultiSurfaceType))]
  [XmlInclude(typeof(MultiCurveType))]
  [XmlInclude(typeof(MultiPointType))]
  [XmlInclude(typeof(MultiGeometryType))]
  [XmlInclude(typeof(AbstractGeometricPrimitiveType))]
  [XmlInclude(typeof(AbstractSolidType))]
  [XmlInclude(typeof(CompositeSolidType))]
  [XmlInclude(typeof(SolidType))]
  [XmlInclude(typeof(AbstractSurfaceType))]
  [XmlInclude(typeof(CompositeSurfaceType))]
  [XmlInclude(typeof(OrientableSurfaceType))]
  [XmlInclude(typeof(SurfaceType))]
  [XmlInclude(typeof(TriangulatedSurfaceType))]
  [XmlInclude(typeof(TinType))]
  [XmlInclude(typeof(PolyhedralSurfaceType))]
  [XmlInclude(typeof(PolygonType))]
  [XmlInclude(typeof(AbstractCurveType))]
  [XmlInclude(typeof(CompositeCurveType))]
  [XmlInclude(typeof(OrientableCurveType))]
  [XmlInclude(typeof(CurveType))]
  [XmlInclude(typeof(LineStringType))]
  [XmlInclude(typeof(PointType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeometryType")]
  public abstract class AbstractGeometryType : AbstractGMLType {
    #region Private fields
    private string _srsName;
    private string _srsDimension;
    #endregion

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("srsName")]
    public string srsName {
      get {
        return _srsName;
      }
      set {
        if ((_srsName == value)) {
          return;
        }
        if (((_srsName == null)
                    || (_srsName.Equals(value) != true))) {
          _srsName = value;
          OnPropertyChanged("srsName");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("srsDimension")]
    public string srsDimension {
      get {
        return _srsDimension;
      }
      set {
        if ((_srsDimension == value)) {
          return;
        }
        if (((_srsDimension == null)
                    || (_srsDimension.Equals(value) != true))) {
          _srsDimension = value;
          OnPropertyChanged("srsDimension");
        }
      }
    }
  }

  [XmlInclude(typeof(RectifiedGridType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridType")]
  public class GridType : AbstractGeometryType {
    #region Private fields
    private GridLimitsType _limits;
    private string[] _items;
    private ItemsChoiceType7[] _itemsElementName;
    private string _dimension;
    #endregion

    /// <summary>
    /// GridType class constructor
    /// </summary>
    public GridType() {
      _limits = new GridLimitsType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("limits", Order = 0)]
    public GridLimitsType limits {
      get {
        return _limits;
      }
      set {
        if ((_limits == value)) {
          return;
        }
        if (((_limits == null)
                    || (_limits.Equals(value) != true))) {
          _limits = value;
          OnPropertyChanged("limits");
        }
      }
    }

    [XmlElement("axisLabels", DataType = "NCName", Order = 1)]
    [XmlElement("axisName", Order = 1)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public string[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 2)]
    [XmlIgnore]
    public ItemsChoiceType7[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("dimension")]
    public string dimension {
      get {
        return _dimension;
      }
      set {
        if ((_dimension == value)) {
          return;
        }
        if (((_dimension == null)
                    || (_dimension.Equals(value) != true))) {
          _dimension = value;
          OnPropertyChanged("dimension");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridLimitsType")]
  public class GridLimitsType : INotifyPropertyChanged {
    #region Private fields
    private GridEnvelopeType _gridEnvelope;
    #endregion

    /// <summary>
    /// GridLimitsType class constructor
    /// </summary>
    public GridLimitsType() {
      _gridEnvelope = new GridEnvelopeType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("GridEnvelope", Order = 0)]
    public GridEnvelopeType GridEnvelope {
      get {
        return _gridEnvelope;
      }
      set {
        if ((_gridEnvelope == value)) {
          return;
        }
        if (((_gridEnvelope == null)
                    || (_gridEnvelope.Equals(value) != true))) {
          _gridEnvelope = value;
          OnPropertyChanged("GridEnvelope");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridEnvelopeType")]
  public class GridEnvelopeType : INotifyPropertyChanged {
    #region Private fields
    private string _low;
    private string _high;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("low", Order = 0)]
    public string low {
      get {
        return _low;
      }
      set {
        if ((_low == value)) {
          return;
        }
        if (((_low == null)
                    || (_low.Equals(value) != true))) {
          _low = value;
          OnPropertyChanged("low");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("high", Order = 1)]
    public string high {
      get {
        return _high;
      }
      set {
        if ((_high == value)) {
          return;
        }
        if (((_high == null)
                    || (_high.Equals(value) != true))) {
          _high = value;
          OnPropertyChanged("high");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType7 {
    axisLabels,
    axisName,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RectifiedGridType")]
  public class RectifiedGridType : GridType {
    #region Private fields
    private PointPropertyType _origin;
    private List<VectorType> _offsetVector;
    #endregion

    /// <summary>
    /// RectifiedGridType class constructor
    /// </summary>
    public RectifiedGridType() {
      _offsetVector = new List<VectorType>();
      _origin = new PointPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("origin", Order = 0)]
    public PointPropertyType origin {
      get {
        return _origin;
      }
      set {
        if ((_origin == value)) {
          return;
        }
        if (((_origin == null)
                    || (_origin.Equals(value) != true))) {
          _origin = value;
          OnPropertyChanged("origin");
        }
      }
    }

    [XmlElement("offsetVector", Order = 1)]
    [JsonProperty("offsetVector", Order = 1)]
    public List<VectorType> offsetVector {
      get {
        return _offsetVector;
      }
      set {
        if ((_offsetVector == value)) {
          return;
        }
        if (((_offsetVector == null)
                    || (_offsetVector.Equals(value) != true))) {
          _offsetVector = value;
          OnPropertyChanged("offsetVector");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeometricComplexType")]
  public class GeometricComplexType : AbstractGeometryType {
    #region Private fields
    private List<GeometricPrimitivePropertyType> _element;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// GeometricComplexType class constructor
    /// </summary>
    public GeometricComplexType() {
      _element = new List<GeometricPrimitivePropertyType>();
    }

    [XmlElement("element", Order = 0)]
    [JsonProperty("element", Order = 0)]
    public List<GeometricPrimitivePropertyType> element {
      get {
        return _element;
      }
      set {
        if ((_element == value)) {
          return;
        }
        if (((_element == null)
                    || (_element.Equals(value) != true))) {
          _element = value;
          OnPropertyChanged("element");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  /// <summary>
  /// A property that has a geometric primitive as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeometricPrimitivePropertyType")]
  public class GeometricPrimitivePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeometricPrimitiveType _abstractGeometricPrimitive;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// GeometricPrimitivePropertyType class constructor
    /// </summary>
    public GeometricPrimitivePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeometricPrimitive", Order = 0)]
    public AbstractGeometricPrimitiveType AbstractGeometricPrimitive {
      get {
        return _abstractGeometricPrimitive;
      }
      set {
        if ((_abstractGeometricPrimitive == value)) {
          return;
        }
        if (((_abstractGeometricPrimitive == null)
                    || (_abstractGeometricPrimitive.Equals(value) != true))) {
          _abstractGeometricPrimitive = value;
          OnPropertyChanged("AbstractGeometricPrimitive");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum AggregationType {
    set,
    bag,
    sequence,
    array,
    record,
    table,
  }

  [XmlInclude(typeof(MultiSolidType))]
  [XmlInclude(typeof(MultiSurfaceType))]
  [XmlInclude(typeof(MultiCurveType))]
  [XmlInclude(typeof(MultiPointType))]
  [XmlInclude(typeof(MultiGeometryType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeometricAggregateType")]
  public abstract class AbstractGeometricAggregateType : AbstractGeometryType {
    #region Private fields
    private AggregationType _aggregationType;
    #endregion

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSolidType")]
  public class MultiSolidType : AbstractGeometricAggregateType {
    #region Private fields
    private List<SolidPropertyType> _solidMember;
    private SolidArrayPropertyType _solidMembers;
    #endregion

    /// <summary>
    /// MultiSolidType class constructor
    /// </summary>
    public MultiSolidType() {
      _solidMembers = new SolidArrayPropertyType();
      _solidMember = new List<SolidPropertyType>();
    }

    [XmlElement("solidMember", Order = 0)]
    [JsonProperty("solidMember", Order = 0)]
    public List<SolidPropertyType> solidMember {
      get {
        return _solidMember;
      }
      set {
        if ((_solidMember == value)) {
          return;
        }
        if (((_solidMember == null)
                    || (_solidMember.Equals(value) != true))) {
          _solidMember = value;
          OnPropertyChanged("solidMember");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("solidMembers", Order = 1)]
    public SolidArrayPropertyType solidMembers {
      get {
        return _solidMembers;
      }
      set {
        if ((_solidMembers == value)) {
          return;
        }
        if (((_solidMembers == null)
                    || (_solidMembers.Equals(value) != true))) {
          _solidMembers = value;
          OnPropertyChanged("solidMembers");
        }
      }
    }
  }

  /// <summary>
  /// A property that has a solid as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SolidPropertyType")]
  public class SolidPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractSolidType _abstractSolid;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// SolidPropertyType class constructor
    /// </summary>
    public SolidPropertyType() {
      _abstractSolid = new AbstractSolidType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractSolid", Order = 0)]
    public AbstractSolidType AbstractSolid {
      get {
        return _abstractSolid;
      }
      set {
        if ((_abstractSolid == value)) {
          return;
        }
        if (((_abstractSolid == null)
                    || (_abstractSolid.Equals(value) != true))) {
          _abstractSolid = value;
          OnPropertyChanged("AbstractSolid");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:AbstractSolidType is an abstraction of a solid to support the different levels of complexity. The solid may always be viewed as a geometric primitive, i.e. is contiguous.
  /// </summary>
  [XmlInclude(typeof(CompositeSolidType))]
  [XmlInclude(typeof(SolidType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractSolidType")]
  public class AbstractSolidType : AbstractGeometricPrimitiveType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CompositeSolidType")]
  public class CompositeSolidType : AbstractSolidType {
    #region Private fields
    private List<SolidPropertyType> _solidMember;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// CompositeSolidType class constructor
    /// </summary>
    public CompositeSolidType() {
      _solidMember = new List<SolidPropertyType>();
    }

    [XmlElement("solidMember", Order = 0)]
    [JsonProperty("solidMember", Order = 0)]
    public List<SolidPropertyType> solidMember {
      get {
        return _solidMember;
      }
      set {
        if ((_solidMember == value)) {
          return;
        }
        if (((_solidMember == null)
                    || (_solidMember.Equals(value) != true))) {
          _solidMember = value;
          OnPropertyChanged("solidMember");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SolidType")]
  public class SolidType : AbstractSolidType {
    #region Private fields
    private ShellPropertyType _exterior;
    private List<ShellPropertyType> _interior;
    #endregion

    /// <summary>
    /// SolidType class constructor
    /// </summary>
    public SolidType() {
      _interior = new List<ShellPropertyType>();
      _exterior = new ShellPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("exterior", Order = 0)]
    public ShellPropertyType exterior {
      get {
        return _exterior;
      }
      set {
        if ((_exterior == value)) {
          return;
        }
        if (((_exterior == null)
                    || (_exterior.Equals(value) != true))) {
          _exterior = value;
          OnPropertyChanged("exterior");
        }
      }
    }

    [XmlElement("interior", Order = 1)]
    [JsonProperty("interior", Order = 1)]
    public List<ShellPropertyType> interior {
      get {
        return _interior;
      }
      set {
        if ((_interior == value)) {
          return;
        }
        if (((_interior == null)
                    || (_interior.Equals(value) != true))) {
          _interior = value;
          OnPropertyChanged("interior");
        }
      }
    }
  }

  /// <summary>
  /// A property with the content model of gml:ShellPropertyType encapsulates a shell to represent a component of a solid boundary.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ShellPropertyType")]
  public class ShellPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ShellType _shell;
    #endregion

    /// <summary>
    /// ShellPropertyType class constructor
    /// </summary>
    public ShellPropertyType() {
      _shell = new ShellType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Shell", Order = 0)]
    public ShellType Shell {
      get {
        return _shell;
      }
      set {
        if ((_shell == value)) {
          return;
        }
        if (((_shell == null)
                    || (_shell.Equals(value) != true))) {
          _shell = value;
          OnPropertyChanged("Shell");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ShellType")]
  public class ShellType : INotifyPropertyChanged {
    #region Private fields
    private List<SurfacePropertyType> _surfaceMember;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// ShellType class constructor
    /// </summary>
    public ShellType() {
      _surfaceMember = new List<SurfacePropertyType>();
    }

    [XmlElement("surfaceMember", Order = 0)]
    [JsonProperty("surfaceMember", Order = 0)]
    public List<SurfacePropertyType> surfaceMember {
      get {
        return _surfaceMember;
      }
      set {
        if ((_surfaceMember == value)) {
          return;
        }
        if (((_surfaceMember == null)
                    || (_surfaceMember.Equals(value) != true))) {
          _surfaceMember = value;
          OnPropertyChanged("surfaceMember");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a surface as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SurfacePropertyType")]
  public class SurfacePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractSurfaceType _abstractSurface;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// SurfacePropertyType class constructor
    /// </summary>
    public SurfacePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractSurface", Order = 0)]
    public AbstractSurfaceType AbstractSurface {
      get {
        return _abstractSurface;
      }
      set {
        if ((_abstractSurface == value)) {
          return;
        }
        if (((_abstractSurface == null)
                    || (_abstractSurface.Equals(value) != true))) {
          _abstractSurface = value;
          OnPropertyChanged("AbstractSurface");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:AbstractSurfaceType is an abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
  /// </summary>
  [XmlInclude(typeof(CompositeSurfaceType))]
  [XmlInclude(typeof(OrientableSurfaceType))]
  [XmlInclude(typeof(SurfaceType))]
  [XmlInclude(typeof(TriangulatedSurfaceType))]
  [XmlInclude(typeof(TinType))]
  [XmlInclude(typeof(PolyhedralSurfaceType))]
  [XmlInclude(typeof(PolygonType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractSurfaceType")]
  public abstract class AbstractSurfaceType : AbstractGeometricPrimitiveType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CompositeSurfaceType")]
  public class CompositeSurfaceType : AbstractSurfaceType {
    #region Private fields
    private List<SurfacePropertyType> _surfaceMember;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// CompositeSurfaceType class constructor
    /// </summary>
    public CompositeSurfaceType() {
      _surfaceMember = new List<SurfacePropertyType>();
    }

    [XmlElement("surfaceMember", Order = 0)]
    [JsonProperty("surfaceMember", Order = 0)]
    public List<SurfacePropertyType> surfaceMember {
      get {
        return _surfaceMember;
      }
      set {
        if ((_surfaceMember == value)) {
          return;
        }
        if (((_surfaceMember == null)
                    || (_surfaceMember.Equals(value) != true))) {
          _surfaceMember = value;
          OnPropertyChanged("surfaceMember");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OrientableSurfaceType")]
  public class OrientableSurfaceType : AbstractSurfaceType {
    #region Private fields
    private SurfacePropertyType _baseSurface;
    private SignType _orientation;
    #endregion

    /// <summary>
    /// OrientableSurfaceType class constructor
    /// </summary>
    public OrientableSurfaceType() {
      _baseSurface = new SurfacePropertyType();
      _orientation = SignType.Item1;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("baseSurface", Order = 0)]
    public SurfacePropertyType baseSurface {
      get {
        return _baseSurface;
      }
      set {
        if ((_baseSurface == value)) {
          return;
        }
        if (((_baseSurface == null)
                    || (_baseSurface.Equals(value) != true))) {
          _baseSurface = value;
          OnPropertyChanged("baseSurface");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(SignType.Item1)]
    [JsonProperty("orientation")]
    public SignType orientation {
      get {
        return _orientation;
      }
      set {
        if ((_orientation.Equals(value) != true)) {
          _orientation = value;
          OnPropertyChanged("orientation");
        }
      }
    }
  }

  [XmlInclude(typeof(TriangulatedSurfaceType))]
  [XmlInclude(typeof(TinType))]
  [XmlInclude(typeof(PolyhedralSurfaceType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SurfaceType")]
  public class SurfaceType : AbstractSurfaceType {
    #region Private fields
    private SurfacePatchArrayPropertyType _patches;
    #endregion

    /// <summary>
    /// SurfaceType class constructor
    /// </summary>
    public SurfaceType() {
      _patches = new SurfacePatchArrayPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("patches", Order = 0)]
    public SurfacePatchArrayPropertyType patches {
      get {
        return _patches;
      }
      set {
        if ((_patches == value)) {
          return;
        }
        if (((_patches == null)
                    || (_patches.Equals(value) != true))) {
          _patches = value;
          OnPropertyChanged("patches");
        }
      }
    }
  }

  /// <summary>
  /// gml:SurfacePatchArrayPropertyType is a container for a sequence of surface patches.
  /// </summary>
  [XmlInclude(typeof(TrianglePatchArrayPropertyType))]
  [XmlInclude(typeof(PolygonPatchArrayPropertyType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SurfacePatchArrayPropertyType")]
  public class SurfacePatchArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractSurfacePatchType> _abstractSurfacePatch;
    #endregion

    /// <summary>
    /// SurfacePatchArrayPropertyType class constructor
    /// </summary>
    public SurfacePatchArrayPropertyType() {
      _abstractSurfacePatch = new List<AbstractSurfacePatchType>();
    }

    [XmlElement("AbstractSurfacePatch", Order = 0)]
    [JsonProperty("AbstractSurfacePatch", Order = 0)]
    public List<AbstractSurfacePatchType> AbstractSurfacePatch {
      get {
        return _abstractSurfacePatch;
      }
      set {
        if ((_abstractSurfacePatch == value)) {
          return;
        }
        if (((_abstractSurfacePatch == null)
                    || (_abstractSurfacePatch.Equals(value) != true))) {
          _abstractSurfacePatch = value;
          OnPropertyChanged("AbstractSurfacePatch");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(AbstractParametricCurveSurfaceType))]
  [XmlInclude(typeof(AbstractGriddedSurfaceType))]
  [XmlInclude(typeof(SphereType))]
  [XmlInclude(typeof(CylinderType))]
  [XmlInclude(typeof(ConeType))]
  [XmlInclude(typeof(RectangleType))]
  [XmlInclude(typeof(TriangleType))]
  [XmlInclude(typeof(PolygonPatchType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractSurfacePatchType")]
  public abstract class AbstractSurfacePatchType : INotifyPropertyChanged {
    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(AbstractGriddedSurfaceType))]
  [XmlInclude(typeof(SphereType))]
  [XmlInclude(typeof(CylinderType))]
  [XmlInclude(typeof(ConeType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractParametricCurveSurfaceType")]
  public abstract class AbstractParametricCurveSurfaceType : AbstractSurfacePatchType {
    #region Private fields
    private AggregationType _aggregationType;
    #endregion

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [XmlInclude(typeof(SphereType))]
  [XmlInclude(typeof(CylinderType))]
  [XmlInclude(typeof(ConeType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGriddedSurfaceType")]
  public abstract class AbstractGriddedSurfaceType : AbstractParametricCurveSurfaceType {
    #region Private fields
    private List<AbstractGriddedSurfaceTypeRow> _rows;
    private string _rows1;
    private string _columns;
    #endregion

    /// <summary>
    /// AbstractGriddedSurfaceType class constructor
    /// </summary>
    public AbstractGriddedSurfaceType() {
      _rows = new List<AbstractGriddedSurfaceTypeRow>();
    }

    [XmlArrayAttribute(Order = 0)]
    [XmlArrayItemAttribute("Row", IsNullable = false)]
    [JsonProperty("Row", Order = 0)]
    public List<AbstractGriddedSurfaceTypeRow> rows {
      get {
        return _rows;
      }
      set {
        if ((_rows == value)) {
          return;
        }
        if (((_rows == null)
                    || (_rows.Equals(value) != true))) {
          _rows = value;
          OnPropertyChanged("rows");
        }
      }
    }

    [XmlAttribute("rows", DataType = "integer")]
    public string rows1 {
      get {
        return _rows1;
      }
      set {
        if ((_rows1 == value)) {
          return;
        }
        if (((_rows1 == null)
                    || (_rows1.Equals(value) != true))) {
          _rows1 = value;
          OnPropertyChanged("rows1");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [JsonProperty("columns")]
    public string columns {
      get {
        return _columns;
      }
      set {
        if ((_columns == value)) {
          return;
        }
        if (((_columns == null)
                    || (_columns.Equals(value) != true))) {
          _columns = value;
          OnPropertyChanged("columns");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGriddedSurfaceTypeRow")]
  public class AbstractGriddedSurfaceTypeRow : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// posList instances (and other instances with the content model specified by DirectPositionListType) hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS).
  /// if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc.
  /// The optional attribute count specifies the number of direct positions in the list. If the attribute count is present then the attribute srsDimension shall be present, too.
  /// The number of entries in the list is equal to the product of the dimensionality of the coordinate reference system (i.e. it is a derived value of the coordinate reference system definition) and the number of direct positions.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectPositionListType")]
  public class DirectPositionListType : INotifyPropertyChanged {
    #region Private fields
    private string _srsName;
    private string _srsDimension;
    private string _count;
    private List<double> _text;
    #endregion

    /// <summary>
    /// DirectPositionListType class constructor
    /// </summary>
    public DirectPositionListType() {
      _text = new List<double>();
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("srsName")]
    public string srsName {
      get {
        return _srsName;
      }
      set {
        if ((_srsName == value)) {
          return;
        }
        if (((_srsName == null)
                    || (_srsName.Equals(value) != true))) {
          _srsName = value;
          OnPropertyChanged("srsName");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("srsDimension")]
    public string srsDimension {
      get {
        return _srsDimension;
      }
      set {
        if ((_srsDimension == value)) {
          return;
        }
        if (((_srsDimension == null)
                    || (_srsDimension.Equals(value) != true))) {
          _srsDimension = value;
          OnPropertyChanged("srsDimension");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("count")]
    public string count {
      get {
        return _count;
      }
      set {
        if ((_count == value)) {
          return;
        }
        if (((_count == null)
                    || (_count.Equals(value) != true))) {
          _count = value;
          OnPropertyChanged("count");
        }
      }
    }

    [XmlAttribute]
    public List<double> Text {
      get {
        return _text;
      }
      set {
        if ((_text == value)) {
          return;
        }
        if (((_text == null)
                    || (_text.Equals(value) != true))) {
          _text = value;
          OnPropertyChanged("Text");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SphereType")]
  public class SphereType : AbstractGriddedSurfaceType {
    #region Private fields
    private CurveInterpolationType _horizontalCurveType;
    private CurveInterpolationType _verticalCurveType;
    #endregion

    /// <summary>
    /// SphereType class constructor
    /// </summary>
    public SphereType() {
      _horizontalCurveType = CurveInterpolationType.circularArc3Points;
      _verticalCurveType = CurveInterpolationType.circularArc3Points;
    }

    [XmlAttribute]
    [JsonProperty("horizontalCurveType")]
    public CurveInterpolationType horizontalCurveType {
      get {
        return _horizontalCurveType;
      }
      set {
        if ((_horizontalCurveType.Equals(value) != true)) {
          _horizontalCurveType = value;
          OnPropertyChanged("horizontalCurveType");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("verticalCurveType")]
    public CurveInterpolationType verticalCurveType {
      get {
        return _verticalCurveType;
      }
      set {
        if ((_verticalCurveType.Equals(value) != true)) {
          _verticalCurveType = value;
          OnPropertyChanged("verticalCurveType");
        }
      }
    }
  }

  /// <summary>
  /// gml:CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum CurveInterpolationType {
    linear,
    geodesic,
    circularArc3Points,
    circularArc2PointWithBulge,
    circularArcCenterPointWithRadius,
    elliptical,
    clothoid,
    conic,
    polynomialSpline,
    cubicSpline,
    rationalSpline,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CylinderType")]
  public class CylinderType : AbstractGriddedSurfaceType {
    #region Private fields
    private CurveInterpolationType _horizontalCurveType;
    private CurveInterpolationType _verticalCurveType;
    #endregion

    /// <summary>
    /// CylinderType class constructor
    /// </summary>
    public CylinderType() {
      _horizontalCurveType = CurveInterpolationType.circularArc3Points;
      _verticalCurveType = CurveInterpolationType.linear;
    }

    [XmlAttribute]
    [JsonProperty("horizontalCurveType")]
    public CurveInterpolationType horizontalCurveType {
      get {
        return _horizontalCurveType;
      }
      set {
        if ((_horizontalCurveType.Equals(value) != true)) {
          _horizontalCurveType = value;
          OnPropertyChanged("horizontalCurveType");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("verticalCurveType")]
    public CurveInterpolationType verticalCurveType {
      get {
        return _verticalCurveType;
      }
      set {
        if ((_verticalCurveType.Equals(value) != true)) {
          _verticalCurveType = value;
          OnPropertyChanged("verticalCurveType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConeType")]
  public class ConeType : AbstractGriddedSurfaceType {
    #region Private fields
    private CurveInterpolationType _horizontalCurveType;
    private CurveInterpolationType _verticalCurveType;
    #endregion

    /// <summary>
    /// ConeType class constructor
    /// </summary>
    public ConeType() {
      _horizontalCurveType = CurveInterpolationType.circularArc3Points;
      _verticalCurveType = CurveInterpolationType.linear;
    }

    [XmlAttribute]
    [JsonProperty("horizontalCurveType")]
    public CurveInterpolationType horizontalCurveType {
      get {
        return _horizontalCurveType;
      }
      set {
        if ((_horizontalCurveType.Equals(value) != true)) {
          _horizontalCurveType = value;
          OnPropertyChanged("horizontalCurveType");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("verticalCurveType")]
    public CurveInterpolationType verticalCurveType {
      get {
        return _verticalCurveType;
      }
      set {
        if ((_verticalCurveType.Equals(value) != true)) {
          _verticalCurveType = value;
          OnPropertyChanged("verticalCurveType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RectangleType")]
  public class RectangleType : AbstractSurfacePatchType {
    #region Private fields
    private AbstractRingPropertyType _exterior;
    private SurfaceInterpolationType _interpolation;
    #endregion

    /// <summary>
    /// RectangleType class constructor
    /// </summary>
    public RectangleType() {
      _exterior = new AbstractRingPropertyType();
      _interpolation = SurfaceInterpolationType.planar;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("exterior", Order = 0)]
    public AbstractRingPropertyType exterior {
      get {
        return _exterior;
      }
      set {
        if ((_exterior == value)) {
          return;
        }
        if (((_exterior == null)
                    || (_exterior.Equals(value) != true))) {
          _exterior = value;
          OnPropertyChanged("exterior");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public SurfaceInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }
  }

  /// <summary>
  /// A property with the content model of gml:AbstractRingPropertyType encapsulates a ring to represent the surface boundary property of a surface.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractRingPropertyType")]
  public class AbstractRingPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractRingType _abstractRing;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractRing", Order = 0)]
    public AbstractRingType AbstractRing {
      get {
        return _abstractRing;
      }
      set {
        if ((_abstractRing == value)) {
          return;
        }
        if (((_abstractRing == null)
                    || (_abstractRing.Equals(value) != true))) {
          _abstractRing = value;
          OnPropertyChanged("AbstractRing");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(RingType))]
  [XmlInclude(typeof(LinearRingType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractRingType")]
  public abstract class AbstractRingType : INotifyPropertyChanged {
    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RingType")]
  public class RingType : AbstractRingType {
    #region Private fields
    private List<CurvePropertyType> _curveMember;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// RingType class constructor
    /// </summary>
    public RingType() {
      _curveMember = new List<CurvePropertyType>();
    }

    [XmlElement("curveMember", Order = 0)]
    [JsonProperty("curveMember", Order = 0)]
    public List<CurvePropertyType> curveMember {
      get {
        return _curveMember;
      }
      set {
        if ((_curveMember == value)) {
          return;
        }
        if (((_curveMember == null)
                    || (_curveMember.Equals(value) != true))) {
          _curveMember = value;
          OnPropertyChanged("curveMember");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  /// <summary>
  /// A property that has a curve as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CurvePropertyType")]
  public class CurvePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCurveType _abstractCurve;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// CurvePropertyType class constructor
    /// </summary>
    public CurvePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractCurve", Order = 0)]
    public AbstractCurveType AbstractCurve {
      get {
        return _abstractCurve;
      }
      set {
        if ((_abstractCurve == value)) {
          return;
        }
        if (((_abstractCurve == null)
                    || (_abstractCurve.Equals(value) != true))) {
          _abstractCurve = value;
          OnPropertyChanged("AbstractCurve");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:AbstractCurveType is an abstraction of a curve to support the different levels of complexity. The curve may always be viewed as a geometric primitive, i.e. is continuous.
  /// </summary>
  [XmlInclude(typeof(CompositeCurveType))]
  [XmlInclude(typeof(OrientableCurveType))]
  [XmlInclude(typeof(CurveType))]
  [XmlInclude(typeof(LineStringType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractCurveType")]
  public abstract class AbstractCurveType : AbstractGeometricPrimitiveType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CompositeCurveType")]
  public class CompositeCurveType : AbstractCurveType {
    #region Private fields
    private List<CurvePropertyType> _curveMember;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// CompositeCurveType class constructor
    /// </summary>
    public CompositeCurveType() {
      _curveMember = new List<CurvePropertyType>();
    }

    [XmlElement("curveMember", Order = 0)]
    [JsonProperty("curveMember", Order = 0)]
    public List<CurvePropertyType> curveMember {
      get {
        return _curveMember;
      }
      set {
        if ((_curveMember == value)) {
          return;
        }
        if (((_curveMember == null)
                    || (_curveMember.Equals(value) != true))) {
          _curveMember = value;
          OnPropertyChanged("curveMember");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OrientableCurveType")]
  public class OrientableCurveType : AbstractCurveType {
    #region Private fields
    private CurvePropertyType _baseCurve;
    private SignType _orientation;
    #endregion

    /// <summary>
    /// OrientableCurveType class constructor
    /// </summary>
    public OrientableCurveType() {
      _baseCurve = new CurvePropertyType();
      _orientation = SignType.Item1;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("baseCurve", Order = 0)]
    public CurvePropertyType baseCurve {
      get {
        return _baseCurve;
      }
      set {
        if ((_baseCurve == value)) {
          return;
        }
        if (((_baseCurve == null)
                    || (_baseCurve.Equals(value) != true))) {
          _baseCurve = value;
          OnPropertyChanged("baseCurve");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(SignType.Item1)]
    [JsonProperty("orientation")]
    public SignType orientation {
      get {
        return _orientation;
      }
      set {
        if ((_orientation.Equals(value) != true)) {
          _orientation = value;
          OnPropertyChanged("orientation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CurveType")]
  public class CurveType : AbstractCurveType {
    #region Private fields
    private CurveSegmentArrayPropertyType _segments;
    #endregion

    /// <summary>
    /// CurveType class constructor
    /// </summary>
    public CurveType() {
      _segments = new CurveSegmentArrayPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("segments", Order = 0)]
    public CurveSegmentArrayPropertyType segments {
      get {
        return _segments;
      }
      set {
        if ((_segments == value)) {
          return;
        }
        if (((_segments == null)
                    || (_segments.Equals(value) != true))) {
          _segments = value;
          OnPropertyChanged("segments");
        }
      }
    }
  }

  /// <summary>
  /// gml:CurveSegmentArrayPropertyType is a container for an array of curve segments.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CurveSegmentArrayPropertyType")]
  public class CurveSegmentArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractCurveSegmentType> _abstractCurveSegment;
    #endregion

    /// <summary>
    /// CurveSegmentArrayPropertyType class constructor
    /// </summary>
    public CurveSegmentArrayPropertyType() {
      _abstractCurveSegment = new List<AbstractCurveSegmentType>();
    }

    [XmlElement("AbstractCurveSegment", Order = 0)]
    [JsonProperty("AbstractCurveSegment", Order = 0)]
    public List<AbstractCurveSegmentType> AbstractCurveSegment {
      get {
        return _abstractCurveSegment;
      }
      set {
        if ((_abstractCurveSegment == value)) {
          return;
        }
        if (((_abstractCurveSegment == null)
                    || (_abstractCurveSegment.Equals(value) != true))) {
          _abstractCurveSegment = value;
          OnPropertyChanged("AbstractCurveSegment");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(GeodesicStringType))]
  [XmlInclude(typeof(GeodesicType))]
  [XmlInclude(typeof(ClothoidType))]
  [XmlInclude(typeof(OffsetCurveType))]
  [XmlInclude(typeof(BSplineType))]
  [XmlInclude(typeof(BezierType))]
  [XmlInclude(typeof(CubicSplineType))]
  [XmlInclude(typeof(ArcByCenterPointType))]
  [XmlInclude(typeof(CircleByCenterPointType))]
  [XmlInclude(typeof(ArcStringByBulgeType))]
  [XmlInclude(typeof(ArcByBulgeType))]
  [XmlInclude(typeof(ArcStringType))]
  [XmlInclude(typeof(ArcType))]
  [XmlInclude(typeof(CircleType))]
  [XmlInclude(typeof(LineStringSegmentType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractCurveSegmentType")]
  public abstract class AbstractCurveSegmentType : INotifyPropertyChanged {
    #region Private fields
    private string _numDerivativesAtStart;
    private string _numDerivativesAtEnd;
    private string _numDerivativeInterior;
    #endregion

    /// <summary>
    /// AbstractCurveSegmentType class constructor
    /// </summary>
    public AbstractCurveSegmentType() {
      _numDerivativesAtStart = "0";
      _numDerivativesAtEnd = "0";
      _numDerivativeInterior = "0";
    }

    [XmlAttribute(DataType = "integer")]
    [DefaultValue("0")]
    [JsonProperty("numDerivativesAtStart")]
    public string numDerivativesAtStart {
      get {
        return _numDerivativesAtStart;
      }
      set {
        if ((_numDerivativesAtStart == value)) {
          return;
        }
        if (((_numDerivativesAtStart == null)
                    || (_numDerivativesAtStart.Equals(value) != true))) {
          _numDerivativesAtStart = value;
          OnPropertyChanged("numDerivativesAtStart");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [DefaultValue("0")]
    [JsonProperty("numDerivativesAtEnd")]
    public string numDerivativesAtEnd {
      get {
        return _numDerivativesAtEnd;
      }
      set {
        if ((_numDerivativesAtEnd == value)) {
          return;
        }
        if (((_numDerivativesAtEnd == null)
                    || (_numDerivativesAtEnd.Equals(value) != true))) {
          _numDerivativesAtEnd = value;
          OnPropertyChanged("numDerivativesAtEnd");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [DefaultValue("0")]
    [JsonProperty("numDerivativeInterior")]
    public string numDerivativeInterior {
      get {
        return _numDerivativeInterior;
      }
      set {
        if ((_numDerivativeInterior == value)) {
          return;
        }
        if (((_numDerivativeInterior == null)
                    || (_numDerivativeInterior.Equals(value) != true))) {
          _numDerivativeInterior = value;
          OnPropertyChanged("numDerivativeInterior");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(GeodesicType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeodesicStringType")]
  public class GeodesicStringType : AbstractCurveSegmentType {
    #region Private fields
    private object _item;
    private CurveInterpolationType _interpolation;
    #endregion

    /// <summary>
    /// GeodesicStringType class constructor
    /// </summary>
    public GeodesicStringType() {
      _interpolation = CurveInterpolationType.geodesic;
    }

    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeodesicType")]
  public class GeodesicType : GeodesicStringType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ClothoidType")]
  public class ClothoidType : AbstractCurveSegmentType {
    #region Private fields
    private ClothoidTypeRefLocation _refLocation;
    private decimal _scaleFactor;
    private double _startParameter;
    private double _endParameter;
    private CurveInterpolationType _interpolation;
    #endregion

    /// <summary>
    /// ClothoidType class constructor
    /// </summary>
    public ClothoidType() {
      _refLocation = new ClothoidTypeRefLocation();
      _interpolation = CurveInterpolationType.clothoid;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("refLocation", Order = 0)]
    public ClothoidTypeRefLocation refLocation {
      get {
        return _refLocation;
      }
      set {
        if ((_refLocation == value)) {
          return;
        }
        if (((_refLocation == null)
                    || (_refLocation.Equals(value) != true))) {
          _refLocation = value;
          OnPropertyChanged("refLocation");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("scaleFactor", Order = 1)]
    public decimal scaleFactor {
      get {
        return _scaleFactor;
      }
      set {
        if ((_scaleFactor.Equals(value) != true)) {
          _scaleFactor = value;
          OnPropertyChanged("scaleFactor");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("startParameter", Order = 2)]
    public double startParameter {
      get {
        return _startParameter;
      }
      set {
        if ((_startParameter.Equals(value) != true)) {
          _startParameter = value;
          OnPropertyChanged("startParameter");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("endParameter", Order = 3)]
    public double endParameter {
      get {
        return _endParameter;
      }
      set {
        if ((_endParameter.Equals(value) != true)) {
          _endParameter = value;
          OnPropertyChanged("endParameter");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ClothoidTypeRefLocation")]
  public class ClothoidTypeRefLocation : INotifyPropertyChanged {
    #region Private fields
    private AffinePlacementType _affinePlacement;
    #endregion

    /// <summary>
    /// ClothoidTypeRefLocation class constructor
    /// </summary>
    public ClothoidTypeRefLocation() {
      _affinePlacement = new AffinePlacementType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AffinePlacement", Order = 0)]
    public AffinePlacementType AffinePlacement {
      get {
        return _affinePlacement;
      }
      set {
        if ((_affinePlacement == value)) {
          return;
        }
        if (((_affinePlacement == null)
                    || (_affinePlacement.Equals(value) != true))) {
          _affinePlacement = value;
          OnPropertyChanged("AffinePlacement");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AffinePlacementType")]
  public class AffinePlacementType : INotifyPropertyChanged {
    #region Private fields
    private DirectPositionType _location;
    private List<VectorType> _refDirection;
    private string _inDimension;
    private string _outDimension;
    #endregion

    /// <summary>
    /// AffinePlacementType class constructor
    /// </summary>
    public AffinePlacementType() {
      _refDirection = new List<VectorType>();
      _location = new DirectPositionType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("location", Order = 0)]
    public DirectPositionType location {
      get {
        return _location;
      }
      set {
        if ((_location == value)) {
          return;
        }
        if (((_location == null)
                    || (_location.Equals(value) != true))) {
          _location = value;
          OnPropertyChanged("location");
        }
      }
    }

    [XmlElement("refDirection", Order = 1)]
    [JsonProperty("refDirection", Order = 1)]
    public List<VectorType> refDirection {
      get {
        return _refDirection;
      }
      set {
        if ((_refDirection == value)) {
          return;
        }
        if (((_refDirection == null)
                    || (_refDirection.Equals(value) != true))) {
          _refDirection = value;
          OnPropertyChanged("refDirection");
        }
      }
    }

    [XmlElement(DataType = "positiveInteger", Order = 2)]
    [JsonProperty("inDimension", Order = 2)]
    public string inDimension {
      get {
        return _inDimension;
      }
      set {
        if ((_inDimension == value)) {
          return;
        }
        if (((_inDimension == null)
                    || (_inDimension.Equals(value) != true))) {
          _inDimension = value;
          OnPropertyChanged("inDimension");
        }
      }
    }

    [XmlElement(DataType = "positiveInteger", Order = 3)]
    [JsonProperty("outDimension", Order = 3)]
    public string outDimension {
      get {
        return _outDimension;
      }
      set {
        if ((_outDimension == value)) {
          return;
        }
        if (((_outDimension == null)
                    || (_outDimension.Equals(value) != true))) {
          _outDimension = value;
          OnPropertyChanged("outDimension");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OffsetCurveType")]
  public class OffsetCurveType : AbstractCurveSegmentType {
    #region Private fields
    private CurvePropertyType _offsetBase;
    private LengthType _distance;
    private VectorType _refDirection;
    #endregion

    /// <summary>
    /// OffsetCurveType class constructor
    /// </summary>
    public OffsetCurveType() {
      _refDirection = new VectorType();
      _distance = new LengthType();
      _offsetBase = new CurvePropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("offsetBase", Order = 0)]
    public CurvePropertyType offsetBase {
      get {
        return _offsetBase;
      }
      set {
        if ((_offsetBase == value)) {
          return;
        }
        if (((_offsetBase == null)
                    || (_offsetBase.Equals(value) != true))) {
          _offsetBase = value;
          OnPropertyChanged("offsetBase");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("distance", Order = 1)]
    public LengthType distance {
      get {
        return _distance;
      }
      set {
        if ((_distance == value)) {
          return;
        }
        if (((_distance == null)
                    || (_distance.Equals(value) != true))) {
          _distance = value;
          OnPropertyChanged("distance");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("refDirection", Order = 2)]
    public VectorType refDirection {
      get {
        return _refDirection;
      }
      set {
        if ((_refDirection == value)) {
          return;
        }
        if (((_refDirection == null)
                    || (_refDirection.Equals(value) != true))) {
          _refDirection = value;
          OnPropertyChanged("refDirection");
        }
      }
    }
  }

  /// <summary>
  /// This is a prototypical definition for a specific measure type defined as a vacuous extension (i.e. aliases) of gml:MeasureType. In this case, the content model supports the description of a length (or distance) quantity, with its units. The unit of measure referenced by uom shall be suitable for a length, such as metres or feet.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LengthType")]
  public class LengthType : MeasureType {
  }

  /// <summary>
  /// gml:MeasureType supports recording an amount encoded as a value of XML Schema double, together with a units of measure indicated by an attribute uom, short for “units Of measure”. The value of the uom attribute identifies a reference system for the amount, usually a ratio or interval scale.
  /// </summary>
  [XmlInclude(typeof(AngleType))]
  [XmlInclude(typeof(SpeedType))]
  [XmlInclude(typeof(VolumeType))]
  [XmlInclude(typeof(AreaType))]
  [XmlInclude(typeof(GridLengthType))]
  [XmlInclude(typeof(TimeType))]
  [XmlInclude(typeof(ScaleType))]
  [XmlInclude(typeof(LengthType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MeasureType")]
  public class MeasureType : INotifyPropertyChanged {
    #region Private fields
    private string _uom;
    private double _value;
    #endregion

    [XmlAttribute]
    [JsonProperty("uom")]
    public string uom {
      get {
        return _uom;
      }
      set {
        if ((_uom == value)) {
          return;
        }
        if (((_uom == null)
                    || (_uom.Equals(value) != true))) {
          _uom = value;
          OnPropertyChanged("uom");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public double Value {
      get {
        return _value;
      }
      set {
        if ((_value.Equals(value) != true)) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AngleType")]
  public class AngleType : MeasureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SpeedType")]
  public class SpeedType : MeasureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VolumeType")]
  public class VolumeType : MeasureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AreaType")]
  public class AreaType : MeasureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridLengthType")]
  public class GridLengthType : MeasureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeType")]
  public class TimeType : MeasureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ScaleType")]
  public class ScaleType : MeasureType {
  }

  [XmlInclude(typeof(BezierType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BSplineType")]
  public class BSplineType : AbstractCurveSegmentType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType5[] _itemsElementName;
    private string _degree;
    private List<KnotPropertyType> _knot;
    private CurveInterpolationType _interpolation;
    private bool _isPolynomial;
    private KnotTypesType _knotType;
    #endregion

    /// <summary>
    /// BSplineType class constructor
    /// </summary>
    public BSplineType() {
      _knot = new List<KnotPropertyType>();
      _interpolation = CurveInterpolationType.polynomialSpline;
    }

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType5[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlElement(DataType = "nonNegativeInteger", Order = 2)]
    [JsonProperty("degree", Order = 2)]
    public string degree {
      get {
        return _degree;
      }
      set {
        if ((_degree == value)) {
          return;
        }
        if (((_degree == null)
                    || (_degree.Equals(value) != true))) {
          _degree = value;
          OnPropertyChanged("degree");
        }
      }
    }

    [XmlElement("knot", Order = 3)]
    [RequiredAttribute()]
    [JsonProperty("knot", Order = 3)]
    public List<KnotPropertyType> knot {
      get {
        return _knot;
      }
      set {
        if ((_knot == value)) {
          return;
        }
        if (((_knot == null)
                    || (_knot.Equals(value) != true))) {
          ValidationContext validatorPropContext = new ValidationContext(this, null, null);
          validatorPropContext.MemberName = "knot";
          Validator.ValidateProperty(value, validatorPropContext);
          _knot = value;
          OnPropertyChanged("knot");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(CurveInterpolationType.polynomialSpline)]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("isPolynomial")]
    public bool isPolynomial {
      get {
        return _isPolynomial;
      }
      set {
        if ((_isPolynomial.Equals(value) != true)) {
          _isPolynomial = value;
          OnPropertyChanged("isPolynomial");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("knotType")]
    public KnotTypesType knotType {
      get {
        return _knotType;
      }
      set {
        if ((_knotType.Equals(value) != true)) {
          _knotType = value;
          OnPropertyChanged("knotType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType5 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  /// <summary>
  /// gml:KnotPropertyType encapsulates a knot to use it in a geometric type.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("KnotPropertyType")]
  public class KnotPropertyType : INotifyPropertyChanged {
    #region Private fields
    private KnotType _knot;
    #endregion

    /// <summary>
    /// KnotPropertyType class constructor
    /// </summary>
    public KnotPropertyType() {
      _knot = new KnotType();
    }

    /// <summary>
    /// A knot is a breakpoint on a piecewise spline curve.
    /// value is the value of the parameter at the knot of the spline (see ISO 19107:2003, 6.4.24.2).
    /// multiplicity is the multiplicity of this knot used in the definition of the spline (with the same weight).
    /// weight is the value of the averaging weight used for this knot of the spline.
    /// </summary>
    [XmlElement(Order = 0)]
    [JsonProperty("Knot", Order = 0)]
    public KnotType Knot {
      get {
        return _knot;
      }
      set {
        if ((_knot == value)) {
          return;
        }
        if (((_knot == null)
                    || (_knot.Equals(value) != true))) {
          _knot = value;
          OnPropertyChanged("Knot");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("KnotType")]
  public class KnotType : INotifyPropertyChanged {
    #region Private fields
    private double _value;
    private string _multiplicity;
    private double _weight;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("value", Order = 0)]
    public double value {
      get {
        return _value;
      }
      set {
        if ((_value.Equals(value) != true)) {
          _value = value;
          OnPropertyChanged("value");
        }
      }
    }

    [XmlElement(DataType = "nonNegativeInteger", Order = 1)]
    [JsonProperty("multiplicity", Order = 1)]
    public string multiplicity {
      get {
        return _multiplicity;
      }
      set {
        if ((_multiplicity == value)) {
          return;
        }
        if (((_multiplicity == null)
                    || (_multiplicity.Equals(value) != true))) {
          _multiplicity = value;
          OnPropertyChanged("multiplicity");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("weight", Order = 2)]
    public double weight {
      get {
        return _weight;
      }
      set {
        if ((_weight.Equals(value) != true)) {
          _weight = value;
          OnPropertyChanged("weight");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// This enumeration type specifies values for the knots’ type (see ISO 19107:2003, 6.4.25).
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum KnotTypesType {
    uniform,
    quasiUniform,
    piecewiseBezier,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BezierType")]
  public class BezierType : BSplineType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CubicSplineType")]
  public class CubicSplineType : AbstractCurveSegmentType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType4[] _itemsElementName;
    private VectorType _vectorAtStart;
    private VectorType _vectorAtEnd;
    private CurveInterpolationType _interpolation;
    private string _degree;
    #endregion

    /// <summary>
    /// CubicSplineType class constructor
    /// </summary>
    public CubicSplineType() {
      _vectorAtEnd = new VectorType();
      _vectorAtStart = new VectorType();
      _interpolation = CurveInterpolationType.cubicSpline;
      _degree = "3";
    }

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType4[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("vectorAtStart", Order = 2)]
    public VectorType vectorAtStart {
      get {
        return _vectorAtStart;
      }
      set {
        if ((_vectorAtStart == value)) {
          return;
        }
        if (((_vectorAtStart == null)
                    || (_vectorAtStart.Equals(value) != true))) {
          _vectorAtStart = value;
          OnPropertyChanged("vectorAtStart");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("vectorAtEnd", Order = 3)]
    public VectorType vectorAtEnd {
      get {
        return _vectorAtEnd;
      }
      set {
        if ((_vectorAtEnd == value)) {
          return;
        }
        if (((_vectorAtEnd == null)
                    || (_vectorAtEnd.Equals(value) != true))) {
          _vectorAtEnd = value;
          OnPropertyChanged("vectorAtEnd");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    public string degree {
      get {
        return _degree;
      }
      set {
        if ((_degree == value)) {
          return;
        }
        if (((_degree == null)
                    || (_degree.Equals(value) != true))) {
          _degree = value;
          OnPropertyChanged("degree");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType4 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  [XmlInclude(typeof(CircleByCenterPointType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArcByCenterPointType")]
  public class ArcByCenterPointType : AbstractCurveSegmentType {
    #region Private fields
    private object _item;
    private ItemChoiceType1 _itemElementName;
    private LengthType _radius;
    private AngleType _startAngle;
    private AngleType _endAngle;
    private CurveInterpolationType _interpolation;
    private string _numArc;
    #endregion

    /// <summary>
    /// ArcByCenterPointType class constructor
    /// </summary>
    public ArcByCenterPointType() {
      _endAngle = new AngleType();
      _startAngle = new AngleType();
      _radius = new LengthType();
      _interpolation = CurveInterpolationType.circularArcCenterPointWithRadius;
      _numArc = "1";
    }

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [XmlIgnore]
    public ItemChoiceType1 ItemElementName {
      get {
        return _itemElementName;
      }
      set {
        if ((_itemElementName.Equals(value) != true)) {
          _itemElementName = value;
          OnPropertyChanged("ItemElementName");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("radius", Order = 2)]
    public LengthType radius {
      get {
        return _radius;
      }
      set {
        if ((_radius == value)) {
          return;
        }
        if (((_radius == null)
                    || (_radius.Equals(value) != true))) {
          _radius = value;
          OnPropertyChanged("radius");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("startAngle", Order = 3)]
    public AngleType startAngle {
      get {
        return _startAngle;
      }
      set {
        if ((_startAngle == value)) {
          return;
        }
        if (((_startAngle == null)
                    || (_startAngle.Equals(value) != true))) {
          _startAngle = value;
          OnPropertyChanged("startAngle");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("endAngle", Order = 4)]
    public AngleType endAngle {
      get {
        return _endAngle;
      }
      set {
        if ((_endAngle == value)) {
          return;
        }
        if (((_endAngle == null)
                    || (_endAngle.Equals(value) != true))) {
          _endAngle = value;
          OnPropertyChanged("endAngle");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [JsonProperty("numArc")]
    public string numArc {
      get {
        return _numArc;
      }
      set {
        if ((_numArc == value)) {
          return;
        }
        if (((_numArc == null)
                    || (_numArc.Equals(value) != true))) {
          _numArc = value;
          OnPropertyChanged("numArc");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemChoiceType1 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CircleByCenterPointType")]
  public class CircleByCenterPointType : ArcByCenterPointType {
  }

  [XmlInclude(typeof(ArcByBulgeType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArcStringByBulgeType")]
  public class ArcStringByBulgeType : AbstractCurveSegmentType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType3[] _itemsElementName;
    private List<double> _bulge;
    private List<VectorType> _normal;
    private CurveInterpolationType _interpolation;
    private string _numArc;
    #endregion

    /// <summary>
    /// ArcStringByBulgeType class constructor
    /// </summary>
    public ArcStringByBulgeType() {
      _normal = new List<VectorType>();
      _bulge = new List<double>();
      _interpolation = CurveInterpolationType.circularArc2PointWithBulge;
    }

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType3[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlElement("bulge", Order = 2)]
    [JsonProperty("bulge", Order = 2)]
    public List<double> bulge {
      get {
        return _bulge;
      }
      set {
        if ((_bulge == value)) {
          return;
        }
        if (((_bulge == null)
                    || (_bulge.Equals(value) != true))) {
          _bulge = value;
          OnPropertyChanged("bulge");
        }
      }
    }

    [XmlElement("normal", Order = 3)]
    [JsonProperty("normal", Order = 3)]
    public List<VectorType> normal {
      get {
        return _normal;
      }
      set {
        if ((_normal == value)) {
          return;
        }
        if (((_normal == null)
                    || (_normal.Equals(value) != true))) {
          _normal = value;
          OnPropertyChanged("normal");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [JsonProperty("numArc")]
    public string numArc {
      get {
        return _numArc;
      }
      set {
        if ((_numArc == value)) {
          return;
        }
        if (((_numArc == null)
                    || (_numArc.Equals(value) != true))) {
          _numArc = value;
          OnPropertyChanged("numArc");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType3 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArcByBulgeType")]
  public class ArcByBulgeType : ArcStringByBulgeType {
  }

  [XmlInclude(typeof(ArcType))]
  [XmlInclude(typeof(CircleType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArcStringType")]
  public class ArcStringType : AbstractCurveSegmentType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType2[] _itemsElementName;
    private CurveInterpolationType _interpolation;
    private string _numArc;
    #endregion

    /// <summary>
    /// ArcStringType class constructor
    /// </summary>
    public ArcStringType() {
      _interpolation = CurveInterpolationType.circularArc3Points;
    }

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType2[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }

    [XmlAttribute(DataType = "integer")]
    [JsonProperty("numArc")]
    public string numArc {
      get {
        return _numArc;
      }
      set {
        if ((_numArc == value)) {
          return;
        }
        if (((_numArc == null)
                    || (_numArc.Equals(value) != true))) {
          _numArc = value;
          OnPropertyChanged("numArc");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType2 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  [XmlInclude(typeof(CircleType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ArcType")]
  public class ArcType : ArcStringType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CircleType")]
  public class CircleType : ArcType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LineStringSegmentType")]
  public class LineStringSegmentType : AbstractCurveSegmentType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType1[] _itemsElementName;
    private CurveInterpolationType _interpolation;
    #endregion

    /// <summary>
    /// LineStringSegmentType class constructor
    /// </summary>
    public LineStringSegmentType() {
      _interpolation = CurveInterpolationType.linear;
    }

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType1[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public CurveInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType1 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LineStringType")]
  public class LineStringType : AbstractCurveType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType[] _itemsElementName;
    #endregion

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LinearRingType")]
  public class LinearRingType : AbstractRingType {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType6[] _itemsElementName;
    #endregion

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pointRep", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType6[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType6 {
    coordinates,
    pointProperty,
    pointRep,
    pos,
    posList,
  }

  /// <summary>
  /// gml:SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum SurfaceInterpolationType {
    none,
    planar,
    spherical,
    elliptical,
    conic,
    tin,
    parametricCurve,
    polynomialSpline,
    rationalSpline,
    triangulatedSpline,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TriangleType")]
  public class TriangleType : AbstractSurfacePatchType {
    #region Private fields
    private AbstractRingPropertyType _exterior;
    private SurfaceInterpolationType _interpolation;
    #endregion

    /// <summary>
    /// TriangleType class constructor
    /// </summary>
    public TriangleType() {
      _exterior = new AbstractRingPropertyType();
      _interpolation = SurfaceInterpolationType.planar;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("exterior", Order = 0)]
    public AbstractRingPropertyType exterior {
      get {
        return _exterior;
      }
      set {
        if ((_exterior == value)) {
          return;
        }
        if (((_exterior == null)
                    || (_exterior.Equals(value) != true))) {
          _exterior = value;
          OnPropertyChanged("exterior");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public SurfaceInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PolygonPatchType")]
  public class PolygonPatchType : AbstractSurfacePatchType {
    #region Private fields
    private AbstractRingPropertyType _exterior;
    private List<AbstractRingPropertyType> _interior;
    private SurfaceInterpolationType _interpolation;
    #endregion

    /// <summary>
    /// PolygonPatchType class constructor
    /// </summary>
    public PolygonPatchType() {
      _interior = new List<AbstractRingPropertyType>();
      _exterior = new AbstractRingPropertyType();
      _interpolation = SurfaceInterpolationType.planar;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("exterior", Order = 0)]
    public AbstractRingPropertyType exterior {
      get {
        return _exterior;
      }
      set {
        if ((_exterior == value)) {
          return;
        }
        if (((_exterior == null)
                    || (_exterior.Equals(value) != true))) {
          _exterior = value;
          OnPropertyChanged("exterior");
        }
      }
    }

    [XmlElement("interior", Order = 1)]
    [JsonProperty("interior", Order = 1)]
    public List<AbstractRingPropertyType> interior {
      get {
        return _interior;
      }
      set {
        if ((_interior == value)) {
          return;
        }
        if (((_interior == null)
                    || (_interior.Equals(value) != true))) {
          _interior = value;
          OnPropertyChanged("interior");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("interpolation")]
    public SurfaceInterpolationType interpolation {
      get {
        return _interpolation;
      }
      set {
        if ((_interpolation.Equals(value) != true)) {
          _interpolation = value;
          OnPropertyChanged("interpolation");
        }
      }
    }
  }

  /// <summary>
  /// gml:TrianglePatchArrayPropertyType provides a container for an array of triangle patches.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TrianglePatchArrayPropertyType")]
  public class TrianglePatchArrayPropertyType : SurfacePatchArrayPropertyType {
  }

  /// <summary>
  /// gml:PolygonPatchArrayPropertyType provides a container for an array of polygon patches.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PolygonPatchArrayPropertyType")]
  public class PolygonPatchArrayPropertyType : SurfacePatchArrayPropertyType {
  }

  [XmlInclude(typeof(TinType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TriangulatedSurfaceType")]
  public class TriangulatedSurfaceType : SurfaceType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TinType")]
  public class TinType : TriangulatedSurfaceType {
    #region Private fields
    private List<LineStringSegmentArrayPropertyType> _stopLines;
    private List<LineStringSegmentArrayPropertyType> _breakLines;
    private LengthType _maxLength;
    private TinTypeControlPoint _controlPoint;
    #endregion

    /// <summary>
    /// TinType class constructor
    /// </summary>
    public TinType() {
      _controlPoint = new TinTypeControlPoint();
      _maxLength = new LengthType();
      _breakLines = new List<LineStringSegmentArrayPropertyType>();
      _stopLines = new List<LineStringSegmentArrayPropertyType>();
    }

    [XmlElement("stopLines", Order = 0)]
    [JsonProperty("stopLines", Order = 0)]
    public List<LineStringSegmentArrayPropertyType> stopLines {
      get {
        return _stopLines;
      }
      set {
        if ((_stopLines == value)) {
          return;
        }
        if (((_stopLines == null)
                    || (_stopLines.Equals(value) != true))) {
          _stopLines = value;
          OnPropertyChanged("stopLines");
        }
      }
    }

    [XmlElement("breakLines", Order = 1)]
    [JsonProperty("breakLines", Order = 1)]
    public List<LineStringSegmentArrayPropertyType> breakLines {
      get {
        return _breakLines;
      }
      set {
        if ((_breakLines == value)) {
          return;
        }
        if (((_breakLines == null)
                    || (_breakLines.Equals(value) != true))) {
          _breakLines = value;
          OnPropertyChanged("breakLines");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("maxLength", Order = 2)]
    public LengthType maxLength {
      get {
        return _maxLength;
      }
      set {
        if ((_maxLength == value)) {
          return;
        }
        if (((_maxLength == null)
                    || (_maxLength.Equals(value) != true))) {
          _maxLength = value;
          OnPropertyChanged("maxLength");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("controlPoint", Order = 3)]
    public TinTypeControlPoint controlPoint {
      get {
        return _controlPoint;
      }
      set {
        if ((_controlPoint == value)) {
          return;
        }
        if (((_controlPoint == null)
                    || (_controlPoint.Equals(value) != true))) {
          _controlPoint = value;
          OnPropertyChanged("controlPoint");
        }
      }
    }
  }

  /// <summary>
  /// gml:LineStringSegmentArrayPropertyType provides a container for line strings.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LineStringSegmentArrayPropertyType")]
  public class LineStringSegmentArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<LineStringSegmentType> _lineStringSegment;
    #endregion

    /// <summary>
    /// LineStringSegmentArrayPropertyType class constructor
    /// </summary>
    public LineStringSegmentArrayPropertyType() {
      _lineStringSegment = new List<LineStringSegmentType>();
    }

    [XmlElement("LineStringSegment", Order = 0)]
    [JsonProperty("LineStringSegment", Order = 0)]
    public List<LineStringSegmentType> LineStringSegment {
      get {
        return _lineStringSegment;
      }
      set {
        if ((_lineStringSegment == value)) {
          return;
        }
        if (((_lineStringSegment == null)
                    || (_lineStringSegment.Equals(value) != true))) {
          _lineStringSegment = value;
          OnPropertyChanged("LineStringSegment");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TinTypeControlPoint")]
  public class TinTypeControlPoint : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("pointProperty", typeof(PointPropertyType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("posList", typeof(DirectPositionListType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PolyhedralSurfaceType")]
  public class PolyhedralSurfaceType : SurfaceType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PolygonType")]
  public class PolygonType : AbstractSurfaceType {
    #region Private fields
    private AbstractRingPropertyType _exterior;
    private List<AbstractRingPropertyType> _interior;
    #endregion

    /// <summary>
    /// PolygonType class constructor
    /// </summary>
    public PolygonType() {
      _interior = new List<AbstractRingPropertyType>();
      _exterior = new AbstractRingPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("exterior", Order = 0)]
    public AbstractRingPropertyType exterior {
      get {
        return _exterior;
      }
      set {
        if ((_exterior == value)) {
          return;
        }
        if (((_exterior == null)
                    || (_exterior.Equals(value) != true))) {
          _exterior = value;
          OnPropertyChanged("exterior");
        }
      }
    }

    [XmlElement("interior", Order = 1)]
    [JsonProperty("interior", Order = 1)]
    public List<AbstractRingPropertyType> interior {
      get {
        return _interior;
      }
      set {
        if ((_interior == value)) {
          return;
        }
        if (((_interior == null)
                    || (_interior.Equals(value) != true))) {
          _interior = value;
          OnPropertyChanged("interior");
        }
      }
    }
  }

  /// <summary>
  /// gml:SolidArrayPropertyType is a container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SolidArrayPropertyType")]
  public class SolidArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractSolidType> _abstractSolid;
    private bool _owns;
    #endregion

    /// <summary>
    /// SolidArrayPropertyType class constructor
    /// </summary>
    public SolidArrayPropertyType() {
      _abstractSolid = new List<AbstractSolidType>();
      _owns = false;
    }

    [XmlElement("AbstractSolid", Order = 0)]
    [JsonProperty("AbstractSolid", Order = 0)]
    public List<AbstractSolidType> AbstractSolid {
      get {
        return _abstractSolid;
      }
      set {
        if ((_abstractSolid == value)) {
          return;
        }
        if (((_abstractSolid == null)
                    || (_abstractSolid.Equals(value) != true))) {
          _abstractSolid = value;
          OnPropertyChanged("AbstractSolid");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSurfaceType")]
  public class MultiSurfaceType : AbstractGeometricAggregateType {
    #region Private fields
    private List<SurfacePropertyType> _surfaceMember;
    private SurfaceArrayPropertyType _surfaceMembers;
    #endregion

    /// <summary>
    /// MultiSurfaceType class constructor
    /// </summary>
    public MultiSurfaceType() {
      _surfaceMembers = new SurfaceArrayPropertyType();
      _surfaceMember = new List<SurfacePropertyType>();
    }

    [XmlElement("surfaceMember", Order = 0)]
    [JsonProperty("surfaceMember", Order = 0)]
    public List<SurfacePropertyType> surfaceMember {
      get {
        return _surfaceMember;
      }
      set {
        if ((_surfaceMember == value)) {
          return;
        }
        if (((_surfaceMember == null)
                    || (_surfaceMember.Equals(value) != true))) {
          _surfaceMember = value;
          OnPropertyChanged("surfaceMember");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("surfaceMembers", Order = 1)]
    public SurfaceArrayPropertyType surfaceMembers {
      get {
        return _surfaceMembers;
      }
      set {
        if ((_surfaceMembers == value)) {
          return;
        }
        if (((_surfaceMembers == null)
                    || (_surfaceMembers.Equals(value) != true))) {
          _surfaceMembers = value;
          OnPropertyChanged("surfaceMembers");
        }
      }
    }
  }

  /// <summary>
  /// gml:SurfaceArrayPropertyType is a container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SurfaceArrayPropertyType")]
  public class SurfaceArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractSurfaceType> _abstractSurface;
    private bool _owns;
    #endregion

    /// <summary>
    /// SurfaceArrayPropertyType class constructor
    /// </summary>
    public SurfaceArrayPropertyType() {
      _abstractSurface = new List<AbstractSurfaceType>();
      _owns = false;
    }

    [XmlElement("AbstractSurface", Order = 0)]
    [JsonProperty("AbstractSurface", Order = 0)]
    public List<AbstractSurfaceType> AbstractSurface {
      get {
        return _abstractSurface;
      }
      set {
        if ((_abstractSurface == value)) {
          return;
        }
        if (((_abstractSurface == null)
                    || (_abstractSurface.Equals(value) != true))) {
          _abstractSurface = value;
          OnPropertyChanged("AbstractSurface");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiCurveType")]
  public class MultiCurveType : AbstractGeometricAggregateType {
    #region Private fields
    private List<CurvePropertyType> _curveMember;
    private CurveArrayPropertyType _curveMembers;
    #endregion

    /// <summary>
    /// MultiCurveType class constructor
    /// </summary>
    public MultiCurveType() {
      _curveMembers = new CurveArrayPropertyType();
      _curveMember = new List<CurvePropertyType>();
    }

    [XmlElement("curveMember", Order = 0)]
    [JsonProperty("curveMember", Order = 0)]
    public List<CurvePropertyType> curveMember {
      get {
        return _curveMember;
      }
      set {
        if ((_curveMember == value)) {
          return;
        }
        if (((_curveMember == null)
                    || (_curveMember.Equals(value) != true))) {
          _curveMember = value;
          OnPropertyChanged("curveMember");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("curveMembers", Order = 1)]
    public CurveArrayPropertyType curveMembers {
      get {
        return _curveMembers;
      }
      set {
        if ((_curveMembers == value)) {
          return;
        }
        if (((_curveMembers == null)
                    || (_curveMembers.Equals(value) != true))) {
          _curveMembers = value;
          OnPropertyChanged("curveMembers");
        }
      }
    }
  }

  /// <summary>
  /// A container for an array of curves. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CurveArrayPropertyType")]
  public class CurveArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractCurveType> _abstractCurve;
    private bool _owns;
    #endregion

    /// <summary>
    /// CurveArrayPropertyType class constructor
    /// </summary>
    public CurveArrayPropertyType() {
      _abstractCurve = new List<AbstractCurveType>();
      _owns = false;
    }

    [XmlElement("AbstractCurve", Order = 0)]
    [JsonProperty("AbstractCurve", Order = 0)]
    public List<AbstractCurveType> AbstractCurve {
      get {
        return _abstractCurve;
      }
      set {
        if ((_abstractCurve == value)) {
          return;
        }
        if (((_abstractCurve == null)
                    || (_abstractCurve.Equals(value) != true))) {
          _abstractCurve = value;
          OnPropertyChanged("AbstractCurve");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiPointType")]
  public class MultiPointType : AbstractGeometricAggregateType {
    #region Private fields
    private List<PointPropertyType> _pointMember;
    private PointArrayPropertyType _pointMembers;
    #endregion

    /// <summary>
    /// MultiPointType class constructor
    /// </summary>
    public MultiPointType() {
      _pointMembers = new PointArrayPropertyType();
      _pointMember = new List<PointPropertyType>();
    }

    [XmlElement("pointMember", Order = 0)]
    [JsonProperty("pointMember", Order = 0)]
    public List<PointPropertyType> pointMember {
      get {
        return _pointMember;
      }
      set {
        if ((_pointMember == value)) {
          return;
        }
        if (((_pointMember == null)
                    || (_pointMember.Equals(value) != true))) {
          _pointMember = value;
          OnPropertyChanged("pointMember");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("pointMembers", Order = 1)]
    public PointArrayPropertyType pointMembers {
      get {
        return _pointMembers;
      }
      set {
        if ((_pointMembers == value)) {
          return;
        }
        if (((_pointMembers == null)
                    || (_pointMembers.Equals(value) != true))) {
          _pointMembers = value;
          OnPropertyChanged("pointMembers");
        }
      }
    }
  }

  /// <summary>
  /// gml:PointArrayPropertyType is a container for an array of points. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PointArrayPropertyType")]
  public class PointArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<PointType> _point;
    private bool _owns;
    #endregion

    /// <summary>
    /// PointArrayPropertyType class constructor
    /// </summary>
    public PointArrayPropertyType() {
      _point = new List<PointType>();
      _owns = false;
    }

    [XmlElement("Point", Order = 0)]
    [JsonProperty("Point", Order = 0)]
    public List<PointType> Point {
      get {
        return _point;
      }
      set {
        if ((_point == value)) {
          return;
        }
        if (((_point == null)
                    || (_point.Equals(value) != true))) {
          _point = value;
          OnPropertyChanged("Point");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiGeometryType")]
  public class MultiGeometryType : AbstractGeometricAggregateType {
    #region Private fields
    private List<GeometryPropertyType> _geometryMember;
    private GeometryArrayPropertyType _geometryMembers;
    #endregion

    /// <summary>
    /// MultiGeometryType class constructor
    /// </summary>
    public MultiGeometryType() {
      _geometryMembers = new GeometryArrayPropertyType();
      _geometryMember = new List<GeometryPropertyType>();
    }

    [XmlElement("geometryMember", Order = 0)]
    [JsonProperty("geometryMember", Order = 0)]
    public List<GeometryPropertyType> geometryMember {
      get {
        return _geometryMember;
      }
      set {
        if ((_geometryMember == value)) {
          return;
        }
        if (((_geometryMember == null)
                    || (_geometryMember.Equals(value) != true))) {
          _geometryMember = value;
          OnPropertyChanged("geometryMember");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("geometryMembers", Order = 1)]
    public GeometryArrayPropertyType geometryMembers {
      get {
        return _geometryMembers;
      }
      set {
        if ((_geometryMembers == value)) {
          return;
        }
        if (((_geometryMembers == null)
                    || (_geometryMembers.Equals(value) != true))) {
          _geometryMembers = value;
          OnPropertyChanged("geometryMembers");
        }
      }
    }
  }

  /// <summary>
  /// A geometric property may either be any geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same or another document). Note that either the reference or the contained element shall be given, but not both or none.
  /// If a feature has a property that takes a geometry element as its value, this is called a geometry property. A generic type for such a geometry property is GeometryPropertyType.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeometryPropertyType")]
  public class GeometryPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeometryType _abstractGeometry;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// GeometryPropertyType class constructor
    /// </summary>
    public GeometryPropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeometry", Order = 0)]
    public AbstractGeometryType AbstractGeometry {
      get {
        return _abstractGeometry;
      }
      set {
        if ((_abstractGeometry == value)) {
          return;
        }
        if (((_abstractGeometry == null)
                    || (_abstractGeometry.Equals(value) != true))) {
          _abstractGeometry = value;
          OnPropertyChanged("AbstractGeometry");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// If a feature has a property which takes an array of geometry elements as its value, this is called a geometry array property. A generic type for such a geometry property is GeometryArrayPropertyType.
  /// The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeometryArrayPropertyType")]
  public class GeometryArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractGeometryType> _abstractGeometry;
    private bool _owns;
    #endregion

    /// <summary>
    /// GeometryArrayPropertyType class constructor
    /// </summary>
    public GeometryArrayPropertyType() {
      _abstractGeometry = new List<AbstractGeometryType>();
      _owns = false;
    }

    [XmlElement("AbstractGeometry", Order = 0)]
    [JsonProperty("AbstractGeometry", Order = 0)]
    public List<AbstractGeometryType> AbstractGeometry {
      get {
        return _abstractGeometry;
      }
      set {
        if ((_abstractGeometry == value)) {
          return;
        }
        if (((_abstractGeometry == null)
                    || (_abstractGeometry.Equals(value) != true))) {
          _abstractGeometry = value;
          OnPropertyChanged("AbstractGeometry");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectedFacePropertyType")]
  public class DirectedFacePropertyType : INotifyPropertyChanged {
    #region Private fields
    private FaceType _face;
    private SignType _orientation;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// DirectedFacePropertyType class constructor
    /// </summary>
    public DirectedFacePropertyType() {
      _face = new FaceType();
      _orientation = SignType.Item1;
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Face", Order = 0)]
    public FaceType Face {
      get {
        return _face;
      }
      set {
        if ((_face == value)) {
          return;
        }
        if (((_face == null)
                    || (_face.Equals(value) != true))) {
          _face = value;
          OnPropertyChanged("Face");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(SignType.Item1)]
    [JsonProperty("orientation")]
    public SignType orientation {
      get {
        return _orientation;
      }
      set {
        if ((_orientation.Equals(value) != true)) {
          _orientation = value;
          OnPropertyChanged("orientation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("FaceType")]
  public class FaceType : AbstractTopoPrimitiveType {
    #region Private fields
    private List<DirectedEdgePropertyType> _directedEdge;
    private List<DirectedTopoSolidPropertyType> _directedTopoSolid;
    private SurfacePropertyType _surfaceProperty;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// FaceType class constructor
    /// </summary>
    public FaceType() {
      _surfaceProperty = new SurfacePropertyType();
      _directedTopoSolid = new List<DirectedTopoSolidPropertyType>();
      _directedEdge = new List<DirectedEdgePropertyType>();
    }

    [XmlElement("directedEdge", Order = 0)]
    [JsonProperty("directedEdge", Order = 0)]
    public List<DirectedEdgePropertyType> directedEdge {
      get {
        return _directedEdge;
      }
      set {
        if ((_directedEdge == value)) {
          return;
        }
        if (((_directedEdge == null)
                    || (_directedEdge.Equals(value) != true))) {
          _directedEdge = value;
          OnPropertyChanged("directedEdge");
        }
      }
    }

    [XmlElement("directedTopoSolid", Order = 1)]
    [JsonProperty("directedTopoSolid", Order = 1)]
    public List<DirectedTopoSolidPropertyType> directedTopoSolid {
      get {
        return _directedTopoSolid;
      }
      set {
        if ((_directedTopoSolid == value)) {
          return;
        }
        if (((_directedTopoSolid == null)
                    || (_directedTopoSolid.Equals(value) != true))) {
          _directedTopoSolid = value;
          OnPropertyChanged("directedTopoSolid");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("surfaceProperty", Order = 2)]
    public SurfacePropertyType surfaceProperty {
      get {
        return _surfaceProperty;
      }
      set {
        if ((_surfaceProperty == value)) {
          return;
        }
        if (((_surfaceProperty == null)
                    || (_surfaceProperty.Equals(value) != true))) {
          _surfaceProperty = value;
          OnPropertyChanged("surfaceProperty");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectedTopoSolidPropertyType")]
  public class DirectedTopoSolidPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TopoSolidType _topoSolid;
    private SignType _orientation;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// DirectedTopoSolidPropertyType class constructor
    /// </summary>
    public DirectedTopoSolidPropertyType() {
      _topoSolid = new TopoSolidType();
      _orientation = SignType.Item1;
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TopoSolid", Order = 0)]
    public TopoSolidType TopoSolid {
      get {
        return _topoSolid;
      }
      set {
        if ((_topoSolid == value)) {
          return;
        }
        if (((_topoSolid == null)
                    || (_topoSolid.Equals(value) != true))) {
          _topoSolid = value;
          OnPropertyChanged("TopoSolid");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(SignType.Item1)]
    [JsonProperty("orientation")]
    public SignType orientation {
      get {
        return _orientation;
      }
      set {
        if ((_orientation.Equals(value) != true)) {
          _orientation = value;
          OnPropertyChanged("orientation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoSolidType")]
  public class TopoSolidType : AbstractTopoPrimitiveType {
    #region Private fields
    private List<DirectedFacePropertyType> _directedFace;
    private SolidPropertyType _solidProperty;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// TopoSolidType class constructor
    /// </summary>
    public TopoSolidType() {
      _solidProperty = new SolidPropertyType();
      _directedFace = new List<DirectedFacePropertyType>();
    }

    [XmlElement("directedFace", Order = 0)]
    [JsonProperty("directedFace", Order = 0)]
    public List<DirectedFacePropertyType> directedFace {
      get {
        return _directedFace;
      }
      set {
        if ((_directedFace == value)) {
          return;
        }
        if (((_directedFace == null)
                    || (_directedFace.Equals(value) != true))) {
          _directedFace = value;
          OnPropertyChanged("directedFace");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("solidProperty", Order = 1)]
    public SolidPropertyType solidProperty {
      get {
        return _solidProperty;
      }
      set {
        if ((_solidProperty == value)) {
          return;
        }
        if (((_solidProperty == null)
                    || (_solidProperty.Equals(value) != true))) {
          _solidProperty = value;
          OnPropertyChanged("solidProperty");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ContainerPropertyType")]
  public class ContainerPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractTopoPrimitiveType _item;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// ContainerPropertyType class constructor
    /// </summary>
    public ContainerPropertyType() {
      _owns = false;
    }

    [XmlElement("Face", typeof(FaceType), Order = 0)]
    [XmlElement("TopoSolid", typeof(TopoSolidType), Order = 0)]
    public AbstractTopoPrimitiveType Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoPrimitiveArrayAssociationType")]
  public class TopoPrimitiveArrayAssociationType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractTopoPrimitiveType> _abstractTopoPrimitive;
    private bool _owns;
    #endregion

    /// <summary>
    /// TopoPrimitiveArrayAssociationType class constructor
    /// </summary>
    public TopoPrimitiveArrayAssociationType() {
      _abstractTopoPrimitive = new List<AbstractTopoPrimitiveType>();
      _owns = false;
    }

    [XmlElement("AbstractTopoPrimitive", Order = 0)]
    [JsonProperty("AbstractTopoPrimitive", Order = 0)]
    public List<AbstractTopoPrimitiveType> AbstractTopoPrimitive {
      get {
        return _abstractTopoPrimitive;
      }
      set {
        if ((_abstractTopoPrimitive == value)) {
          return;
        }
        if (((_abstractTopoPrimitive == null)
                    || (_abstractTopoPrimitive.Equals(value) != true))) {
          _abstractTopoPrimitive = value;
          OnPropertyChanged("AbstractTopoPrimitive");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoVolumeType")]
  public class TopoVolumeType : AbstractTopologyType {
    #region Private fields
    private List<DirectedTopoSolidPropertyType> _directedTopoSolid;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// TopoVolumeType class constructor
    /// </summary>
    public TopoVolumeType() {
      _directedTopoSolid = new List<DirectedTopoSolidPropertyType>();
    }

    [XmlElement("directedTopoSolid", Order = 0)]
    [JsonProperty("directedTopoSolid", Order = 0)]
    public List<DirectedTopoSolidPropertyType> directedTopoSolid {
      get {
        return _directedTopoSolid;
      }
      set {
        if ((_directedTopoSolid == value)) {
          return;
        }
        if (((_directedTopoSolid == null)
                    || (_directedTopoSolid.Equals(value) != true))) {
          _directedTopoSolid = value;
          OnPropertyChanged("directedTopoSolid");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoSurfaceType")]
  public class TopoSurfaceType : AbstractTopologyType {
    #region Private fields
    private List<DirectedFacePropertyType> _directedFace;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// TopoSurfaceType class constructor
    /// </summary>
    public TopoSurfaceType() {
      _directedFace = new List<DirectedFacePropertyType>();
    }

    [XmlElement("directedFace", Order = 0)]
    [JsonProperty("directedFace", Order = 0)]
    public List<DirectedFacePropertyType> directedFace {
      get {
        return _directedFace;
      }
      set {
        if ((_directedFace == value)) {
          return;
        }
        if (((_directedFace == null)
                    || (_directedFace.Equals(value) != true))) {
          _directedFace = value;
          OnPropertyChanged("directedFace");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoCurveType")]
  public class TopoCurveType : AbstractTopologyType {
    #region Private fields
    private List<DirectedEdgePropertyType> _directedEdge;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// TopoCurveType class constructor
    /// </summary>
    public TopoCurveType() {
      _directedEdge = new List<DirectedEdgePropertyType>();
    }

    [XmlElement("directedEdge", Order = 0)]
    [JsonProperty("directedEdge", Order = 0)]
    public List<DirectedEdgePropertyType> directedEdge {
      get {
        return _directedEdge;
      }
      set {
        if ((_directedEdge == value)) {
          return;
        }
        if (((_directedEdge == null)
                    || (_directedEdge.Equals(value) != true))) {
          _directedEdge = value;
          OnPropertyChanged("directedEdge");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoPointType")]
  public class TopoPointType : AbstractTopologyType {
    #region Private fields
    private DirectedNodePropertyType _directedNode;
    #endregion

    /// <summary>
    /// TopoPointType class constructor
    /// </summary>
    public TopoPointType() {
      _directedNode = new DirectedNodePropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("directedNode", Order = 0)]
    public DirectedNodePropertyType directedNode {
      get {
        return _directedNode;
      }
      set {
        if ((_directedNode == value)) {
          return;
        }
        if (((_directedNode == null)
                    || (_directedNode.Equals(value) != true))) {
          _directedNode = value;
          OnPropertyChanged("directedNode");
        }
      }
    }
  }

  [XmlInclude(typeof(ValueArrayType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CompositeValueType")]
  public class CompositeValueType : AbstractGMLType {
    #region Private fields
    private List<ValuePropertyType> _valueComponent;
    private ValueArrayPropertyType _valueComponents;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// CompositeValueType class constructor
    /// </summary>
    public CompositeValueType() {
      _valueComponents = new ValueArrayPropertyType();
      _valueComponent = new List<ValuePropertyType>();
    }

    [XmlElement("valueComponent", Order = 0)]
    [JsonProperty("valueComponent", Order = 0)]
    public List<ValuePropertyType> valueComponent {
      get {
        return _valueComponent;
      }
      set {
        if ((_valueComponent == value)) {
          return;
        }
        if (((_valueComponent == null)
                    || (_valueComponent.Equals(value) != true))) {
          _valueComponent = value;
          OnPropertyChanged("valueComponent");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("valueComponents", Order = 1)]
    public ValueArrayPropertyType valueComponents {
      get {
        return _valueComponents;
      }
      set {
        if ((_valueComponents == value)) {
          return;
        }
        if (((_valueComponents == null)
                    || (_valueComponents.Equals(value) != true))) {
          _valueComponents = value;
          OnPropertyChanged("valueComponents");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ValuePropertyType")]
  public class ValuePropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _abstractValue;
    private AbstractGeometryType _abstractGeometry;
    private AbstractTimeObjectType _abstractTimeObject;
    private string _null;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// ValuePropertyType class constructor
    /// </summary>
    public ValuePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractValue", Order = 0)]
    public object AbstractValue {
      get {
        return _abstractValue;
      }
      set {
        if ((_abstractValue == value)) {
          return;
        }
        if (((_abstractValue == null)
                    || (_abstractValue.Equals(value) != true))) {
          _abstractValue = value;
          OnPropertyChanged("AbstractValue");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("AbstractGeometry", Order = 1)]
    public AbstractGeometryType AbstractGeometry {
      get {
        return _abstractGeometry;
      }
      set {
        if ((_abstractGeometry == value)) {
          return;
        }
        if (((_abstractGeometry == null)
                    || (_abstractGeometry.Equals(value) != true))) {
          _abstractGeometry = value;
          OnPropertyChanged("AbstractGeometry");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("AbstractTimeObject", Order = 2)]
    public AbstractTimeObjectType AbstractTimeObject {
      get {
        return _abstractTimeObject;
      }
      set {
        if ((_abstractTimeObject == value)) {
          return;
        }
        if (((_abstractTimeObject == null)
                    || (_abstractTimeObject.Equals(value) != true))) {
          _abstractTimeObject = value;
          OnPropertyChanged("AbstractTimeObject");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("Null", Order = 3)]
    public string Null {
      get {
        return _null;
      }
      set {
        if ((_null == value)) {
          return;
        }
        if (((_null == null)
                    || (_null.Equals(value) != true))) {
          _null = value;
          OnPropertyChanged("Null");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(AbstractTimeComplexType))]
  [XmlInclude(typeof(TimeTopologyComplexType))]
  [XmlInclude(typeof(AbstractTimePrimitiveType))]
  [XmlInclude(typeof(AbstractTimeTopologyPrimitiveType))]
  [XmlInclude(typeof(TimeEdgeType))]
  [XmlInclude(typeof(TimeNodeType))]
  [XmlInclude(typeof(AbstractTimeGeometricPrimitiveType))]
  [XmlInclude(typeof(TimePeriodType))]
  [XmlInclude(typeof(TimeInstantType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTimeObjectType")]
  public abstract class AbstractTimeObjectType : AbstractGMLType {
  }

  [XmlInclude(typeof(TimeTopologyComplexType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTimeComplexType")]
  public abstract class AbstractTimeComplexType : AbstractTimeObjectType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeTopologyComplexType")]
  public abstract class TimeTopologyComplexType : AbstractTimeComplexType {
    #region Private fields
    private List<TimeTopologyPrimitivePropertyType> _primitive;
    #endregion

    /// <summary>
    /// TimeTopologyComplexType class constructor
    /// </summary>
    public TimeTopologyComplexType() {
      _primitive = new List<TimeTopologyPrimitivePropertyType>();
    }

    [XmlElement("primitive", Order = 0)]
    [JsonProperty("primitive", Order = 0)]
    public List<TimeTopologyPrimitivePropertyType> primitive {
      get {
        return _primitive;
      }
      set {
        if ((_primitive == value)) {
          return;
        }
        if (((_primitive == null)
                    || (_primitive.Equals(value) != true))) {
          _primitive = value;
          OnPropertyChanged("primitive");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeTopologyPrimitivePropertyType provides for associating a gml:AbstractTimeTopologyPrimitive with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeTopologyPrimitivePropertyType")]
  public class TimeTopologyPrimitivePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractTimeTopologyPrimitiveType _abstractTimeTopologyPrimitive;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimeTopologyPrimitivePropertyType class constructor
    /// </summary>
    public TimeTopologyPrimitivePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractTimeTopologyPrimitive", Order = 0)]
    public AbstractTimeTopologyPrimitiveType AbstractTimeTopologyPrimitive {
      get {
        return _abstractTimeTopologyPrimitive;
      }
      set {
        if ((_abstractTimeTopologyPrimitive == value)) {
          return;
        }
        if (((_abstractTimeTopologyPrimitive == null)
                    || (_abstractTimeTopologyPrimitive.Equals(value) != true))) {
          _abstractTimeTopologyPrimitive = value;
          OnPropertyChanged("AbstractTimeTopologyPrimitive");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(TimeEdgeType))]
  [XmlInclude(typeof(TimeNodeType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTimeTopologyPrimitiveType")]
  public abstract class AbstractTimeTopologyPrimitiveType : AbstractTimePrimitiveType {
    #region Private fields
    private ReferenceType _complex;
    #endregion

    /// <summary>
    /// AbstractTimeTopologyPrimitiveType class constructor
    /// </summary>
    public AbstractTimeTopologyPrimitiveType() {
      _complex = new ReferenceType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("complex", Order = 0)]
    public ReferenceType complex {
      get {
        return _complex;
      }
      set {
        if ((_complex == value)) {
          return;
        }
        if (((_complex == null)
                    || (_complex.Equals(value) != true))) {
          _complex = value;
          OnPropertyChanged("complex");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeEdgeType")]
  public class TimeEdgeType : AbstractTimeTopologyPrimitiveType {
    #region Private fields
    private TimeNodePropertyType _start;
    private TimeNodePropertyType _end;
    private TimePeriodPropertyType _extent;
    #endregion

    /// <summary>
    /// TimeEdgeType class constructor
    /// </summary>
    public TimeEdgeType() {
      _extent = new TimePeriodPropertyType();
      _end = new TimeNodePropertyType();
      _start = new TimeNodePropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("start", Order = 0)]
    public TimeNodePropertyType start {
      get {
        return _start;
      }
      set {
        if ((_start == value)) {
          return;
        }
        if (((_start == null)
                    || (_start.Equals(value) != true))) {
          _start = value;
          OnPropertyChanged("start");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("end", Order = 1)]
    public TimeNodePropertyType end {
      get {
        return _end;
      }
      set {
        if ((_end == value)) {
          return;
        }
        if (((_end == null)
                    || (_end.Equals(value) != true))) {
          _end = value;
          OnPropertyChanged("end");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("extent", Order = 2)]
    public TimePeriodPropertyType extent {
      get {
        return _extent;
      }
      set {
        if ((_extent == value)) {
          return;
        }
        if (((_extent == null)
                    || (_extent.Equals(value) != true))) {
          _extent = value;
          OnPropertyChanged("extent");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeNodePropertyType provides for associating a gml:TimeNode with an object
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeNodePropertyType")]
  public class TimeNodePropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeNodeType _timeNode;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimeNodePropertyType class constructor
    /// </summary>
    public TimeNodePropertyType() {
      _timeNode = new TimeNodeType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeNode", Order = 0)]
    public TimeNodeType TimeNode {
      get {
        return _timeNode;
      }
      set {
        if ((_timeNode == value)) {
          return;
        }
        if (((_timeNode == null)
                    || (_timeNode.Equals(value) != true))) {
          _timeNode = value;
          OnPropertyChanged("TimeNode");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeNodeType")]
  public class TimeNodeType : AbstractTimeTopologyPrimitiveType {
    #region Private fields
    private List<TimeEdgePropertyType> _previousEdge;
    private List<TimeEdgePropertyType> _nextEdge;
    private TimeInstantPropertyType _position;
    #endregion

    /// <summary>
    /// TimeNodeType class constructor
    /// </summary>
    public TimeNodeType() {
      _position = new TimeInstantPropertyType();
      _nextEdge = new List<TimeEdgePropertyType>();
      _previousEdge = new List<TimeEdgePropertyType>();
    }

    [XmlElement("previousEdge", Order = 0)]
    [JsonProperty("previousEdge", Order = 0)]
    public List<TimeEdgePropertyType> previousEdge {
      get {
        return _previousEdge;
      }
      set {
        if ((_previousEdge == value)) {
          return;
        }
        if (((_previousEdge == null)
                    || (_previousEdge.Equals(value) != true))) {
          _previousEdge = value;
          OnPropertyChanged("previousEdge");
        }
      }
    }

    [XmlElement("nextEdge", Order = 1)]
    [JsonProperty("nextEdge", Order = 1)]
    public List<TimeEdgePropertyType> nextEdge {
      get {
        return _nextEdge;
      }
      set {
        if ((_nextEdge == value)) {
          return;
        }
        if (((_nextEdge == null)
                    || (_nextEdge.Equals(value) != true))) {
          _nextEdge = value;
          OnPropertyChanged("nextEdge");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("position", Order = 2)]
    public TimeInstantPropertyType position {
      get {
        return _position;
      }
      set {
        if ((_position == value)) {
          return;
        }
        if (((_position == null)
                    || (_position.Equals(value) != true))) {
          _position = value;
          OnPropertyChanged("position");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeEdgePropertyType provides for associating a gml:TimeEdge with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeEdgePropertyType")]
  public class TimeEdgePropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeEdgeType _timeEdge;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimeEdgePropertyType class constructor
    /// </summary>
    public TimeEdgePropertyType() {
      _timeEdge = new TimeEdgeType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeEdge", Order = 0)]
    public TimeEdgeType TimeEdge {
      get {
        return _timeEdge;
      }
      set {
        if ((_timeEdge == value)) {
          return;
        }
        if (((_timeEdge == null)
                    || (_timeEdge.Equals(value) != true))) {
          _timeEdge = value;
          OnPropertyChanged("TimeEdge");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ValueArrayPropertyType")]
  public class ValueArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<object> _items;
    private bool _owns;
    #endregion

    /// <summary>
    /// ValueArrayPropertyType class constructor
    /// </summary>
    public ValueArrayPropertyType() {
      _items = new List<object>();
      _owns = false;
    }

    [XmlElement("AbstractGeometry", typeof(AbstractGeometryType), Order = 0)]
    [XmlElement("AbstractTimeObject", typeof(AbstractTimeObjectType), Order = 0)]
    [XmlElement("AbstractValue", typeof(object), Order = 0)]
    [XmlElement("Null", typeof(string), Order = 0)]
    public List<object> Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ValueArrayType")]
  public class ValueArrayType : CompositeValueType {
    #region Private fields
    private string _codeSpace;
    private string _uom;
    #endregion

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("codeSpace")]
    public string codeSpace {
      get {
        return _codeSpace;
      }
      set {
        if ((_codeSpace == value)) {
          return;
        }
        if (((_codeSpace == null)
                    || (_codeSpace.Equals(value) != true))) {
          _codeSpace = value;
          OnPropertyChanged("codeSpace");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uom")]
    public string uom {
      get {
        return _uom;
      }
      set {
        if ((_uom == value)) {
          return;
        }
        if (((_uom == null)
                    || (_uom.Equals(value) != true))) {
          _uom = value;
          OnPropertyChanged("uom");
        }
      }
    }
  }

  [XmlInclude(typeof(MovingObjectStatusType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractTimeSliceType")]
  public abstract class AbstractTimeSliceType : AbstractGMLType {
    #region Private fields
    private TimePrimitivePropertyType _validTime;
    private StringOrRefType _dataSource;
    #endregion

    /// <summary>
    /// AbstractTimeSliceType class constructor
    /// </summary>
    public AbstractTimeSliceType() {
      _dataSource = new StringOrRefType();
      _validTime = new TimePrimitivePropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("validTime", Order = 0)]
    public TimePrimitivePropertyType validTime {
      get {
        return _validTime;
      }
      set {
        if ((_validTime == value)) {
          return;
        }
        if (((_validTime == null)
                    || (_validTime.Equals(value) != true))) {
          _validTime = value;
          OnPropertyChanged("validTime");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("dataSource", Order = 1)]
    public StringOrRefType dataSource {
      get {
        return _dataSource;
      }
      set {
        if ((_dataSource == value)) {
          return;
        }
        if (((_dataSource == null)
                    || (_dataSource.Equals(value) != true))) {
          _dataSource = value;
          OnPropertyChanged("dataSource");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MovingObjectStatusType")]
  public class MovingObjectStatusType : AbstractTimeSliceType {
    #region Private fields
    private object _item;
    private MeasureType _speed;
    private DirectionPropertyType _bearing;
    private MeasureType _acceleration;
    private MeasureType _elevation;
    private StringOrRefType _status;
    private ReferenceType _statusReference;
    #endregion

    /// <summary>
    /// MovingObjectStatusType class constructor
    /// </summary>
    public MovingObjectStatusType() {
      _statusReference = new ReferenceType();
      _status = new StringOrRefType();
      _elevation = new MeasureType();
      _acceleration = new MeasureType();
      _bearing = new DirectionPropertyType();
      _speed = new MeasureType();
    }

    [XmlElement("location", typeof(LocationPropertyType), Order = 0)]
    [XmlElement("locationName", typeof(CodeType), Order = 0)]
    [XmlElement("locationReference", typeof(ReferenceType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("position", typeof(GeometryPropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("speed", Order = 1)]
    public MeasureType speed {
      get {
        return _speed;
      }
      set {
        if ((_speed == value)) {
          return;
        }
        if (((_speed == null)
                    || (_speed.Equals(value) != true))) {
          _speed = value;
          OnPropertyChanged("speed");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("bearing", Order = 2)]
    public DirectionPropertyType bearing {
      get {
        return _bearing;
      }
      set {
        if ((_bearing == value)) {
          return;
        }
        if (((_bearing == null)
                    || (_bearing.Equals(value) != true))) {
          _bearing = value;
          OnPropertyChanged("bearing");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("acceleration", Order = 3)]
    public MeasureType acceleration {
      get {
        return _acceleration;
      }
      set {
        if ((_acceleration == value)) {
          return;
        }
        if (((_acceleration == null)
                    || (_acceleration.Equals(value) != true))) {
          _acceleration = value;
          OnPropertyChanged("acceleration");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("elevation", Order = 4)]
    public MeasureType elevation {
      get {
        return _elevation;
      }
      set {
        if ((_elevation == value)) {
          return;
        }
        if (((_elevation == null)
                    || (_elevation.Equals(value) != true))) {
          _elevation = value;
          OnPropertyChanged("elevation");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("status", Order = 5)]
    public StringOrRefType status {
      get {
        return _status;
      }
      set {
        if ((_status == value)) {
          return;
        }
        if (((_status == null)
                    || (_status.Equals(value) != true))) {
          _status = value;
          OnPropertyChanged("status");
        }
      }
    }

    [XmlElement(Order = 6)]
    [JsonProperty("statusReference", Order = 6)]
    public ReferenceType statusReference {
      get {
        return _statusReference;
      }
      set {
        if ((_statusReference == value)) {
          return;
        }
        if (((_statusReference == null)
                    || (_statusReference.Equals(value) != true))) {
          _statusReference = value;
          OnPropertyChanged("statusReference");
        }
      }
    }
  }

  [XmlInclude(typeof(PriorityLocationPropertyType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LocationPropertyType")]
  public class LocationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement("AbstractGeometry", typeof(AbstractGeometryType), Order = 0)]
    [XmlElement("LocationKeyWord", typeof(CodeType), Order = 0)]
    [XmlElement("LocationString", typeof(StringOrRefType), Order = 0)]
    [XmlElement("Null", typeof(string), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PriorityLocationPropertyType")]
  public class PriorityLocationPropertyType : LocationPropertyType {
    #region Private fields
    private string _priority;
    #endregion

    [XmlAttribute]
    [JsonProperty("priority")]
    public string priority {
      get {
        return _priority;
      }
      set {
        if ((_priority == value)) {
          return;
        }
        if (((_priority == null)
                    || (_priority.Equals(value) != true))) {
          _priority = value;
          OnPropertyChanged("priority");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectionPropertyType")]
  public class DirectionPropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// DirectionPropertyType class constructor
    /// </summary>
    public DirectionPropertyType() {
      _owns = false;
    }

    [XmlElement("CompassPoint", typeof(CompassPointEnumeration), Order = 0)]
    [XmlElement("DirectionDescription", typeof(DirectionDescriptionType), Order = 0)]
    [XmlElement("DirectionKeyword", typeof(CodeType), Order = 0)]
    [XmlElement("DirectionString", typeof(StringOrRefType), Order = 0)]
    [XmlElement("DirectionVector", typeof(DirectionVectorType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// These directions are necessarily approximate, giving direction with a precision of 22.5°. It is thus generally unnecessary to specify the reference frame, though this may be detailed in the definition of a GML application language.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum CompassPointEnumeration {
    N,
    NNE,
    NE,
    ENE,
    E,
    ESE,
    SE,
    SSE,
    S,
    SSW,
    SW,
    WSW,
    W,
    WNW,
    NW,
    NNW,
  }

  /// <summary>
  /// direction descriptions are specified by a compass point code, a keyword, a textual description or a reference to a description.
  /// A gml:compassPoint is specified by a simple enumeration.
  /// In addition, thre elements to contain text-based descriptions of direction are provided.
  /// If the direction is specified using a term from a list, gml:keyword should be used, and the list indicated using the value of the codeSpace attribute.
  /// if the direction is decribed in prose, gml:direction or gml:reference should be used, allowing the value to be included inline or by reference.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectionDescriptionType")]
  public class DirectionDescriptionType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("compassPoint", typeof(CompassPointEnumeration), Order = 0)]
    [XmlElement("description", typeof(string), Order = 0)]
    [XmlElement("keyword", typeof(CodeType), Order = 0)]
    [XmlElement("reference", typeof(ReferenceType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Direction vectors are specified by providing components of a vector.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectionVectorType")]
  public class DirectionVectorType : INotifyPropertyChanged {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType11[] _itemsElementName;
    #endregion

    [XmlElement("horizontalAngle", typeof(AngleType), Order = 0)]
    [XmlElement("vector", typeof(VectorType), Order = 0)]
    [XmlElement("verticalAngle", typeof(AngleType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType11[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType11 {
    horizontalAngle,
    vector,
    verticalAngle,
  }

  /// <summary>
  /// The basic feature model is given by the gml:AbstractFeatureType.
  /// The content model for gml:AbstractFeatureType adds two specific properties suitable for geographic features to the content model defined in gml:AbstractGMLType.
  /// The value of the gml:boundedBy property describes an envelope that encloses the entire feature instance, and is primarily useful for supporting rapid searching for features that occur in a particular location.
  /// The value of the gml:location property describes the extent, position or relative location of the feature.
  /// </summary>
  [XmlInclude(typeof(ObservationType))]
  [XmlInclude(typeof(DirectedObservationType))]
  [XmlInclude(typeof(DirectedObservationAtDistanceType))]
  [XmlInclude(typeof(AbstractCoverageType))]
  [XmlInclude(typeof(AbstractContinuousCoverageType))]
  [XmlInclude(typeof(AbstractDiscreteCoverageType))]
  [XmlInclude(typeof(RectifiedGridCoverageType))]
  [XmlInclude(typeof(GridCoverageType))]
  [XmlInclude(typeof(MultiSolidCoverageType))]
  [XmlInclude(typeof(MultiSurfaceCoverageType))]
  [XmlInclude(typeof(MultiCurveCoverageType))]
  [XmlInclude(typeof(MultiPointCoverageType))]
  [XmlInclude(typeof(DynamicFeatureType))]
  [XmlInclude(typeof(DynamicFeatureCollectionType))]
  [XmlInclude(typeof(AbstractFeatureCollectionType))]
  [XmlInclude(typeof(FeatureCollectionType))]
  [XmlInclude(typeof(BoundedFeatureType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractFeatureType")]
  public abstract class AbstractFeatureType : AbstractGMLType {
    #region Private fields
    private BoundingShapeType _boundedBy;
    private LocationPropertyType _location;
    #endregion

    /// <summary>
    /// AbstractFeatureType class constructor
    /// </summary>
    public AbstractFeatureType() {
      _location = new LocationPropertyType();
      _boundedBy = new BoundingShapeType();
    }

    [XmlElement(IsNullable = true, Order = 0)]
    [JsonProperty("boundedBy", Order = 0)]
    public BoundingShapeType boundedBy {
      get {
        return _boundedBy;
      }
      set {
        if ((_boundedBy == value)) {
          return;
        }
        if (((_boundedBy == null)
                    || (_boundedBy.Equals(value) != true))) {
          _boundedBy = value;
          OnPropertyChanged("boundedBy");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("location", Order = 1)]
    public LocationPropertyType location {
      get {
        return _location;
      }
      set {
        if ((_location == value)) {
          return;
        }
        if (((_location == null)
                    || (_location.Equals(value) != true))) {
          _location = value;
          OnPropertyChanged("location");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BoundingShapeType")]
  public class BoundingShapeType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    private string _nilReason;
    #endregion

    [XmlElement("Envelope", typeof(EnvelopeType), Order = 0)]
    [XmlElement("Null", typeof(string), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(EnvelopeWithTimePeriodType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EnvelopeType")]
  public class EnvelopeType : INotifyPropertyChanged {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType10[] _itemsElementName;
    private string _srsName;
    private string _srsDimension;
    #endregion

    [XmlElement("coordinates", typeof(CoordinatesType), Order = 0)]
    [XmlElement("lowerCorner", typeof(DirectPositionType), Order = 0)]
    [XmlElement("pos", typeof(DirectPositionType), Order = 0)]
    [XmlElement("upperCorner", typeof(DirectPositionType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType10[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("srsName")]
    public string srsName {
      get {
        return _srsName;
      }
      set {
        if ((_srsName == value)) {
          return;
        }
        if (((_srsName == null)
                    || (_srsName.Equals(value) != true))) {
          _srsName = value;
          OnPropertyChanged("srsName");
        }
      }
    }

    [XmlAttribute(DataType = "positiveInteger")]
    [JsonProperty("srsDimension")]
    public string srsDimension {
      get {
        return _srsDimension;
      }
      set {
        if ((_srsDimension == value)) {
          return;
        }
        if (((_srsDimension == null)
                    || (_srsDimension.Equals(value) != true))) {
          _srsDimension = value;
          OnPropertyChanged("srsDimension");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType10 {
    coordinates,
    lowerCorner,
    pos,
    upperCorner,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EnvelopeWithTimePeriodType")]
  public class EnvelopeWithTimePeriodType : EnvelopeType {
    #region Private fields
    private TimePositionType _beginPosition;
    private TimePositionType _endPosition;
    private string _frame;
    #endregion

    /// <summary>
    /// EnvelopeWithTimePeriodType class constructor
    /// </summary>
    public EnvelopeWithTimePeriodType() {
      _endPosition = new TimePositionType();
      _beginPosition = new TimePositionType();
      _frame = "#ISO-8601";
    }

    [XmlElement(Order = 0)]
    [JsonProperty("beginPosition", Order = 0)]
    public TimePositionType beginPosition {
      get {
        return _beginPosition;
      }
      set {
        if ((_beginPosition == value)) {
          return;
        }
        if (((_beginPosition == null)
                    || (_beginPosition.Equals(value) != true))) {
          _beginPosition = value;
          OnPropertyChanged("beginPosition");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("endPosition", Order = 1)]
    public TimePositionType endPosition {
      get {
        return _endPosition;
      }
      set {
        if ((_endPosition == value)) {
          return;
        }
        if (((_endPosition == null)
                    || (_endPosition.Equals(value) != true))) {
          _endPosition = value;
          OnPropertyChanged("endPosition");
        }
      }
    }

    [XmlAttribute(DataType = "anyURI")]
    [DefaultValue("#ISO-8601")]
    [JsonProperty("frame")]
    public string frame {
      get {
        return _frame;
      }
      set {
        if ((_frame == value)) {
          return;
        }
        if (((_frame == null)
                    || (_frame.Equals(value) != true))) {
          _frame = value;
          OnPropertyChanged("frame");
        }
      }
    }
  }

  [XmlInclude(typeof(DirectedObservationType))]
  [XmlInclude(typeof(DirectedObservationAtDistanceType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ObservationType")]
  public class ObservationType : AbstractFeatureType {
    #region Private fields
    private TimePrimitivePropertyType _validTime;
    private ProcedurePropertyType _using;
    private TargetPropertyType _target;
    private ResultType _resultOf;
    #endregion

    /// <summary>
    /// ObservationType class constructor
    /// </summary>
    public ObservationType() {
      _resultOf = new ResultType();
      _target = new TargetPropertyType();
      _using = new ProcedurePropertyType();
      _validTime = new TimePrimitivePropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("validTime", Order = 0)]
    public TimePrimitivePropertyType validTime {
      get {
        return _validTime;
      }
      set {
        if ((_validTime == value)) {
          return;
        }
        if (((_validTime == null)
                    || (_validTime.Equals(value) != true))) {
          _validTime = value;
          OnPropertyChanged("validTime");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("using", Order = 1)]
    public ProcedurePropertyType @using {
      get {
        return _using;
      }
      set {
        if ((_using == value)) {
          return;
        }
        if (((_using == null)
                    || (_using.Equals(value) != true))) {
          _using = value;
          OnPropertyChanged("using");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("target", Order = 2)]
    public TargetPropertyType target {
      get {
        return _target;
      }
      set {
        if ((_target == value)) {
          return;
        }
        if (((_target == null)
                    || (_target.Equals(value) != true))) {
          _target = value;
          OnPropertyChanged("target");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("resultOf", Order = 3)]
    public ResultType resultOf {
      get {
        return _resultOf;
      }
      set {
        if ((_resultOf == value)) {
          return;
        }
        if (((_resultOf == null)
                    || (_resultOf.Equals(value) != true))) {
          _resultOf = value;
          OnPropertyChanged("resultOf");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ProcedurePropertyType")]
  public class ProcedurePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractFeatureType _abstractFeature;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ProcedurePropertyType class constructor
    /// </summary>
    public ProcedurePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractFeature", Order = 0)]
    public AbstractFeatureType AbstractFeature {
      get {
        return _abstractFeature;
      }
      set {
        if ((_abstractFeature == value)) {
          return;
        }
        if (((_abstractFeature == null)
                    || (_abstractFeature.Equals(value) != true))) {
          _abstractFeature = value;
          OnPropertyChanged("AbstractFeature");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TargetPropertyType")]
  public class TargetPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGMLType _item;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TargetPropertyType class constructor
    /// </summary>
    public TargetPropertyType() {
      _owns = false;
    }

    [XmlElement("AbstractFeature", typeof(AbstractFeatureType), Order = 0)]
    [XmlElement("AbstractGeometry", typeof(AbstractGeometryType), Order = 0)]
    public AbstractGMLType Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ResultType")]
  public class ResultType : INotifyPropertyChanged {
    #region Private fields
    private object _abstractObject;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ResultType class constructor
    /// </summary>
    public ResultType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractObject", Order = 0)]
    public object AbstractObject {
      get {
        return _abstractObject;
      }
      set {
        if ((_abstractObject == value)) {
          return;
        }
        if (((_abstractObject == null)
                    || (_abstractObject.Equals(value) != true))) {
          _abstractObject = value;
          OnPropertyChanged("AbstractObject");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(DirectedObservationAtDistanceType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectedObservationType")]
  public class DirectedObservationType : ObservationType {
    #region Private fields
    private DirectionPropertyType _direction;
    #endregion

    /// <summary>
    /// DirectedObservationType class constructor
    /// </summary>
    public DirectedObservationType() {
      _direction = new DirectionPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("direction", Order = 0)]
    public DirectionPropertyType direction {
      get {
        return _direction;
      }
      set {
        if ((_direction == value)) {
          return;
        }
        if (((_direction == null)
                    || (_direction.Equals(value) != true))) {
          _direction = value;
          OnPropertyChanged("direction");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DirectedObservationAtDistanceType")]
  public class DirectedObservationAtDistanceType : DirectedObservationType {
    #region Private fields
    private MeasureType _distance;
    #endregion

    /// <summary>
    /// DirectedObservationAtDistanceType class constructor
    /// </summary>
    public DirectedObservationAtDistanceType() {
      _distance = new MeasureType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("distance", Order = 0)]
    public MeasureType distance {
      get {
        return _distance;
      }
      set {
        if ((_distance == value)) {
          return;
        }
        if (((_distance == null)
                    || (_distance.Equals(value) != true))) {
          _distance = value;
          OnPropertyChanged("distance");
        }
      }
    }
  }

  /// <summary>
  /// The base type for coverages is gml:AbstractCoverageType. The basic elements of a coverage can be seen in this content model: the coverage contains gml:domainSet and gml:rangeSet properties. The gml:domainSet property describes the domain of the coverage and the gml:rangeSet property describes the range of the coverage.
  /// </summary>
  [XmlInclude(typeof(AbstractContinuousCoverageType))]
  [XmlInclude(typeof(AbstractDiscreteCoverageType))]
  [XmlInclude(typeof(RectifiedGridCoverageType))]
  [XmlInclude(typeof(GridCoverageType))]
  [XmlInclude(typeof(MultiSolidCoverageType))]
  [XmlInclude(typeof(MultiSurfaceCoverageType))]
  [XmlInclude(typeof(MultiCurveCoverageType))]
  [XmlInclude(typeof(MultiPointCoverageType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractCoverageType")]
  public abstract class AbstractCoverageType : AbstractFeatureType {
    #region Private fields
    private DomainSetType _domainSet;
    private RangeSetType _rangeSet;
    #endregion

    /// <summary>
    /// AbstractCoverageType class constructor
    /// </summary>
    public AbstractCoverageType() {
      _rangeSet = new RangeSetType();
      _domainSet = new DomainSetType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("domainSet", Order = 0)]
    public DomainSetType domainSet {
      get {
        return _domainSet;
      }
      set {
        if ((_domainSet == value)) {
          return;
        }
        if (((_domainSet == null)
                    || (_domainSet.Equals(value) != true))) {
          _domainSet = value;
          OnPropertyChanged("domainSet");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("rangeSet", Order = 1)]
    public RangeSetType rangeSet {
      get {
        return _rangeSet;
      }
      set {
        if ((_rangeSet == value)) {
          return;
        }
        if (((_rangeSet == null)
                    || (_rangeSet.Equals(value) != true))) {
          _rangeSet = value;
          OnPropertyChanged("rangeSet");
        }
      }
    }
  }

  [XmlInclude(typeof(RectifiedGridDomainType))]
  [XmlInclude(typeof(GridDomainType))]
  [XmlInclude(typeof(MultiSolidDomainType))]
  [XmlInclude(typeof(MultiSurfaceDomainType))]
  [XmlInclude(typeof(MultiCurveDomainType))]
  [XmlInclude(typeof(MultiPointDomainType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DomainSetType")]
  public class DomainSetType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGMLType _item;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// DomainSetType class constructor
    /// </summary>
    public DomainSetType() {
      _owns = false;
    }

    [XmlElement("AbstractGeometry", typeof(AbstractGeometryType), Order = 0)]
    [XmlElement("AbstractTimeObject", typeof(AbstractTimeObjectType), Order = 0)]
    public AbstractGMLType Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RectifiedGridDomainType")]
  public class RectifiedGridDomainType : DomainSetType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridDomainType")]
  public class GridDomainType : DomainSetType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSolidDomainType")]
  public class MultiSolidDomainType : DomainSetType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSurfaceDomainType")]
  public class MultiSurfaceDomainType : DomainSetType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiCurveDomainType")]
  public class MultiCurveDomainType : DomainSetType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiPointDomainType")]
  public class MultiPointDomainType : DomainSetType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RangeSetType")]
  public class RangeSetType : INotifyPropertyChanged {
    #region Private fields
    private List<object> _items;
    #endregion

    /// <summary>
    /// RangeSetType class constructor
    /// </summary>
    public RangeSetType() {
      _items = new List<object>();
    }

    [XmlElement("AbstractScalarValueList", typeof(object), Order = 0)]
    [XmlElement("DataBlock", typeof(DataBlockType), Order = 0)]
    [XmlElement("File", typeof(FileType), Order = 0)]
    [XmlElement("ValueArray", typeof(ValueArrayType), Order = 0)]
    public List<object> Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DataBlockType")]
  public class DataBlockType : INotifyPropertyChanged {
    #region Private fields
    private RangeParametersType _rangeParameters;
    private object _item;
    #endregion

    /// <summary>
    /// DataBlockType class constructor
    /// </summary>
    public DataBlockType() {
      _rangeParameters = new RangeParametersType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("rangeParameters", Order = 0)]
    public RangeParametersType rangeParameters {
      get {
        return _rangeParameters;
      }
      set {
        if ((_rangeParameters == value)) {
          return;
        }
        if (((_rangeParameters == null)
                    || (_rangeParameters.Equals(value) != true))) {
          _rangeParameters = value;
          OnPropertyChanged("rangeParameters");
        }
      }
    }

    [XmlElement("doubleOrNilReasonTupleList", typeof(string), Order = 1)]
    [XmlElement("tupleList", typeof(CoordinatesType), Order = 1)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:RangeParameterType is a framework for the description of the range parameters each of which is a gml:AbstractValue.  Specific range parameters are defined through the creation of a GML Application Schema that provides elements that are substitutable for gml:AbstractValue.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RangeParametersType")]
  public class RangeParametersType : INotifyPropertyChanged {
    #region Private fields
    private object _abstractValue;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// RangeParametersType class constructor
    /// </summary>
    public RangeParametersType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractValue", Order = 0)]
    public object AbstractValue {
      get {
        return _abstractValue;
      }
      set {
        if ((_abstractValue == value)) {
          return;
        }
        if (((_abstractValue == null)
                    || (_abstractValue.Equals(value) != true))) {
          _abstractValue = value;
          OnPropertyChanged("AbstractValue");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("FileType")]
  public class FileType : INotifyPropertyChanged {
    #region Private fields
    private RangeParametersType _rangeParameters;
    private string _item;
    private ItemChoiceType3 _itemElementName;
    private FileValueModelType _fileStructure;
    private string _mimeType;
    private string _compression;
    #endregion

    /// <summary>
    /// FileType class constructor
    /// </summary>
    public FileType() {
      _rangeParameters = new RangeParametersType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("rangeParameters", Order = 0)]
    public RangeParametersType rangeParameters {
      get {
        return _rangeParameters;
      }
      set {
        if ((_rangeParameters == value)) {
          return;
        }
        if (((_rangeParameters == null)
                    || (_rangeParameters.Equals(value) != true))) {
          _rangeParameters = value;
          OnPropertyChanged("rangeParameters");
        }
      }
    }

    [XmlElement("fileName", DataType = "anyURI", Order = 1)]
    [XmlElement("fileReference", DataType = "anyURI", Order = 1)]
    [XmlChoiceIdentifierAttribute("ItemElementName")]
    public string Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 2)]
    [XmlIgnore]
    public ItemChoiceType3 ItemElementName {
      get {
        return _itemElementName;
      }
      set {
        if ((_itemElementName.Equals(value) != true)) {
          _itemElementName = value;
          OnPropertyChanged("ItemElementName");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("fileStructure", Order = 3)]
    public FileValueModelType fileStructure {
      get {
        return _fileStructure;
      }
      set {
        if ((_fileStructure.Equals(value) != true)) {
          _fileStructure = value;
          OnPropertyChanged("fileStructure");
        }
      }
    }

    [XmlElement(DataType = "anyURI", Order = 4)]
    [JsonProperty("mimeType", Order = 4)]
    public string mimeType {
      get {
        return _mimeType;
      }
      set {
        if ((_mimeType == value)) {
          return;
        }
        if (((_mimeType == null)
                    || (_mimeType.Equals(value) != true))) {
          _mimeType = value;
          OnPropertyChanged("mimeType");
        }
      }
    }

    [XmlElement(DataType = "anyURI", Order = 5)]
    [JsonProperty("compression", Order = 5)]
    public string compression {
      get {
        return _compression;
      }
      set {
        if ((_compression == value)) {
          return;
        }
        if (((_compression == null)
                    || (_compression.Equals(value) != true))) {
          _compression = value;
          OnPropertyChanged("compression");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemChoiceType3 {
    fileName,
    fileReference,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum FileValueModelType {
    [XmlEnumAttribute("Record Interleaved")]
    [EnumMember(Value = "Record Interleaved")]
    RecordInterleaved,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractContinuousCoverageType")]
  public abstract class AbstractContinuousCoverageType : AbstractCoverageType {
    #region Private fields
    private CoverageFunctionType _coverageFunction;
    #endregion

    /// <summary>
    /// AbstractContinuousCoverageType class constructor
    /// </summary>
    public AbstractContinuousCoverageType() {
      _coverageFunction = new CoverageFunctionType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("coverageFunction", Order = 0)]
    public CoverageFunctionType coverageFunction {
      get {
        return _coverageFunction;
      }
      set {
        if ((_coverageFunction == value)) {
          return;
        }
        if (((_coverageFunction == null)
                    || (_coverageFunction.Equals(value) != true))) {
          _coverageFunction = value;
          OnPropertyChanged("coverageFunction");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CoverageFunctionType")]
  public class CoverageFunctionType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("CoverageMappingRule", typeof(MappingRuleType), Order = 0)]
    [XmlElement("GridFunction", typeof(GridFunctionType), Order = 0)]
    [XmlElement("MappingRule", typeof(StringOrRefType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MappingRuleType")]
  public class MappingRuleType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("ruleDefinition", typeof(string), Order = 0)]
    [XmlElement("ruleReference", typeof(ReferenceType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridFunctionType")]
  public class GridFunctionType : INotifyPropertyChanged {
    #region Private fields
    private SequenceRuleType _sequenceRule;
    private string _startPoint;
    #endregion

    /// <summary>
    /// GridFunctionType class constructor
    /// </summary>
    public GridFunctionType() {
      _sequenceRule = new SequenceRuleType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("sequenceRule", Order = 0)]
    public SequenceRuleType sequenceRule {
      get {
        return _sequenceRule;
      }
      set {
        if ((_sequenceRule == value)) {
          return;
        }
        if (((_sequenceRule == null)
                    || (_sequenceRule.Equals(value) != true))) {
          _sequenceRule = value;
          OnPropertyChanged("sequenceRule");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("startPoint", Order = 1)]
    public string startPoint {
      get {
        return _startPoint;
      }
      set {
        if ((_startPoint == value)) {
          return;
        }
        if (((_startPoint == null)
                    || (_startPoint.Equals(value) != true))) {
          _startPoint = value;
          OnPropertyChanged("startPoint");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// The gml:SequenceRuleType is derived from the gml:SequenceRuleEnumeration through the addition of an axisOrder attribute.  The gml:SequenceRuleEnumeration is an enumerated type. The rule names are defined in ISO 19123. If no rule name is specified the default is “Linear”.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SequenceRuleType")]
  public class SequenceRuleType : INotifyPropertyChanged {
    #region Private fields
    private IncrementOrder _order;
    private List<string> _axisOrder;
    private SequenceRuleEnumeration _value;
    #endregion

    /// <summary>
    /// SequenceRuleType class constructor
    /// </summary>
    public SequenceRuleType() {
      _axisOrder = new List<string>();
    }

    [XmlAttribute]
    [JsonProperty("order")]
    public IncrementOrder order {
      get {
        return _order;
      }
      set {
        if ((_order.Equals(value) != true)) {
          _order = value;
          OnPropertyChanged("order");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("axisOrder")]
    public List<string> axisOrder {
      get {
        return _axisOrder;
      }
      set {
        if ((_axisOrder == value)) {
          return;
        }
        if (((_axisOrder == null)
                    || (_axisOrder.Equals(value) != true))) {
          _axisOrder = value;
          OnPropertyChanged("axisOrder");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public SequenceRuleEnumeration Value {
      get {
        return _value;
      }
      set {
        if ((_value.Equals(value) != true)) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum IncrementOrder {
    [XmlEnumAttribute("+x+y")]
    [EnumMember(Value = "+x+y")]
    xy,
    [XmlEnumAttribute("+y+x")]
    [EnumMember(Value = "+y+x")]
    yx,
    [XmlEnumAttribute("+x-y")]
    [EnumMember(Value = "+x-y")]
    xy1,
    [XmlEnumAttribute("-x-y")]
    [EnumMember(Value = "-x-y")]
    xy2,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  public enum SequenceRuleEnumeration {
    Linear,
    Boustrophedonic,
    [XmlEnumAttribute("Cantor-diagonal")]
    [EnumMember(Value = "Cantor-diagonal")]
    Cantordiagonal,
    Spiral,
    Morton,
    Hilbert,
  }

  [XmlInclude(typeof(RectifiedGridCoverageType))]
  [XmlInclude(typeof(GridCoverageType))]
  [XmlInclude(typeof(MultiSolidCoverageType))]
  [XmlInclude(typeof(MultiSurfaceCoverageType))]
  [XmlInclude(typeof(MultiCurveCoverageType))]
  [XmlInclude(typeof(MultiPointCoverageType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractDiscreteCoverageType")]
  public abstract class AbstractDiscreteCoverageType : AbstractCoverageType {
    #region Private fields
    private CoverageFunctionType _coverageFunction;
    #endregion

    /// <summary>
    /// AbstractDiscreteCoverageType class constructor
    /// </summary>
    public AbstractDiscreteCoverageType() {
      _coverageFunction = new CoverageFunctionType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("coverageFunction", Order = 0)]
    public CoverageFunctionType coverageFunction {
      get {
        return _coverageFunction;
      }
      set {
        if ((_coverageFunction == value)) {
          return;
        }
        if (((_coverageFunction == null)
                    || (_coverageFunction.Equals(value) != true))) {
          _coverageFunction = value;
          OnPropertyChanged("coverageFunction");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RectifiedGridCoverageType")]
  public class RectifiedGridCoverageType : AbstractDiscreteCoverageType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GridCoverageType")]
  public class GridCoverageType : AbstractDiscreteCoverageType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSolidCoverageType")]
  public class MultiSolidCoverageType : AbstractDiscreteCoverageType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSurfaceCoverageType")]
  public class MultiSurfaceCoverageType : AbstractDiscreteCoverageType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiCurveCoverageType")]
  public class MultiCurveCoverageType : AbstractDiscreteCoverageType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiPointCoverageType")]
  public class MultiPointCoverageType : AbstractDiscreteCoverageType {
  }

  [XmlInclude(typeof(DynamicFeatureCollectionType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DynamicFeatureType")]
  public class DynamicFeatureType : AbstractFeatureType {
    #region Private fields
    private TimePrimitivePropertyType _validTime;
    private HistoryPropertyType _history;
    private StringOrRefType _dataSource;
    private ReferenceType _dataSourceReference;
    #endregion

    /// <summary>
    /// DynamicFeatureType class constructor
    /// </summary>
    public DynamicFeatureType() {
      _dataSourceReference = new ReferenceType();
      _dataSource = new StringOrRefType();
      _history = new HistoryPropertyType();
      _validTime = new TimePrimitivePropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("validTime", Order = 0)]
    public TimePrimitivePropertyType validTime {
      get {
        return _validTime;
      }
      set {
        if ((_validTime == value)) {
          return;
        }
        if (((_validTime == null)
                    || (_validTime.Equals(value) != true))) {
          _validTime = value;
          OnPropertyChanged("validTime");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("history", Order = 1)]
    public HistoryPropertyType history {
      get {
        return _history;
      }
      set {
        if ((_history == value)) {
          return;
        }
        if (((_history == null)
                    || (_history.Equals(value) != true))) {
          _history = value;
          OnPropertyChanged("history");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("dataSource", Order = 2)]
    public StringOrRefType dataSource {
      get {
        return _dataSource;
      }
      set {
        if ((_dataSource == value)) {
          return;
        }
        if (((_dataSource == null)
                    || (_dataSource.Equals(value) != true))) {
          _dataSource = value;
          OnPropertyChanged("dataSource");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("dataSourceReference", Order = 3)]
    public ReferenceType dataSourceReference {
      get {
        return _dataSourceReference;
      }
      set {
        if ((_dataSourceReference == value)) {
          return;
        }
        if (((_dataSourceReference == null)
                    || (_dataSourceReference.Equals(value) != true))) {
          _dataSourceReference = value;
          OnPropertyChanged("dataSourceReference");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("HistoryPropertyType")]
  public class HistoryPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractTimeSliceType> _abstractTimeSlice;
    private bool _owns;
    #endregion

    /// <summary>
    /// HistoryPropertyType class constructor
    /// </summary>
    public HistoryPropertyType() {
      _abstractTimeSlice = new List<AbstractTimeSliceType>();
      _owns = false;
    }

    [XmlElement("AbstractTimeSlice", Order = 0)]
    [JsonProperty("AbstractTimeSlice", Order = 0)]
    public List<AbstractTimeSliceType> AbstractTimeSlice {
      get {
        return _abstractTimeSlice;
      }
      set {
        if ((_abstractTimeSlice == value)) {
          return;
        }
        if (((_abstractTimeSlice == null)
                    || (_abstractTimeSlice.Equals(value) != true))) {
          _abstractTimeSlice = value;
          OnPropertyChanged("AbstractTimeSlice");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DynamicFeatureCollectionType")]
  public class DynamicFeatureCollectionType : DynamicFeatureType {
    #region Private fields
    private DynamicFeatureMemberType _dynamicMembers;
    #endregion

    /// <summary>
    /// DynamicFeatureCollectionType class constructor
    /// </summary>
    public DynamicFeatureCollectionType() {
      _dynamicMembers = new DynamicFeatureMemberType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("dynamicMembers", Order = 0)]
    public DynamicFeatureMemberType dynamicMembers {
      get {
        return _dynamicMembers;
      }
      set {
        if ((_dynamicMembers == value)) {
          return;
        }
        if (((_dynamicMembers == null)
                    || (_dynamicMembers.Equals(value) != true))) {
          _dynamicMembers = value;
          OnPropertyChanged("dynamicMembers");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DynamicFeatureMemberType")]
  public class DynamicFeatureMemberType : AbstractFeatureMemberType {
    #region Private fields
    private List<DynamicFeatureType> _dynamicFeature;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// DynamicFeatureMemberType class constructor
    /// </summary>
    public DynamicFeatureMemberType() {
      _dynamicFeature = new List<DynamicFeatureType>();
    }

    [XmlElement("DynamicFeature", Order = 0)]
    [JsonProperty("DynamicFeature", Order = 0)]
    public List<DynamicFeatureType> DynamicFeature {
      get {
        return _dynamicFeature;
      }
      set {
        if ((_dynamicFeature == value)) {
          return;
        }
        if (((_dynamicFeature == null)
                    || (_dynamicFeature.Equals(value) != true))) {
          _dynamicFeature = value;
          OnPropertyChanged("DynamicFeature");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }
  }

  /// <summary>
  /// To create a collection of GML features, a property type shall be derived by extension from gml:AbstractFeatureMemberType.
  /// By default, this abstract property type does not imply any ownership of the features in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of a feature in the collection. A collection shall not own a feature already owned by another object.
  /// </summary>
  [XmlInclude(typeof(DynamicFeatureMemberType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractFeatureMemberType")]
  public abstract class AbstractFeatureMemberType : INotifyPropertyChanged {
    #region Private fields
    private bool _owns;
    #endregion

    /// <summary>
    /// AbstractFeatureMemberType class constructor
    /// </summary>
    public AbstractFeatureMemberType() {
      _owns = false;
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(FeatureCollectionType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractFeatureCollectionType")]
  public abstract class AbstractFeatureCollectionType : AbstractFeatureType {
    #region Private fields
    private List<FeaturePropertyType> _featureMember;
    private FeatureArrayPropertyType _featureMembers;
    #endregion

    /// <summary>
    /// AbstractFeatureCollectionType class constructor
    /// </summary>
    public AbstractFeatureCollectionType() {
      _featureMembers = new FeatureArrayPropertyType();
      _featureMember = new List<FeaturePropertyType>();
    }

    [XmlElement("featureMember", Order = 0)]
    [JsonProperty("featureMember", Order = 0)]
    public List<FeaturePropertyType> featureMember {
      get {
        return _featureMember;
      }
      set {
        if ((_featureMember == value)) {
          return;
        }
        if (((_featureMember == null)
                    || (_featureMember.Equals(value) != true))) {
          _featureMember = value;
          OnPropertyChanged("featureMember");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("featureMembers", Order = 1)]
    public FeatureArrayPropertyType featureMembers {
      get {
        return _featureMembers;
      }
      set {
        if ((_featureMembers == value)) {
          return;
        }
        if (((_featureMembers == null)
                    || (_featureMembers.Equals(value) != true))) {
          _featureMembers = value;
          OnPropertyChanged("featureMembers");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("FeaturePropertyType")]
  public class FeaturePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractFeatureType _abstractFeature;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// FeaturePropertyType class constructor
    /// </summary>
    public FeaturePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractFeature", Order = 0)]
    public AbstractFeatureType AbstractFeature {
      get {
        return _abstractFeature;
      }
      set {
        if ((_abstractFeature == value)) {
          return;
        }
        if (((_abstractFeature == null)
                    || (_abstractFeature.Equals(value) != true))) {
          _abstractFeature = value;
          OnPropertyChanged("AbstractFeature");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("FeatureArrayPropertyType")]
  public class FeatureArrayPropertyType : INotifyPropertyChanged {
    #region Private fields
    private List<AbstractFeatureType> _abstractFeature;
    #endregion

    /// <summary>
    /// FeatureArrayPropertyType class constructor
    /// </summary>
    public FeatureArrayPropertyType() {
      _abstractFeature = new List<AbstractFeatureType>();
    }

    [XmlElement("AbstractFeature", Order = 0)]
    [JsonProperty("AbstractFeature", Order = 0)]
    public List<AbstractFeatureType> AbstractFeature {
      get {
        return _abstractFeature;
      }
      set {
        if ((_abstractFeature == value)) {
          return;
        }
        if (((_abstractFeature == null)
                    || (_abstractFeature.Equals(value) != true))) {
          _abstractFeature = value;
          OnPropertyChanged("AbstractFeature");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("FeatureCollectionType")]
  public class FeatureCollectionType : AbstractFeatureCollectionType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BoundedFeatureType")]
  public abstract class BoundedFeatureType : AbstractFeatureType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BagType")]
  public class BagType : AbstractGMLType {
    #region Private fields
    private List<AssociationRoleType> _member;
    private ArrayAssociationType _members;
    #endregion

    /// <summary>
    /// BagType class constructor
    /// </summary>
    public BagType() {
      _members = new ArrayAssociationType();
      _member = new List<AssociationRoleType>();
    }

    [XmlElement("member", Order = 0)]
    [JsonProperty("member", Order = 0)]
    public List<AssociationRoleType> member {
      get {
        return _member;
      }
      set {
        if ((_member == value)) {
          return;
        }
        if (((_member == null)
                    || (_member.Equals(value) != true))) {
          _member = value;
          OnPropertyChanged("member");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("members", Order = 1)]
    public ArrayAssociationType members {
      get {
        return _members;
      }
      set {
        if ((_members == value)) {
          return;
        }
        if (((_members == null)
                    || (_members.Equals(value) != true))) {
          _members = value;
          OnPropertyChanged("members");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AssociationRoleType")]
  public class AssociationRoleType : INotifyPropertyChanged {
    #region Private fields
    private object _abstractObject;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// AssociationRoleType class constructor
    /// </summary>
    public AssociationRoleType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractObject", Order = 0)]
    public object AbstractObject {
      get {
        return _abstractObject;
      }
      set {
        if ((_abstractObject == value)) {
          return;
        }
        if (((_abstractObject == null)
                    || (_abstractObject.Equals(value) != true))) {
          _abstractObject = value;
          OnPropertyChanged("AbstractObject");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeOrdinalEraType")]
  public class TimeOrdinalEraType : DefinitionType {
    #region Private fields
    private List<RelatedTimeType> _relatedTime;
    private TimeNodePropertyType _start;
    private TimeNodePropertyType _end;
    private TimePeriodPropertyType _extent;
    private List<TimeOrdinalEraPropertyType> _member;
    private ReferenceType _group;
    #endregion

    /// <summary>
    /// TimeOrdinalEraType class constructor
    /// </summary>
    public TimeOrdinalEraType() {
      _group = new ReferenceType();
      _member = new List<TimeOrdinalEraPropertyType>();
      _extent = new TimePeriodPropertyType();
      _end = new TimeNodePropertyType();
      _start = new TimeNodePropertyType();
      _relatedTime = new List<RelatedTimeType>();
    }

    [XmlElement("relatedTime", Order = 0)]
    [JsonProperty("relatedTime", Order = 0)]
    public List<RelatedTimeType> relatedTime {
      get {
        return _relatedTime;
      }
      set {
        if ((_relatedTime == value)) {
          return;
        }
        if (((_relatedTime == null)
                    || (_relatedTime.Equals(value) != true))) {
          _relatedTime = value;
          OnPropertyChanged("relatedTime");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("start", Order = 1)]
    public TimeNodePropertyType start {
      get {
        return _start;
      }
      set {
        if ((_start == value)) {
          return;
        }
        if (((_start == null)
                    || (_start.Equals(value) != true))) {
          _start = value;
          OnPropertyChanged("start");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("end", Order = 2)]
    public TimeNodePropertyType end {
      get {
        return _end;
      }
      set {
        if ((_end == value)) {
          return;
        }
        if (((_end == null)
                    || (_end.Equals(value) != true))) {
          _end = value;
          OnPropertyChanged("end");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("extent", Order = 3)]
    public TimePeriodPropertyType extent {
      get {
        return _extent;
      }
      set {
        if ((_extent == value)) {
          return;
        }
        if (((_extent == null)
                    || (_extent.Equals(value) != true))) {
          _extent = value;
          OnPropertyChanged("extent");
        }
      }
    }

    [XmlElement("member", Order = 4)]
    [JsonProperty("member", Order = 4)]
    public List<TimeOrdinalEraPropertyType> member {
      get {
        return _member;
      }
      set {
        if ((_member == value)) {
          return;
        }
        if (((_member == null)
                    || (_member.Equals(value) != true))) {
          _member = value;
          OnPropertyChanged("member");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("group", Order = 5)]
    public ReferenceType group {
      get {
        return _group;
      }
      set {
        if ((_group == value)) {
          return;
        }
        if (((_group == null)
                    || (_group.Equals(value) != true))) {
          _group = value;
          OnPropertyChanged("group");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeOrdinalEraPropertyType provides for associating a gml:TimeOrdinalEra with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeOrdinalEraPropertyType")]
  public class TimeOrdinalEraPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeOrdinalEraType _timeOrdinalEra;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TimeOrdinalEraPropertyType class constructor
    /// </summary>
    public TimeOrdinalEraPropertyType() {
      _timeOrdinalEra = new TimeOrdinalEraType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeOrdinalEra", Order = 0)]
    public TimeOrdinalEraType TimeOrdinalEra {
      get {
        return _timeOrdinalEra;
      }
      set {
        if ((_timeOrdinalEra == value)) {
          return;
        }
        if (((_timeOrdinalEra == null)
                    || (_timeOrdinalEra.Equals(value) != true))) {
          _timeOrdinalEra = value;
          OnPropertyChanged("TimeOrdinalEra");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(TimeOrdinalReferenceSystemType))]
  [XmlInclude(typeof(TimeClockType))]
  [XmlInclude(typeof(TimeCalendarType))]
  [XmlInclude(typeof(TimeCoordinateSystemType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeReferenceSystemType")]
  public class TimeReferenceSystemType : DefinitionType {
    #region Private fields
    private string _domainOfValidity;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("domainOfValidity", Order = 0)]
    public string domainOfValidity {
      get {
        return _domainOfValidity;
      }
      set {
        if ((_domainOfValidity == value)) {
          return;
        }
        if (((_domainOfValidity == null)
                    || (_domainOfValidity.Equals(value) != true))) {
          _domainOfValidity = value;
          OnPropertyChanged("domainOfValidity");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeOrdinalReferenceSystemType")]
  public class TimeOrdinalReferenceSystemType : TimeReferenceSystemType {
    #region Private fields
    private List<TimeOrdinalEraPropertyType> _component;
    #endregion

    /// <summary>
    /// TimeOrdinalReferenceSystemType class constructor
    /// </summary>
    public TimeOrdinalReferenceSystemType() {
      _component = new List<TimeOrdinalEraPropertyType>();
    }

    [XmlElement("component", Order = 0)]
    [JsonProperty("component", Order = 0)]
    public List<TimeOrdinalEraPropertyType> component {
      get {
        return _component;
      }
      set {
        if ((_component == value)) {
          return;
        }
        if (((_component == null)
                    || (_component.Equals(value) != true))) {
          _component = value;
          OnPropertyChanged("component");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCoordinateSystemType")]
  public class TimeCoordinateSystemType : TimeReferenceSystemType {
    #region Private fields
    private object _item;
    private TimeIntervalLengthType _interval;
    #endregion

    /// <summary>
    /// TimeCoordinateSystemType class constructor
    /// </summary>
    public TimeCoordinateSystemType() {
      _interval = new TimeIntervalLengthType();
    }

    [XmlElement("origin", typeof(TimeInstantPropertyType), Order = 0)]
    [XmlElement("originPosition", typeof(TimePositionType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("interval", Order = 1)]
    public TimeIntervalLengthType interval {
      get {
        return _interval;
      }
      set {
        if ((_interval == value)) {
          return;
        }
        if (((_interval == null)
                    || (_interval.Equals(value) != true))) {
          _interval = value;
          OnPropertyChanged("interval");
        }
      }
    }
  }

  /// <summary>
  /// gml:IdentifiedObjectType provides identification properties of a CRS-related object. In gml:DefinitionType, the gml:identifier element shall be the primary name by which this object is identified, encoding the "name" attribute in the UML model.
  /// Zero or more of the gml:name elements can be an unordered set of "identifiers", encoding the "identifier" attribute in the UML model. Each of these gml:name elements can reference elsewhere the object's defining information or be an identifier by which this object can be referenced.
  /// Zero or more other gml:name elements can be an unordered set of "alias" alternative names by which this CRS related object is identified, encoding the "alias" attributes in the UML model. An object may have several aliases, typically used in different contexts. The context for an alias is indicated by the value of its (optional) codeSpace attribute.
  /// Any needed version information shall be included in the codeSpace attribute of a gml:identifier and gml:name elements. In this use, the gml:remarks element in the gml:DefinitionType shall contain comments on or information about this object, including data source information.
  /// </summary>
  [XmlInclude(typeof(EllipsoidType))]
  [XmlInclude(typeof(PrimeMeridianType))]
  [XmlInclude(typeof(AbstractDatumType))]
  [XmlInclude(typeof(TemporalDatumBaseType))]
  [XmlInclude(typeof(TemporalDatumType))]
  [XmlInclude(typeof(VerticalDatumType))]
  [XmlInclude(typeof(ImageDatumType))]
  [XmlInclude(typeof(EngineeringDatumType))]
  [XmlInclude(typeof(GeodeticDatumType))]
  [XmlInclude(typeof(CoordinateSystemAxisType))]
  [XmlInclude(typeof(AbstractCoordinateSystemType))]
  [XmlInclude(typeof(ObliqueCartesianCSType))]
  [XmlInclude(typeof(AffineCSType))]
  [XmlInclude(typeof(CylindricalCSType))]
  [XmlInclude(typeof(PolarCSType))]
  [XmlInclude(typeof(SphericalCSType))]
  [XmlInclude(typeof(UserDefinedCSType))]
  [XmlInclude(typeof(LinearCSType))]
  [XmlInclude(typeof(TemporalCSType))]
  [XmlInclude(typeof(TimeCSType))]
  [XmlInclude(typeof(VerticalCSType))]
  [XmlInclude(typeof(CartesianCSType))]
  [XmlInclude(typeof(EllipsoidalCSType))]
  [XmlInclude(typeof(AbstractGeneralOperationParameterType))]
  [XmlInclude(typeof(OperationParameterGroupType))]
  [XmlInclude(typeof(OperationParameterType))]
  [XmlInclude(typeof(OperationMethodType))]
  [XmlInclude(typeof(AbstractCoordinateOperationType))]
  [XmlInclude(typeof(PassThroughOperationType))]
  [XmlInclude(typeof(ConcatenatedOperationType))]
  [XmlInclude(typeof(AbstractGeneralTransformationType))]
  [XmlInclude(typeof(TransformationType))]
  [XmlInclude(typeof(AbstractGeneralConversionType))]
  [XmlInclude(typeof(ConversionType))]
  [XmlInclude(typeof(AbstractCRSType))]
  [XmlInclude(typeof(GeocentricCRSType))]
  [XmlInclude(typeof(TemporalCRSType))]
  [XmlInclude(typeof(ImageCRSType))]
  [XmlInclude(typeof(EngineeringCRSType))]
  [XmlInclude(typeof(VerticalCRSType))]
  [XmlInclude(typeof(CompoundCRSType))]
  [XmlInclude(typeof(GeographicCRSType))]
  [XmlInclude(typeof(GeodeticCRSType))]
  [XmlInclude(typeof(AbstractGeneralDerivedCRSType))]
  [XmlInclude(typeof(DerivedCRSType))]
  [XmlInclude(typeof(ProjectedCRSType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("IdentifiedObjectType")]
  public abstract class IdentifiedObjectType : DefinitionType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EllipsoidType")]
  public class EllipsoidType : IdentifiedObjectType {
    #region Private fields
    private MeasureType _semiMajorAxis;
    private secondDefiningParameter _secondDefiningParameter;
    #endregion

    /// <summary>
    /// EllipsoidType class constructor
    /// </summary>
    public EllipsoidType() {
      _secondDefiningParameter = new secondDefiningParameter();
      _semiMajorAxis = new MeasureType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("semiMajorAxis", Order = 0)]
    public MeasureType semiMajorAxis {
      get {
        return _semiMajorAxis;
      }
      set {
        if ((_semiMajorAxis == value)) {
          return;
        }
        if (((_semiMajorAxis == null)
                    || (_semiMajorAxis.Equals(value) != true))) {
          _semiMajorAxis = value;
          OnPropertyChanged("semiMajorAxis");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("secondDefiningParameter", Order = 1)]
    public secondDefiningParameter secondDefiningParameter {
      get {
        return _secondDefiningParameter;
      }
      set {
        if ((_secondDefiningParameter == value)) {
          return;
        }
        if (((_secondDefiningParameter == null)
                    || (_secondDefiningParameter.Equals(value) != true))) {
          _secondDefiningParameter = value;
          OnPropertyChanged("secondDefiningParameter");
        }
      }
    }
  }

  /// <summary>
  /// gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
  /// The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million.
  /// The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("secondDefiningParameter")]
  public class secondDefiningParameter : INotifyPropertyChanged {
    #region Private fields
    private SecondDefiningParameter _secondDefiningParameter;
    #endregion

    /// <summary>
    /// secondDefiningParameter class constructor
    /// </summary>
    public secondDefiningParameter() {
      _secondDefiningParameter = new SecondDefiningParameter();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("SecondDefiningParameter", Order = 0)]
    public SecondDefiningParameter SecondDefiningParameter {
      get {
        return _secondDefiningParameter;
      }
      set {
        if ((_secondDefiningParameter == value)) {
          return;
        }
        if (((_secondDefiningParameter == null)
                    || (_secondDefiningParameter.Equals(value) != true))) {
          _secondDefiningParameter = value;
          OnPropertyChanged("SecondDefiningParameter");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
  /// The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million.
  /// The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SecondDefiningParameter")]
  public class SecondDefiningParameter : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("inverseFlattening", typeof(MeasureType), Order = 0)]
    [XmlElement("isSphere", typeof(SecondDefiningParameterIsSphere), Order = 0)]
    [XmlElement("semiMinorAxis", typeof(LengthType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  public enum SecondDefiningParameterIsSphere {
    sphere,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PrimeMeridianType")]
  public class PrimeMeridianType : IdentifiedObjectType {
    #region Private fields
    private AngleType _greenwichLongitude;
    #endregion

    /// <summary>
    /// PrimeMeridianType class constructor
    /// </summary>
    public PrimeMeridianType() {
      _greenwichLongitude = new AngleType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("greenwichLongitude", Order = 0)]
    public AngleType greenwichLongitude {
      get {
        return _greenwichLongitude;
      }
      set {
        if ((_greenwichLongitude == value)) {
          return;
        }
        if (((_greenwichLongitude == null)
                    || (_greenwichLongitude.Equals(value) != true))) {
          _greenwichLongitude = value;
          OnPropertyChanged("greenwichLongitude");
        }
      }
    }
  }

  [XmlInclude(typeof(TemporalDatumBaseType))]
  [XmlInclude(typeof(TemporalDatumType))]
  [XmlInclude(typeof(VerticalDatumType))]
  [XmlInclude(typeof(ImageDatumType))]
  [XmlInclude(typeof(EngineeringDatumType))]
  [XmlInclude(typeof(GeodeticDatumType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractDatumType")]
  public abstract class AbstractDatumType : IdentifiedObjectType {
    #region Private fields
    private domainOfValidity _domainOfValidity;
    private List<string> _scope;
    private CodeType _anchorDefinition;
    private System.DateTime _realizationEpoch;
    #endregion

    /// <summary>
    /// AbstractDatumType class constructor
    /// </summary>
    public AbstractDatumType() {
      _anchorDefinition = new CodeType();
      _scope = new List<string>();
      _domainOfValidity = new domainOfValidity();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("domainOfValidity", Order = 0)]
    public domainOfValidity domainOfValidity {
      get {
        return _domainOfValidity;
      }
      set {
        if ((_domainOfValidity == value)) {
          return;
        }
        if (((_domainOfValidity == null)
                    || (_domainOfValidity.Equals(value) != true))) {
          _domainOfValidity = value;
          OnPropertyChanged("domainOfValidity");
        }
      }
    }

    [XmlElement("scope", Order = 1)]
    [JsonProperty("scope", Order = 1)]
    public List<string> scope {
      get {
        return _scope;
      }
      set {
        if ((_scope == value)) {
          return;
        }
        if (((_scope == null)
                    || (_scope.Equals(value) != true))) {
          _scope = value;
          OnPropertyChanged("scope");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("anchorDefinition", Order = 2)]
    public CodeType anchorDefinition {
      get {
        return _anchorDefinition;
      }
      set {
        if ((_anchorDefinition == value)) {
          return;
        }
        if (((_anchorDefinition == null)
                    || (_anchorDefinition.Equals(value) != true))) {
          _anchorDefinition = value;
          OnPropertyChanged("anchorDefinition");
        }
      }
    }

    [XmlElement(DataType = "date", Order = 3)]
    [JsonProperty("realizationEpoch", Order = 3)]
    public System.DateTime realizationEpoch {
      get {
        return _realizationEpoch;
      }
      set {
        if ((_realizationEpoch.Equals(value) != true)) {
          _realizationEpoch = value;
          OnPropertyChanged("realizationEpoch");
        }
      }
    }
  }

  /// <summary>
  /// The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("domainOfValidity")]
  public class domainOfValidity : INotifyPropertyChanged {
    #region Private fields
    private EX_Extent_Type _eX_Extent;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// domainOfValidity class constructor
    /// </summary>
    public domainOfValidity() {
      _eX_Extent = new EX_Extent_Type();
    }

    [XmlElement(Namespace = "http://www.isotc211.org/2005/gmd", Order = 0)]
    [JsonProperty("EX_Extent", Order = 0)]
    public EX_Extent_Type EX_Extent {
      get {
        return _eX_Extent;
      }
      set {
        if ((_eX_Extent == value)) {
          return;
        }
        if (((_eX_Extent == null)
                    || (_eX_Extent.Equals(value) != true))) {
          _eX_Extent = value;
          OnPropertyChanged("EX_Extent");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about spatial, vertical, and temporal extent
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_Extent", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_Extent_Type")]
  public class EX_Extent_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _description;
    private List<EX_GeographicExtent_PropertyType> _geographicElement;
    private List<EX_TemporalExtent_PropertyType> _temporalElement;
    private List<EX_VerticalExtent_PropertyType> _verticalElement;
    #endregion

    /// <summary>
    /// EX_Extent_Type class constructor
    /// </summary>
    public EX_Extent_Type() {
      _verticalElement = new List<EX_VerticalExtent_PropertyType>();
      _temporalElement = new List<EX_TemporalExtent_PropertyType>();
      _geographicElement = new List<EX_GeographicExtent_PropertyType>();
      _description = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("description", Order = 0)]
    public CharacterString_PropertyType description {
      get {
        return _description;
      }
      set {
        if ((_description == value)) {
          return;
        }
        if (((_description == null)
                    || (_description.Equals(value) != true))) {
          _description = value;
          OnPropertyChanged("description");
        }
      }
    }

    [XmlElement("geographicElement", Order = 1)]
    [JsonProperty("geographicElement", Order = 1)]
    public List<EX_GeographicExtent_PropertyType> geographicElement {
      get {
        return _geographicElement;
      }
      set {
        if ((_geographicElement == value)) {
          return;
        }
        if (((_geographicElement == null)
                    || (_geographicElement.Equals(value) != true))) {
          _geographicElement = value;
          OnPropertyChanged("geographicElement");
        }
      }
    }

    [XmlElement("temporalElement", Order = 2)]
    [JsonProperty("temporalElement", Order = 2)]
    public List<EX_TemporalExtent_PropertyType> temporalElement {
      get {
        return _temporalElement;
      }
      set {
        if ((_temporalElement == value)) {
          return;
        }
        if (((_temporalElement == null)
                    || (_temporalElement.Equals(value) != true))) {
          _temporalElement = value;
          OnPropertyChanged("temporalElement");
        }
      }
    }

    [XmlElement("verticalElement", Order = 3)]
    [JsonProperty("verticalElement", Order = 3)]
    public List<EX_VerticalExtent_PropertyType> verticalElement {
      get {
        return _verticalElement;
      }
      set {
        if ((_verticalElement == value)) {
          return;
        }
        if (((_verticalElement == null)
                    || (_verticalElement.Equals(value) != true))) {
          _verticalElement = value;
          OnPropertyChanged("verticalElement");
        }
      }
    }
  }

  [XmlInclude(typeof(PT_FreeText_PropertyType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("CharacterString_PropertyType")]
  public class CharacterString_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private string _characterString;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("CharacterString", Order = 0)]
    public string CharacterString {
      get {
        return _characterString;
      }
      set {
        if ((_characterString == value)) {
          return;
        }
        if (((_characterString == null)
                    || (_characterString.Equals(value) != true))) {
          _characterString = value;
          OnPropertyChanged("CharacterString");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("PT_FreeText_PropertyType")]
  public class PT_FreeText_PropertyType : CharacterString_PropertyType {
    #region Private fields
    private PT_FreeText_Type _pT_FreeText;
    #endregion

    /// <summary>
    /// PT_FreeText_PropertyType class constructor
    /// </summary>
    public PT_FreeText_PropertyType() {
      _pT_FreeText = new PT_FreeText_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("PT_FreeText", Order = 0)]
    public PT_FreeText_Type PT_FreeText {
      get {
        return _pT_FreeText;
      }
      set {
        if ((_pT_FreeText == value)) {
          return;
        }
        if (((_pT_FreeText == null)
                    || (_pT_FreeText.Equals(value) != true))) {
          _pT_FreeText = value;
          OnPropertyChanged("PT_FreeText");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("PT_FreeText", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("PT_FreeText_Type")]
  public class PT_FreeText_Type : AbstractObject_Type {
    #region Private fields
    private List<LocalisedCharacterString_PropertyType> _textGroup;
    #endregion

    /// <summary>
    /// PT_FreeText_Type class constructor
    /// </summary>
    public PT_FreeText_Type() {
      _textGroup = new List<LocalisedCharacterString_PropertyType>();
    }

    [XmlElement("textGroup", Order = 0)]
    [JsonProperty("textGroup", Order = 0)]
    public List<LocalisedCharacterString_PropertyType> textGroup {
      get {
        return _textGroup;
      }
      set {
        if ((_textGroup == value)) {
          return;
        }
        if (((_textGroup == null)
                    || (_textGroup.Equals(value) != true))) {
          _textGroup = value;
          OnPropertyChanged("textGroup");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("LocalisedCharacterString_PropertyType")]
  public class LocalisedCharacterString_PropertyType : ObjectReference_PropertyType {
    #region Private fields
    private LocalisedCharacterString_Type _localisedCharacterString;
    #endregion

    /// <summary>
    /// LocalisedCharacterString_PropertyType class constructor
    /// </summary>
    public LocalisedCharacterString_PropertyType() {
      _localisedCharacterString = new LocalisedCharacterString_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LocalisedCharacterString", Order = 0)]
    public LocalisedCharacterString_Type LocalisedCharacterString {
      get {
        return _localisedCharacterString;
      }
      set {
        if ((_localisedCharacterString == value)) {
          return;
        }
        if (((_localisedCharacterString == null)
                    || (_localisedCharacterString.Equals(value) != true))) {
          _localisedCharacterString = value;
          OnPropertyChanged("LocalisedCharacterString");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("LocalisedCharacterString", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("LocalisedCharacterString_Type")]
  public class LocalisedCharacterString_Type : INotifyPropertyChanged {
    #region Private fields
    private string _id;
    private string _locale;
    private string _value;
    #endregion

    [XmlAttribute(DataType = "ID")]
    [JsonProperty("id")]
    public string id {
      get {
        return _id;
      }
      set {
        if ((_id == value)) {
          return;
        }
        if (((_id == null)
                    || (_id.Equals(value) != true))) {
          _id = value;
          OnPropertyChanged("id");
        }
      }
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("locale")]
    public string locale {
      get {
        return _locale;
      }
      set {
        if ((_locale == value)) {
          return;
        }
        if (((_locale == null)
                    || (_locale.Equals(value) != true))) {
          _locale = value;
          OnPropertyChanged("locale");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(LocalisedCharacterString_PropertyType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("ObjectReference_PropertyType")]
  public class ObjectReference_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(MultiplicityRange_Type))]
  [XmlInclude(typeof(Multiplicity_Type))]
  [XmlInclude(typeof(DS_DataSet_Type))]
  [XmlInclude(typeof(AbstractDS_Aggregate_Type))]
  [XmlInclude(typeof(DS_Initiative_Type))]
  [XmlInclude(typeof(DS_Series_Type))]
  [XmlInclude(typeof(DS_ProductionSeries_Type))]
  [XmlInclude(typeof(DS_Sensor_Type))]
  [XmlInclude(typeof(DS_Platform_Type))]
  [XmlInclude(typeof(DS_OtherAggregate_Type))]
  [XmlInclude(typeof(DS_StereoMate_Type))]
  [XmlInclude(typeof(MD_Metadata_Type))]
  [XmlInclude(typeof(PT_Locale_Type))]
  [XmlInclude(typeof(DQ_Scope_Type))]
  [XmlInclude(typeof(DQ_DataQuality_Type))]
  [XmlInclude(typeof(LI_Lineage_Type))]
  [XmlInclude(typeof(LI_Source_Type))]
  [XmlInclude(typeof(LI_ProcessStep_Type))]
  [XmlInclude(typeof(DS_Association_Type))]
  [XmlInclude(typeof(MD_RepresentativeFraction_Type))]
  [XmlInclude(typeof(MD_AggregateInformation_Type))]
  [XmlInclude(typeof(MD_Usage_Type))]
  [XmlInclude(typeof(MD_Keywords_Type))]
  [XmlInclude(typeof(MD_BrowseGraphic_Type))]
  [XmlInclude(typeof(AbstractMD_Identification_Type))]
  [XmlInclude(typeof(MD_ServiceIdentification_Type))]
  [XmlInclude(typeof(MD_DataIdentification_Type))]
  [XmlInclude(typeof(MD_MaintenanceInformation_Type))]
  [XmlInclude(typeof(MD_Distribution_Type))]
  [XmlInclude(typeof(MD_Format_Type))]
  [XmlInclude(typeof(MD_Distributor_Type))]
  [XmlInclude(typeof(MD_StandardOrderProcess_Type))]
  [XmlInclude(typeof(MD_DigitalTransferOptions_Type))]
  [XmlInclude(typeof(MD_Medium_Type))]
  [XmlInclude(typeof(MD_Constraints_Type))]
  [XmlInclude(typeof(MD_SecurityConstraints_Type))]
  [XmlInclude(typeof(MD_LegalConstraints_Type))]
  [XmlInclude(typeof(MD_PortrayalCatalogueReference_Type))]
  [XmlInclude(typeof(MD_ApplicationSchemaInformation_Type))]
  [XmlInclude(typeof(TypeName_Type))]
  [XmlInclude(typeof(MemberName_Type))]
  [XmlInclude(typeof(MD_RangeDimension_Type))]
  [XmlInclude(typeof(MD_Band_Type))]
  [XmlInclude(typeof(AbstractMD_ContentInformation_Type))]
  [XmlInclude(typeof(MD_CoverageDescription_Type))]
  [XmlInclude(typeof(MD_ImageDescription_Type))]
  [XmlInclude(typeof(MD_FeatureCatalogueDescription_Type))]
  [XmlInclude(typeof(MD_MetadataExtensionInformation_Type))]
  [XmlInclude(typeof(MD_ExtendedElementInformation_Type))]
  [XmlInclude(typeof(MD_GeometricObjects_Type))]
  [XmlInclude(typeof(MD_Dimension_Type))]
  [XmlInclude(typeof(AbstractMD_SpatialRepresentation_Type))]
  [XmlInclude(typeof(MD_VectorSpatialRepresentation_Type))]
  [XmlInclude(typeof(MD_GridSpatialRepresentation_Type))]
  [XmlInclude(typeof(MD_Georectified_Type))]
  [XmlInclude(typeof(MD_Georeferenceable_Type))]
  [XmlInclude(typeof(AbstractRS_ReferenceSystem_Type))]
  [XmlInclude(typeof(MD_ReferenceSystem_Type))]
  [XmlInclude(typeof(AbstractDQ_Result_Type))]
  [XmlInclude(typeof(DQ_QuantitativeResult_Type))]
  [XmlInclude(typeof(DQ_ConformanceResult_Type))]
  [XmlInclude(typeof(AbstractDQ_Element_Type))]
  [XmlInclude(typeof(AbstractDQ_Completeness_Type))]
  [XmlInclude(typeof(DQ_CompletenessCommission_Type))]
  [XmlInclude(typeof(DQ_CompletenessOmission_Type))]
  [XmlInclude(typeof(AbstractDQ_LogicalConsistency_Type))]
  [XmlInclude(typeof(DQ_ConceptualConsistency_Type))]
  [XmlInclude(typeof(DQ_DomainConsistency_Type))]
  [XmlInclude(typeof(DQ_FormatConsistency_Type))]
  [XmlInclude(typeof(DQ_TopologicalConsistency_Type))]
  [XmlInclude(typeof(AbstractDQ_PositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_AbsoluteExternalPositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_GriddedDataPositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_RelativeInternalPositionalAccuracy_Type))]
  [XmlInclude(typeof(AbstractDQ_ThematicAccuracy_Type))]
  [XmlInclude(typeof(DQ_ThematicClassificationCorrectness_Type))]
  [XmlInclude(typeof(DQ_NonQuantitativeAttributeAccuracy_Type))]
  [XmlInclude(typeof(DQ_QuantitativeAttributeAccuracy_Type))]
  [XmlInclude(typeof(AbstractDQ_TemporalAccuracy_Type))]
  [XmlInclude(typeof(DQ_AccuracyOfATimeMeasurement_Type))]
  [XmlInclude(typeof(DQ_TemporalConsistency_Type))]
  [XmlInclude(typeof(DQ_TemporalValidity_Type))]
  [XmlInclude(typeof(CI_Series_Type))]
  [XmlInclude(typeof(CI_OnlineResource_Type))]
  [XmlInclude(typeof(CI_Address_Type))]
  [XmlInclude(typeof(CI_Telephone_Type))]
  [XmlInclude(typeof(CI_Contact_Type))]
  [XmlInclude(typeof(CI_ResponsibleParty_Type))]
  [XmlInclude(typeof(CI_Date_Type))]
  [XmlInclude(typeof(CI_Citation_Type))]
  [XmlInclude(typeof(MD_Identifier_Type))]
  [XmlInclude(typeof(RS_Identifier_Type))]
  [XmlInclude(typeof(AbstractEX_GeographicExtent_Type))]
  [XmlInclude(typeof(EX_GeographicDescription_Type))]
  [XmlInclude(typeof(EX_GeographicBoundingBox_Type))]
  [XmlInclude(typeof(EX_BoundingPolygon_Type))]
  [XmlInclude(typeof(PT_FreeText_Type))]
  [XmlInclude(typeof(EX_Extent_Type))]
  [XmlInclude(typeof(EX_VerticalExtent_Type))]
  [XmlInclude(typeof(EX_TemporalExtent_Type))]
  [XmlInclude(typeof(EX_SpatialTemporalExtent_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("AbstractObject_Type")]
  public abstract class AbstractObject_Type : INotifyPropertyChanged {
    #region Private fields
    private string _id;
    private string _uuid;
    #endregion

    [XmlAttribute(DataType = "ID")]
    [JsonProperty("id")]
    public string id {
      get {
        return _id;
      }
      set {
        if ((_id == value)) {
          return;
        }
        if (((_id == null)
                    || (_id.Equals(value) != true))) {
          _id = value;
          OnPropertyChanged("id");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuid")]
    public string uuid {
      get {
        return _uuid;
      }
      set {
        if ((_uuid == value)) {
          return;
        }
        if (((_uuid == null)
                    || (_uuid.Equals(value) != true))) {
          _uuid = value;
          OnPropertyChanged("uuid");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A component of a multiplicity, consisting of an non-negative lower bound, and a potentially infinite upper bound.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("MultiplicityRange_Type")]
  public class MultiplicityRange_Type : AbstractObject_Type {
    #region Private fields
    private Integer_PropertyType _lower;
    private UnlimitedInteger_PropertyType _upper;
    #endregion

    /// <summary>
    /// MultiplicityRange_Type class constructor
    /// </summary>
    public MultiplicityRange_Type() {
      _upper = new UnlimitedInteger_PropertyType();
      _lower = new Integer_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("lower", Order = 0)]
    public Integer_PropertyType lower {
      get {
        return _lower;
      }
      set {
        if ((_lower == value)) {
          return;
        }
        if (((_lower == null)
                    || (_lower.Equals(value) != true))) {
          _lower = value;
          OnPropertyChanged("lower");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("upper", Order = 1)]
    public UnlimitedInteger_PropertyType upper {
      get {
        return _upper;
      }
      set {
        if ((_upper == value)) {
          return;
        }
        if (((_upper == null)
                    || (_upper.Equals(value) != true))) {
          _upper = value;
          OnPropertyChanged("upper");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Integer_PropertyType")]
  public class Integer_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private string _integer;
    private string _nilReason;
    #endregion

    [XmlElement(DataType = "integer", Order = 0)]
    [JsonProperty("Integer", Order = 0)]
    public string Integer {
      get {
        return _integer;
      }
      set {
        if ((_integer == value)) {
          return;
        }
        if (((_integer == null)
                    || (_integer.Equals(value) != true))) {
          _integer = value;
          OnPropertyChanged("Integer");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UnlimitedInteger_PropertyType")]
  public class UnlimitedInteger_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnlimitedInteger_Type _unlimitedInteger;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UnlimitedInteger_PropertyType class constructor
    /// </summary>
    public UnlimitedInteger_PropertyType() {
      _unlimitedInteger = new UnlimitedInteger_Type();
    }

    [XmlElement(IsNullable = true, Order = 0)]
    [JsonProperty("UnlimitedInteger", Order = 0)]
    public UnlimitedInteger_Type UnlimitedInteger {
      get {
        return _unlimitedInteger;
      }
      set {
        if ((_unlimitedInteger == value)) {
          return;
        }
        if (((_unlimitedInteger == null)
                    || (_unlimitedInteger.Equals(value) != true))) {
          _unlimitedInteger = value;
          OnPropertyChanged("UnlimitedInteger");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UnlimitedInteger_Type")]
  public class UnlimitedInteger_Type : INotifyPropertyChanged {
    #region Private fields
    private bool _isInfinite;
    private string _value;
    #endregion

    [XmlAttribute]
    [JsonProperty("isInfinite")]
    public bool isInfinite {
      get {
        return _isInfinite;
      }
      set {
        if ((_isInfinite.Equals(value) != true)) {
          _isInfinite = value;
          OnPropertyChanged("isInfinite");
        }
      }
    }

    [XmlTextAttribute(DataType = "nonNegativeInteger")]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Use to represent the possible cardinality of a relation. Represented by a set of simple multiplicity ranges.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Multiplicity_Type")]
  public class Multiplicity_Type : AbstractObject_Type {
    #region Private fields
    private List<MultiplicityRange_PropertyType> _range;
    #endregion

    /// <summary>
    /// Multiplicity_Type class constructor
    /// </summary>
    public Multiplicity_Type() {
      _range = new List<MultiplicityRange_PropertyType>();
    }

    [XmlElement("range", Order = 0)]
    [JsonProperty("range", Order = 0)]
    public List<MultiplicityRange_PropertyType> range {
      get {
        return _range;
      }
      set {
        if ((_range == value)) {
          return;
        }
        if (((_range == null)
                    || (_range.Equals(value) != true))) {
          _range = value;
          OnPropertyChanged("range");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("MultiplicityRange_PropertyType")]
  public class MultiplicityRange_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MultiplicityRange_Type _multiplicityRange;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MultiplicityRange_PropertyType class constructor
    /// </summary>
    public MultiplicityRange_PropertyType() {
      _multiplicityRange = new MultiplicityRange_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MultiplicityRange", Order = 0)]
    public MultiplicityRange_Type MultiplicityRange {
      get {
        return _multiplicityRange;
      }
      set {
        if ((_multiplicityRange == value)) {
          return;
        }
        if (((_multiplicityRange == null)
                    || (_multiplicityRange.Equals(value) != true))) {
          _multiplicityRange = value;
          OnPropertyChanged("MultiplicityRange");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Identifiable collection of data
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_DataSet", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_DataSet_Type")]
  public class DS_DataSet_Type : AbstractObject_Type {
    #region Private fields
    private List<MD_Metadata_PropertyType> _has;
    private List<DS_Aggregate_PropertyType> _partOf;
    #endregion

    /// <summary>
    /// DS_DataSet_Type class constructor
    /// </summary>
    public DS_DataSet_Type() {
      _partOf = new List<DS_Aggregate_PropertyType>();
      _has = new List<MD_Metadata_PropertyType>();
    }

    [XmlElement("has", Order = 0)]
    [JsonProperty("has", Order = 0)]
    public List<MD_Metadata_PropertyType> has {
      get {
        return _has;
      }
      set {
        if ((_has == value)) {
          return;
        }
        if (((_has == null)
                    || (_has.Equals(value) != true))) {
          _has = value;
          OnPropertyChanged("has");
        }
      }
    }

    [XmlElement("partOf", Order = 1)]
    [JsonProperty("partOf", Order = 1)]
    public List<DS_Aggregate_PropertyType> partOf {
      get {
        return _partOf;
      }
      set {
        if ((_partOf == value)) {
          return;
        }
        if (((_partOf == null)
                    || (_partOf.Equals(value) != true))) {
          _partOf = value;
          OnPropertyChanged("partOf");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Metadata_PropertyType")]
  public class MD_Metadata_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Metadata_Type _mD_Metadata;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Metadata_PropertyType class constructor
    /// </summary>
    public MD_Metadata_PropertyType() {
      _mD_Metadata = new MD_Metadata_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Metadata", Order = 0)]
    public MD_Metadata_Type MD_Metadata {
      get {
        return _mD_Metadata;
      }
      set {
        if ((_mD_Metadata == value)) {
          return;
        }
        if (((_mD_Metadata == null)
                    || (_mD_Metadata.Equals(value) != true))) {
          _mD_Metadata = value;
          OnPropertyChanged("MD_Metadata");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about the metadata
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Metadata", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Metadata_Type")]
  public class MD_Metadata_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _fileIdentifier;
    private CharacterString_PropertyType _language;
    private MD_CharacterSetCode_PropertyType _characterSet;
    private CharacterString_PropertyType _parentIdentifier;
    private List<MD_ScopeCode_PropertyType> _hierarchyLevel;
    private List<CharacterString_PropertyType> _hierarchyLevelName;
    private List<CI_ResponsibleParty_PropertyType> _contact;
    private Date_PropertyType _dateStamp;
    private CharacterString_PropertyType _metadataStandardName;
    private CharacterString_PropertyType _metadataStandardVersion;
    private CharacterString_PropertyType _dataSetURI;
    private List<PT_Locale_PropertyType> _locale;
    private List<MD_SpatialRepresentation_PropertyType> _spatialRepresentationInfo;
    private List<MD_ReferenceSystem_PropertyType> _referenceSystemInfo;
    private List<MD_MetadataExtensionInformation_PropertyType> _metadataExtensionInfo;
    private List<MD_Identification_PropertyType> _identificationInfo;
    private List<MD_ContentInformation_PropertyType> _contentInfo;
    private MD_Distribution_PropertyType _distributionInfo;
    private List<DQ_DataQuality_PropertyType> _dataQualityInfo;
    private List<MD_PortrayalCatalogueReference_PropertyType> _portrayalCatalogueInfo;
    private List<MD_Constraints_PropertyType> _metadataConstraints;
    private List<MD_ApplicationSchemaInformation_PropertyType> _applicationSchemaInfo;
    private MD_MaintenanceInformation_PropertyType _metadataMaintenance;
    private List<DS_Aggregate_PropertyType> _series;
    private List<DS_DataSet_PropertyType> _describes;
    private List<ObjectReference_PropertyType> _propertyType;
    private List<ObjectReference_PropertyType> _featureType;
    private List<ObjectReference_PropertyType> _featureAttribute;
    #endregion

    /// <summary>
    /// MD_Metadata_Type class constructor
    /// </summary>
    public MD_Metadata_Type() {
      _featureAttribute = new List<ObjectReference_PropertyType>();
      _featureType = new List<ObjectReference_PropertyType>();
      _propertyType = new List<ObjectReference_PropertyType>();
      _describes = new List<DS_DataSet_PropertyType>();
      _series = new List<DS_Aggregate_PropertyType>();
      _metadataMaintenance = new MD_MaintenanceInformation_PropertyType();
      _applicationSchemaInfo = new List<MD_ApplicationSchemaInformation_PropertyType>();
      _metadataConstraints = new List<MD_Constraints_PropertyType>();
      _portrayalCatalogueInfo = new List<MD_PortrayalCatalogueReference_PropertyType>();
      _dataQualityInfo = new List<DQ_DataQuality_PropertyType>();
      _distributionInfo = new MD_Distribution_PropertyType();
      _contentInfo = new List<MD_ContentInformation_PropertyType>();
      _identificationInfo = new List<MD_Identification_PropertyType>();
      _metadataExtensionInfo = new List<MD_MetadataExtensionInformation_PropertyType>();
      _referenceSystemInfo = new List<MD_ReferenceSystem_PropertyType>();
      _spatialRepresentationInfo = new List<MD_SpatialRepresentation_PropertyType>();
      _locale = new List<PT_Locale_PropertyType>();
      _dataSetURI = new CharacterString_PropertyType();
      _metadataStandardVersion = new CharacterString_PropertyType();
      _metadataStandardName = new CharacterString_PropertyType();
      _dateStamp = new Date_PropertyType();
      _contact = new List<CI_ResponsibleParty_PropertyType>();
      _hierarchyLevelName = new List<CharacterString_PropertyType>();
      _hierarchyLevel = new List<MD_ScopeCode_PropertyType>();
      _parentIdentifier = new CharacterString_PropertyType();
      _characterSet = new MD_CharacterSetCode_PropertyType();
      _language = new CharacterString_PropertyType();
      _fileIdentifier = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("fileIdentifier", Order = 0)]
    public CharacterString_PropertyType fileIdentifier {
      get {
        return _fileIdentifier;
      }
      set {
        if ((_fileIdentifier == value)) {
          return;
        }
        if (((_fileIdentifier == null)
                    || (_fileIdentifier.Equals(value) != true))) {
          _fileIdentifier = value;
          OnPropertyChanged("fileIdentifier");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("language", Order = 1)]
    public CharacterString_PropertyType language {
      get {
        return _language;
      }
      set {
        if ((_language == value)) {
          return;
        }
        if (((_language == null)
                    || (_language.Equals(value) != true))) {
          _language = value;
          OnPropertyChanged("language");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("characterSet", Order = 2)]
    public MD_CharacterSetCode_PropertyType characterSet {
      get {
        return _characterSet;
      }
      set {
        if ((_characterSet == value)) {
          return;
        }
        if (((_characterSet == null)
                    || (_characterSet.Equals(value) != true))) {
          _characterSet = value;
          OnPropertyChanged("characterSet");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("parentIdentifier", Order = 3)]
    public CharacterString_PropertyType parentIdentifier {
      get {
        return _parentIdentifier;
      }
      set {
        if ((_parentIdentifier == value)) {
          return;
        }
        if (((_parentIdentifier == null)
                    || (_parentIdentifier.Equals(value) != true))) {
          _parentIdentifier = value;
          OnPropertyChanged("parentIdentifier");
        }
      }
    }

    [XmlElement("hierarchyLevel", Order = 4)]
    [JsonProperty("hierarchyLevel", Order = 4)]
    public List<MD_ScopeCode_PropertyType> hierarchyLevel {
      get {
        return _hierarchyLevel;
      }
      set {
        if ((_hierarchyLevel == value)) {
          return;
        }
        if (((_hierarchyLevel == null)
                    || (_hierarchyLevel.Equals(value) != true))) {
          _hierarchyLevel = value;
          OnPropertyChanged("hierarchyLevel");
        }
      }
    }

    [XmlElement("hierarchyLevelName", Order = 5)]
    [JsonProperty("hierarchyLevelName", Order = 5)]
    public List<CharacterString_PropertyType> hierarchyLevelName {
      get {
        return _hierarchyLevelName;
      }
      set {
        if ((_hierarchyLevelName == value)) {
          return;
        }
        if (((_hierarchyLevelName == null)
                    || (_hierarchyLevelName.Equals(value) != true))) {
          _hierarchyLevelName = value;
          OnPropertyChanged("hierarchyLevelName");
        }
      }
    }

    [XmlElement("contact", Order = 6)]
    [JsonProperty("contact", Order = 6)]
    public List<CI_ResponsibleParty_PropertyType> contact {
      get {
        return _contact;
      }
      set {
        if ((_contact == value)) {
          return;
        }
        if (((_contact == null)
                    || (_contact.Equals(value) != true))) {
          _contact = value;
          OnPropertyChanged("contact");
        }
      }
    }

    [XmlElement(Order = 7)]
    [JsonProperty("dateStamp", Order = 7)]
    public Date_PropertyType dateStamp {
      get {
        return _dateStamp;
      }
      set {
        if ((_dateStamp == value)) {
          return;
        }
        if (((_dateStamp == null)
                    || (_dateStamp.Equals(value) != true))) {
          _dateStamp = value;
          OnPropertyChanged("dateStamp");
        }
      }
    }

    [XmlElement(Order = 8)]
    [JsonProperty("metadataStandardName", Order = 8)]
    public CharacterString_PropertyType metadataStandardName {
      get {
        return _metadataStandardName;
      }
      set {
        if ((_metadataStandardName == value)) {
          return;
        }
        if (((_metadataStandardName == null)
                    || (_metadataStandardName.Equals(value) != true))) {
          _metadataStandardName = value;
          OnPropertyChanged("metadataStandardName");
        }
      }
    }

    [XmlElement(Order = 9)]
    [JsonProperty("metadataStandardVersion", Order = 9)]
    public CharacterString_PropertyType metadataStandardVersion {
      get {
        return _metadataStandardVersion;
      }
      set {
        if ((_metadataStandardVersion == value)) {
          return;
        }
        if (((_metadataStandardVersion == null)
                    || (_metadataStandardVersion.Equals(value) != true))) {
          _metadataStandardVersion = value;
          OnPropertyChanged("metadataStandardVersion");
        }
      }
    }

    [XmlElement(Order = 10)]
    [JsonProperty("dataSetURI", Order = 10)]
    public CharacterString_PropertyType dataSetURI {
      get {
        return _dataSetURI;
      }
      set {
        if ((_dataSetURI == value)) {
          return;
        }
        if (((_dataSetURI == null)
                    || (_dataSetURI.Equals(value) != true))) {
          _dataSetURI = value;
          OnPropertyChanged("dataSetURI");
        }
      }
    }

    [XmlElement("locale", Order = 11)]
    [JsonProperty("locale", Order = 11)]
    public List<PT_Locale_PropertyType> locale {
      get {
        return _locale;
      }
      set {
        if ((_locale == value)) {
          return;
        }
        if (((_locale == null)
                    || (_locale.Equals(value) != true))) {
          _locale = value;
          OnPropertyChanged("locale");
        }
      }
    }

    [XmlElement("spatialRepresentationInfo", Order = 12)]
    [JsonProperty("spatialRepresentationInfo", Order = 12)]
    public List<MD_SpatialRepresentation_PropertyType> spatialRepresentationInfo {
      get {
        return _spatialRepresentationInfo;
      }
      set {
        if ((_spatialRepresentationInfo == value)) {
          return;
        }
        if (((_spatialRepresentationInfo == null)
                    || (_spatialRepresentationInfo.Equals(value) != true))) {
          _spatialRepresentationInfo = value;
          OnPropertyChanged("spatialRepresentationInfo");
        }
      }
    }

    [XmlElement("referenceSystemInfo", Order = 13)]
    [JsonProperty("referenceSystemInfo", Order = 13)]
    public List<MD_ReferenceSystem_PropertyType> referenceSystemInfo {
      get {
        return _referenceSystemInfo;
      }
      set {
        if ((_referenceSystemInfo == value)) {
          return;
        }
        if (((_referenceSystemInfo == null)
                    || (_referenceSystemInfo.Equals(value) != true))) {
          _referenceSystemInfo = value;
          OnPropertyChanged("referenceSystemInfo");
        }
      }
    }

    [XmlElement("metadataExtensionInfo", Order = 14)]
    [JsonProperty("metadataExtensionInfo", Order = 14)]
    public List<MD_MetadataExtensionInformation_PropertyType> metadataExtensionInfo {
      get {
        return _metadataExtensionInfo;
      }
      set {
        if ((_metadataExtensionInfo == value)) {
          return;
        }
        if (((_metadataExtensionInfo == null)
                    || (_metadataExtensionInfo.Equals(value) != true))) {
          _metadataExtensionInfo = value;
          OnPropertyChanged("metadataExtensionInfo");
        }
      }
    }

    [XmlElement("identificationInfo", Order = 15)]
    [JsonProperty("identificationInfo", Order = 15)]
    public List<MD_Identification_PropertyType> identificationInfo {
      get {
        return _identificationInfo;
      }
      set {
        if ((_identificationInfo == value)) {
          return;
        }
        if (((_identificationInfo == null)
                    || (_identificationInfo.Equals(value) != true))) {
          _identificationInfo = value;
          OnPropertyChanged("identificationInfo");
        }
      }
    }

    [XmlElement("contentInfo", Order = 16)]
    [JsonProperty("contentInfo", Order = 16)]
    public List<MD_ContentInformation_PropertyType> contentInfo {
      get {
        return _contentInfo;
      }
      set {
        if ((_contentInfo == value)) {
          return;
        }
        if (((_contentInfo == null)
                    || (_contentInfo.Equals(value) != true))) {
          _contentInfo = value;
          OnPropertyChanged("contentInfo");
        }
      }
    }

    [XmlElement(Order = 17)]
    [JsonProperty("distributionInfo", Order = 17)]
    public MD_Distribution_PropertyType distributionInfo {
      get {
        return _distributionInfo;
      }
      set {
        if ((_distributionInfo == value)) {
          return;
        }
        if (((_distributionInfo == null)
                    || (_distributionInfo.Equals(value) != true))) {
          _distributionInfo = value;
          OnPropertyChanged("distributionInfo");
        }
      }
    }

    [XmlElement("dataQualityInfo", Order = 18)]
    [JsonProperty("dataQualityInfo", Order = 18)]
    public List<DQ_DataQuality_PropertyType> dataQualityInfo {
      get {
        return _dataQualityInfo;
      }
      set {
        if ((_dataQualityInfo == value)) {
          return;
        }
        if (((_dataQualityInfo == null)
                    || (_dataQualityInfo.Equals(value) != true))) {
          _dataQualityInfo = value;
          OnPropertyChanged("dataQualityInfo");
        }
      }
    }

    [XmlElement("portrayalCatalogueInfo", Order = 19)]
    [JsonProperty("portrayalCatalogueInfo", Order = 19)]
    public List<MD_PortrayalCatalogueReference_PropertyType> portrayalCatalogueInfo {
      get {
        return _portrayalCatalogueInfo;
      }
      set {
        if ((_portrayalCatalogueInfo == value)) {
          return;
        }
        if (((_portrayalCatalogueInfo == null)
                    || (_portrayalCatalogueInfo.Equals(value) != true))) {
          _portrayalCatalogueInfo = value;
          OnPropertyChanged("portrayalCatalogueInfo");
        }
      }
    }

    [XmlElement("metadataConstraints", Order = 20)]
    [JsonProperty("metadataConstraints", Order = 20)]
    public List<MD_Constraints_PropertyType> metadataConstraints {
      get {
        return _metadataConstraints;
      }
      set {
        if ((_metadataConstraints == value)) {
          return;
        }
        if (((_metadataConstraints == null)
                    || (_metadataConstraints.Equals(value) != true))) {
          _metadataConstraints = value;
          OnPropertyChanged("metadataConstraints");
        }
      }
    }

    [XmlElement("applicationSchemaInfo", Order = 21)]
    [JsonProperty("applicationSchemaInfo", Order = 21)]
    public List<MD_ApplicationSchemaInformation_PropertyType> applicationSchemaInfo {
      get {
        return _applicationSchemaInfo;
      }
      set {
        if ((_applicationSchemaInfo == value)) {
          return;
        }
        if (((_applicationSchemaInfo == null)
                    || (_applicationSchemaInfo.Equals(value) != true))) {
          _applicationSchemaInfo = value;
          OnPropertyChanged("applicationSchemaInfo");
        }
      }
    }

    [XmlElement(Order = 22)]
    [JsonProperty("metadataMaintenance", Order = 22)]
    public MD_MaintenanceInformation_PropertyType metadataMaintenance {
      get {
        return _metadataMaintenance;
      }
      set {
        if ((_metadataMaintenance == value)) {
          return;
        }
        if (((_metadataMaintenance == null)
                    || (_metadataMaintenance.Equals(value) != true))) {
          _metadataMaintenance = value;
          OnPropertyChanged("metadataMaintenance");
        }
      }
    }

    [XmlElement("series", Order = 23)]
    [JsonProperty("series", Order = 23)]
    public List<DS_Aggregate_PropertyType> series {
      get {
        return _series;
      }
      set {
        if ((_series == value)) {
          return;
        }
        if (((_series == null)
                    || (_series.Equals(value) != true))) {
          _series = value;
          OnPropertyChanged("series");
        }
      }
    }

    [XmlElement("describes", Order = 24)]
    [JsonProperty("describes", Order = 24)]
    public List<DS_DataSet_PropertyType> describes {
      get {
        return _describes;
      }
      set {
        if ((_describes == value)) {
          return;
        }
        if (((_describes == null)
                    || (_describes.Equals(value) != true))) {
          _describes = value;
          OnPropertyChanged("describes");
        }
      }
    }

    [XmlElement("propertyType", Order = 25)]
    [JsonProperty("propertyType", Order = 25)]
    public List<ObjectReference_PropertyType> propertyType {
      get {
        return _propertyType;
      }
      set {
        if ((_propertyType == value)) {
          return;
        }
        if (((_propertyType == null)
                    || (_propertyType.Equals(value) != true))) {
          _propertyType = value;
          OnPropertyChanged("propertyType");
        }
      }
    }

    [XmlElement("featureType", Order = 26)]
    [JsonProperty("featureType", Order = 26)]
    public List<ObjectReference_PropertyType> featureType {
      get {
        return _featureType;
      }
      set {
        if ((_featureType == value)) {
          return;
        }
        if (((_featureType == null)
                    || (_featureType.Equals(value) != true))) {
          _featureType = value;
          OnPropertyChanged("featureType");
        }
      }
    }

    [XmlElement("featureAttribute", Order = 27)]
    [JsonProperty("featureAttribute", Order = 27)]
    public List<ObjectReference_PropertyType> featureAttribute {
      get {
        return _featureAttribute;
      }
      set {
        if ((_featureAttribute == value)) {
          return;
        }
        if (((_featureAttribute == null)
                    || (_featureAttribute.Equals(value) != true))) {
          _featureAttribute = value;
          OnPropertyChanged("featureAttribute");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_CharacterSetCode_PropertyType")]
  public class MD_CharacterSetCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_CharacterSetCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_CharacterSetCode_PropertyType class constructor
    /// </summary>
    public MD_CharacterSetCode_PropertyType() {
      _mD_CharacterSetCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_CharacterSetCode", Order = 0)]
    public CodeListValue_Type MD_CharacterSetCode {
      get {
        return _mD_CharacterSetCode;
      }
      set {
        if ((_mD_CharacterSetCode == value)) {
          return;
        }
        if (((_mD_CharacterSetCode == null)
                    || (_mD_CharacterSetCode.Equals(value) != true))) {
          _mD_CharacterSetCode = value;
          OnPropertyChanged("MD_CharacterSetCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [XmlRootAttribute("CI_RoleCode", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CodeListValue_Type")]
  public class CodeListValue_Type : INotifyPropertyChanged {
    #region Private fields
    private string _codeList;
    private string _codeListValue;
    private string _codeSpace;
    private string _value;
    #endregion

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("codeList")]
    public string codeList {
      get {
        return _codeList;
      }
      set {
        if ((_codeList == value)) {
          return;
        }
        if (((_codeList == null)
                    || (_codeList.Equals(value) != true))) {
          _codeList = value;
          OnPropertyChanged("codeList");
        }
      }
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("codeListValue")]
    public string codeListValue {
      get {
        return _codeListValue;
      }
      set {
        if ((_codeListValue == value)) {
          return;
        }
        if (((_codeListValue == null)
                    || (_codeListValue.Equals(value) != true))) {
          _codeListValue = value;
          OnPropertyChanged("codeListValue");
        }
      }
    }

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("codeSpace")]
    public string codeSpace {
      get {
        return _codeSpace;
      }
      set {
        if ((_codeSpace == value)) {
          return;
        }
        if (((_codeSpace == null)
                    || (_codeSpace.Equals(value) != true))) {
          _codeSpace = value;
          OnPropertyChanged("codeSpace");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ScopeCode_PropertyType")]
  public class MD_ScopeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_ScopeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ScopeCode_PropertyType class constructor
    /// </summary>
    public MD_ScopeCode_PropertyType() {
      _mD_ScopeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ScopeCode", Order = 0)]
    public CodeListValue_Type MD_ScopeCode {
      get {
        return _mD_ScopeCode;
      }
      set {
        if ((_mD_ScopeCode == value)) {
          return;
        }
        if (((_mD_ScopeCode == null)
                    || (_mD_ScopeCode.Equals(value) != true))) {
          _mD_ScopeCode = value;
          OnPropertyChanged("MD_ScopeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_ResponsibleParty_PropertyType")]
  public class CI_ResponsibleParty_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_ResponsibleParty_Type _cI_ResponsibleParty;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_ResponsibleParty_PropertyType class constructor
    /// </summary>
    public CI_ResponsibleParty_PropertyType() {
      _cI_ResponsibleParty = new CI_ResponsibleParty_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_ResponsibleParty", Order = 0)]
    public CI_ResponsibleParty_Type CI_ResponsibleParty {
      get {
        return _cI_ResponsibleParty;
      }
      set {
        if ((_cI_ResponsibleParty == value)) {
          return;
        }
        if (((_cI_ResponsibleParty == null)
                    || (_cI_ResponsibleParty.Equals(value) != true))) {
          _cI_ResponsibleParty = value;
          OnPropertyChanged("CI_ResponsibleParty");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Identification of, and means of communication with, person(s) and organisations associated with the dataset
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_ResponsibleParty", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_ResponsibleParty_Type")]
  public class CI_ResponsibleParty_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _individualName;
    private CharacterString_PropertyType _organisationName;
    private CharacterString_PropertyType _positionName;
    private CI_Contact_PropertyType _contactInfo;
    private CI_RoleCode_PropertyType _role;
    #endregion

    /// <summary>
    /// CI_ResponsibleParty_Type class constructor
    /// </summary>
    public CI_ResponsibleParty_Type() {
      _role = new CI_RoleCode_PropertyType();
      _contactInfo = new CI_Contact_PropertyType();
      _positionName = new CharacterString_PropertyType();
      _organisationName = new CharacterString_PropertyType();
      _individualName = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("individualName", Order = 0)]
    public CharacterString_PropertyType individualName {
      get {
        return _individualName;
      }
      set {
        if ((_individualName == value)) {
          return;
        }
        if (((_individualName == null)
                    || (_individualName.Equals(value) != true))) {
          _individualName = value;
          OnPropertyChanged("individualName");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("organisationName", Order = 1)]
    public CharacterString_PropertyType organisationName {
      get {
        return _organisationName;
      }
      set {
        if ((_organisationName == value)) {
          return;
        }
        if (((_organisationName == null)
                    || (_organisationName.Equals(value) != true))) {
          _organisationName = value;
          OnPropertyChanged("organisationName");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("positionName", Order = 2)]
    public CharacterString_PropertyType positionName {
      get {
        return _positionName;
      }
      set {
        if ((_positionName == value)) {
          return;
        }
        if (((_positionName == null)
                    || (_positionName.Equals(value) != true))) {
          _positionName = value;
          OnPropertyChanged("positionName");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("contactInfo", Order = 3)]
    public CI_Contact_PropertyType contactInfo {
      get {
        return _contactInfo;
      }
      set {
        if ((_contactInfo == value)) {
          return;
        }
        if (((_contactInfo == null)
                    || (_contactInfo.Equals(value) != true))) {
          _contactInfo = value;
          OnPropertyChanged("contactInfo");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("role", Order = 4)]
    public CI_RoleCode_PropertyType role {
      get {
        return _role;
      }
      set {
        if ((_role == value)) {
          return;
        }
        if (((_role == null)
                    || (_role.Equals(value) != true))) {
          _role = value;
          OnPropertyChanged("role");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_Contact_PropertyType")]
  public class CI_Contact_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_Contact_Type _cI_Contact;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_Contact_PropertyType class constructor
    /// </summary>
    public CI_Contact_PropertyType() {
      _cI_Contact = new CI_Contact_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_Contact", Order = 0)]
    public CI_Contact_Type CI_Contact {
      get {
        return _cI_Contact;
      }
      set {
        if ((_cI_Contact == value)) {
          return;
        }
        if (((_cI_Contact == null)
                    || (_cI_Contact.Equals(value) != true))) {
          _cI_Contact = value;
          OnPropertyChanged("CI_Contact");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information required enabling contact with the  responsible person and/or organisation
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_Contact", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_Contact_Type")]
  public class CI_Contact_Type : AbstractObject_Type {
    #region Private fields
    private CI_Telephone_PropertyType _phone;
    private CI_Address_PropertyType _address;
    private CI_OnlineResource_PropertyType _onlineResource;
    private CharacterString_PropertyType _hoursOfService;
    private CharacterString_PropertyType _contactInstructions;
    #endregion

    /// <summary>
    /// CI_Contact_Type class constructor
    /// </summary>
    public CI_Contact_Type() {
      _contactInstructions = new CharacterString_PropertyType();
      _hoursOfService = new CharacterString_PropertyType();
      _onlineResource = new CI_OnlineResource_PropertyType();
      _address = new CI_Address_PropertyType();
      _phone = new CI_Telephone_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("phone", Order = 0)]
    public CI_Telephone_PropertyType phone {
      get {
        return _phone;
      }
      set {
        if ((_phone == value)) {
          return;
        }
        if (((_phone == null)
                    || (_phone.Equals(value) != true))) {
          _phone = value;
          OnPropertyChanged("phone");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("address", Order = 1)]
    public CI_Address_PropertyType address {
      get {
        return _address;
      }
      set {
        if ((_address == value)) {
          return;
        }
        if (((_address == null)
                    || (_address.Equals(value) != true))) {
          _address = value;
          OnPropertyChanged("address");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("onlineResource", Order = 2)]
    public CI_OnlineResource_PropertyType onlineResource {
      get {
        return _onlineResource;
      }
      set {
        if ((_onlineResource == value)) {
          return;
        }
        if (((_onlineResource == null)
                    || (_onlineResource.Equals(value) != true))) {
          _onlineResource = value;
          OnPropertyChanged("onlineResource");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("hoursOfService", Order = 3)]
    public CharacterString_PropertyType hoursOfService {
      get {
        return _hoursOfService;
      }
      set {
        if ((_hoursOfService == value)) {
          return;
        }
        if (((_hoursOfService == null)
                    || (_hoursOfService.Equals(value) != true))) {
          _hoursOfService = value;
          OnPropertyChanged("hoursOfService");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("contactInstructions", Order = 4)]
    public CharacterString_PropertyType contactInstructions {
      get {
        return _contactInstructions;
      }
      set {
        if ((_contactInstructions == value)) {
          return;
        }
        if (((_contactInstructions == null)
                    || (_contactInstructions.Equals(value) != true))) {
          _contactInstructions = value;
          OnPropertyChanged("contactInstructions");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_Telephone_PropertyType")]
  public class CI_Telephone_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_Telephone_Type _cI_Telephone;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_Telephone_PropertyType class constructor
    /// </summary>
    public CI_Telephone_PropertyType() {
      _cI_Telephone = new CI_Telephone_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_Telephone", Order = 0)]
    public CI_Telephone_Type CI_Telephone {
      get {
        return _cI_Telephone;
      }
      set {
        if ((_cI_Telephone == value)) {
          return;
        }
        if (((_cI_Telephone == null)
                    || (_cI_Telephone.Equals(value) != true))) {
          _cI_Telephone = value;
          OnPropertyChanged("CI_Telephone");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Telephone numbers for contacting the responsible individual or organisation
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_Telephone", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_Telephone_Type")]
  public class CI_Telephone_Type : AbstractObject_Type {
    #region Private fields
    private List<CharacterString_PropertyType> _voice;
    private List<CharacterString_PropertyType> _facsimile;
    #endregion

    /// <summary>
    /// CI_Telephone_Type class constructor
    /// </summary>
    public CI_Telephone_Type() {
      _facsimile = new List<CharacterString_PropertyType>();
      _voice = new List<CharacterString_PropertyType>();
    }

    [XmlElement("voice", Order = 0)]
    [JsonProperty("voice", Order = 0)]
    public List<CharacterString_PropertyType> voice {
      get {
        return _voice;
      }
      set {
        if ((_voice == value)) {
          return;
        }
        if (((_voice == null)
                    || (_voice.Equals(value) != true))) {
          _voice = value;
          OnPropertyChanged("voice");
        }
      }
    }

    [XmlElement("facsimile", Order = 1)]
    [JsonProperty("facsimile", Order = 1)]
    public List<CharacterString_PropertyType> facsimile {
      get {
        return _facsimile;
      }
      set {
        if ((_facsimile == value)) {
          return;
        }
        if (((_facsimile == null)
                    || (_facsimile.Equals(value) != true))) {
          _facsimile = value;
          OnPropertyChanged("facsimile");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_Address_PropertyType")]
  public class CI_Address_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_Address_Type _cI_Address;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_Address_PropertyType class constructor
    /// </summary>
    public CI_Address_PropertyType() {
      _cI_Address = new CI_Address_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_Address", Order = 0)]
    public CI_Address_Type CI_Address {
      get {
        return _cI_Address;
      }
      set {
        if ((_cI_Address == value)) {
          return;
        }
        if (((_cI_Address == null)
                    || (_cI_Address.Equals(value) != true))) {
          _cI_Address = value;
          OnPropertyChanged("CI_Address");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Location of the responsible individual or organisation
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_Address", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_Address_Type")]
  public class CI_Address_Type : AbstractObject_Type {
    #region Private fields
    private List<CharacterString_PropertyType> _deliveryPoint;
    private CharacterString_PropertyType _city;
    private CharacterString_PropertyType _administrativeArea;
    private CharacterString_PropertyType _postalCode;
    private CharacterString_PropertyType _country;
    private List<CharacterString_PropertyType> _electronicMailAddress;
    #endregion

    /// <summary>
    /// CI_Address_Type class constructor
    /// </summary>
    public CI_Address_Type() {
      _electronicMailAddress = new List<CharacterString_PropertyType>();
      _country = new CharacterString_PropertyType();
      _postalCode = new CharacterString_PropertyType();
      _administrativeArea = new CharacterString_PropertyType();
      _city = new CharacterString_PropertyType();
      _deliveryPoint = new List<CharacterString_PropertyType>();
    }

    [XmlElement("deliveryPoint", Order = 0)]
    [JsonProperty("deliveryPoint", Order = 0)]
    public List<CharacterString_PropertyType> deliveryPoint {
      get {
        return _deliveryPoint;
      }
      set {
        if ((_deliveryPoint == value)) {
          return;
        }
        if (((_deliveryPoint == null)
                    || (_deliveryPoint.Equals(value) != true))) {
          _deliveryPoint = value;
          OnPropertyChanged("deliveryPoint");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("city", Order = 1)]
    public CharacterString_PropertyType city {
      get {
        return _city;
      }
      set {
        if ((_city == value)) {
          return;
        }
        if (((_city == null)
                    || (_city.Equals(value) != true))) {
          _city = value;
          OnPropertyChanged("city");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("administrativeArea", Order = 2)]
    public CharacterString_PropertyType administrativeArea {
      get {
        return _administrativeArea;
      }
      set {
        if ((_administrativeArea == value)) {
          return;
        }
        if (((_administrativeArea == null)
                    || (_administrativeArea.Equals(value) != true))) {
          _administrativeArea = value;
          OnPropertyChanged("administrativeArea");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("postalCode", Order = 3)]
    public CharacterString_PropertyType postalCode {
      get {
        return _postalCode;
      }
      set {
        if ((_postalCode == value)) {
          return;
        }
        if (((_postalCode == null)
                    || (_postalCode.Equals(value) != true))) {
          _postalCode = value;
          OnPropertyChanged("postalCode");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("country", Order = 4)]
    public CharacterString_PropertyType country {
      get {
        return _country;
      }
      set {
        if ((_country == value)) {
          return;
        }
        if (((_country == null)
                    || (_country.Equals(value) != true))) {
          _country = value;
          OnPropertyChanged("country");
        }
      }
    }

    [XmlElement("electronicMailAddress", Order = 5)]
    [JsonProperty("electronicMailAddress", Order = 5)]
    public List<CharacterString_PropertyType> electronicMailAddress {
      get {
        return _electronicMailAddress;
      }
      set {
        if ((_electronicMailAddress == value)) {
          return;
        }
        if (((_electronicMailAddress == null)
                    || (_electronicMailAddress.Equals(value) != true))) {
          _electronicMailAddress = value;
          OnPropertyChanged("electronicMailAddress");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_OnlineResource_PropertyType")]
  public class CI_OnlineResource_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_OnlineResource_Type _cI_OnlineResource;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_OnlineResource_PropertyType class constructor
    /// </summary>
    public CI_OnlineResource_PropertyType() {
      _cI_OnlineResource = new CI_OnlineResource_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_OnlineResource", Order = 0)]
    public CI_OnlineResource_Type CI_OnlineResource {
      get {
        return _cI_OnlineResource;
      }
      set {
        if ((_cI_OnlineResource == value)) {
          return;
        }
        if (((_cI_OnlineResource == null)
                    || (_cI_OnlineResource.Equals(value) != true))) {
          _cI_OnlineResource = value;
          OnPropertyChanged("CI_OnlineResource");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_OnlineResource", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_OnlineResource_Type")]
  public class CI_OnlineResource_Type : AbstractObject_Type {
    #region Private fields
    private URL_PropertyType _linkage;
    private CharacterString_PropertyType _protocol;
    private CharacterString_PropertyType _applicationProfile;
    private CharacterString_PropertyType _name;
    private CharacterString_PropertyType _description;
    private CI_OnLineFunctionCode_PropertyType _function;
    #endregion

    /// <summary>
    /// CI_OnlineResource_Type class constructor
    /// </summary>
    public CI_OnlineResource_Type() {
      _function = new CI_OnLineFunctionCode_PropertyType();
      _description = new CharacterString_PropertyType();
      _name = new CharacterString_PropertyType();
      _applicationProfile = new CharacterString_PropertyType();
      _protocol = new CharacterString_PropertyType();
      _linkage = new URL_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("linkage", Order = 0)]
    public URL_PropertyType linkage {
      get {
        return _linkage;
      }
      set {
        if ((_linkage == value)) {
          return;
        }
        if (((_linkage == null)
                    || (_linkage.Equals(value) != true))) {
          _linkage = value;
          OnPropertyChanged("linkage");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("protocol", Order = 1)]
    public CharacterString_PropertyType protocol {
      get {
        return _protocol;
      }
      set {
        if ((_protocol == value)) {
          return;
        }
        if (((_protocol == null)
                    || (_protocol.Equals(value) != true))) {
          _protocol = value;
          OnPropertyChanged("protocol");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("applicationProfile", Order = 2)]
    public CharacterString_PropertyType applicationProfile {
      get {
        return _applicationProfile;
      }
      set {
        if ((_applicationProfile == value)) {
          return;
        }
        if (((_applicationProfile == null)
                    || (_applicationProfile.Equals(value) != true))) {
          _applicationProfile = value;
          OnPropertyChanged("applicationProfile");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("name", Order = 3)]
    public CharacterString_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("description", Order = 4)]
    public CharacterString_PropertyType description {
      get {
        return _description;
      }
      set {
        if ((_description == value)) {
          return;
        }
        if (((_description == null)
                    || (_description.Equals(value) != true))) {
          _description = value;
          OnPropertyChanged("description");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("function", Order = 5)]
    public CI_OnLineFunctionCode_PropertyType function {
      get {
        return _function;
      }
      set {
        if ((_function == value)) {
          return;
        }
        if (((_function == null)
                    || (_function.Equals(value) != true))) {
          _function = value;
          OnPropertyChanged("function");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("URL_PropertyType")]
  public class URL_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private string _uRL;
    private string _nilReason;
    #endregion

    [XmlElement(DataType = "anyURI", Order = 0)]
    [JsonProperty("URL", Order = 0)]
    public string URL {
      get {
        return _uRL;
      }
      set {
        if ((_uRL == value)) {
          return;
        }
        if (((_uRL == null)
                    || (_uRL.Equals(value) != true))) {
          _uRL = value;
          OnPropertyChanged("URL");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_OnLineFunctionCode_PropertyType")]
  public class CI_OnLineFunctionCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _cI_OnLineFunctionCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_OnLineFunctionCode_PropertyType class constructor
    /// </summary>
    public CI_OnLineFunctionCode_PropertyType() {
      _cI_OnLineFunctionCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_OnLineFunctionCode", Order = 0)]
    public CodeListValue_Type CI_OnLineFunctionCode {
      get {
        return _cI_OnLineFunctionCode;
      }
      set {
        if ((_cI_OnLineFunctionCode == value)) {
          return;
        }
        if (((_cI_OnLineFunctionCode == null)
                    || (_cI_OnLineFunctionCode.Equals(value) != true))) {
          _cI_OnLineFunctionCode = value;
          OnPropertyChanged("CI_OnLineFunctionCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_RoleCode_PropertyType")]
  public class CI_RoleCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _cI_RoleCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_RoleCode_PropertyType class constructor
    /// </summary>
    public CI_RoleCode_PropertyType() {
      _cI_RoleCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_RoleCode", Order = 0)]
    public CodeListValue_Type CI_RoleCode {
      get {
        return _cI_RoleCode;
      }
      set {
        if ((_cI_RoleCode == value)) {
          return;
        }
        if (((_cI_RoleCode == null)
                    || (_cI_RoleCode.Equals(value) != true))) {
          _cI_RoleCode = value;
          OnPropertyChanged("CI_RoleCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Date_PropertyType")]
  public class Date_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    private string _nilReason;
    #endregion

    [XmlElement("Date", typeof(string), IsNullable = true, Order = 0)]
    [XmlElement("DateTime", typeof(System.DateTime), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("PT_Locale_PropertyType")]
  public class PT_Locale_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private PT_Locale_Type _pT_Locale;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// PT_Locale_PropertyType class constructor
    /// </summary>
    public PT_Locale_PropertyType() {
      _pT_Locale = new PT_Locale_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("PT_Locale", Order = 0)]
    public PT_Locale_Type PT_Locale {
      get {
        return _pT_Locale;
      }
      set {
        if ((_pT_Locale == value)) {
          return;
        }
        if (((_pT_Locale == null)
                    || (_pT_Locale.Equals(value) != true))) {
          _pT_Locale = value;
          OnPropertyChanged("PT_Locale");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("PT_Locale", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("PT_Locale_Type")]
  public class PT_Locale_Type : AbstractObject_Type {
    #region Private fields
    private LanguageCode_PropertyType _languageCode;
    private Country_PropertyType _country;
    private MD_CharacterSetCode_PropertyType _characterEncoding;
    #endregion

    /// <summary>
    /// PT_Locale_Type class constructor
    /// </summary>
    public PT_Locale_Type() {
      _characterEncoding = new MD_CharacterSetCode_PropertyType();
      _country = new Country_PropertyType();
      _languageCode = new LanguageCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("languageCode", Order = 0)]
    public LanguageCode_PropertyType languageCode {
      get {
        return _languageCode;
      }
      set {
        if ((_languageCode == value)) {
          return;
        }
        if (((_languageCode == null)
                    || (_languageCode.Equals(value) != true))) {
          _languageCode = value;
          OnPropertyChanged("languageCode");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("country", Order = 1)]
    public Country_PropertyType country {
      get {
        return _country;
      }
      set {
        if ((_country == value)) {
          return;
        }
        if (((_country == null)
                    || (_country.Equals(value) != true))) {
          _country = value;
          OnPropertyChanged("country");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("characterEncoding", Order = 2)]
    public MD_CharacterSetCode_PropertyType characterEncoding {
      get {
        return _characterEncoding;
      }
      set {
        if ((_characterEncoding == value)) {
          return;
        }
        if (((_characterEncoding == null)
                    || (_characterEncoding.Equals(value) != true))) {
          _characterEncoding = value;
          OnPropertyChanged("characterEncoding");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("LanguageCode_PropertyType")]
  public class LanguageCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _languageCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// LanguageCode_PropertyType class constructor
    /// </summary>
    public LanguageCode_PropertyType() {
      _languageCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LanguageCode", Order = 0)]
    public CodeListValue_Type LanguageCode {
      get {
        return _languageCode;
      }
      set {
        if ((_languageCode == value)) {
          return;
        }
        if (((_languageCode == null)
                    || (_languageCode.Equals(value) != true))) {
          _languageCode = value;
          OnPropertyChanged("LanguageCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("Country_PropertyType")]
  public class Country_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _country;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Country_PropertyType class constructor
    /// </summary>
    public Country_PropertyType() {
      _country = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Country", Order = 0)]
    public CodeListValue_Type Country {
      get {
        return _country;
      }
      set {
        if ((_country == value)) {
          return;
        }
        if (((_country == null)
                    || (_country.Equals(value) != true))) {
          _country = value;
          OnPropertyChanged("Country");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_SpatialRepresentation_PropertyType")]
  public class MD_SpatialRepresentation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractMD_SpatialRepresentation_Type _abstractMD_SpatialRepresentation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractMD_SpatialRepresentation", Order = 0)]
    public AbstractMD_SpatialRepresentation_Type AbstractMD_SpatialRepresentation {
      get {
        return _abstractMD_SpatialRepresentation;
      }
      set {
        if ((_abstractMD_SpatialRepresentation == value)) {
          return;
        }
        if (((_abstractMD_SpatialRepresentation == null)
                    || (_abstractMD_SpatialRepresentation.Equals(value) != true))) {
          _abstractMD_SpatialRepresentation = value;
          OnPropertyChanged("AbstractMD_SpatialRepresentation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Digital mechanism used to represent spatial information
  /// </summary>
  [XmlInclude(typeof(MD_VectorSpatialRepresentation_Type))]
  [XmlInclude(typeof(MD_GridSpatialRepresentation_Type))]
  [XmlInclude(typeof(MD_Georectified_Type))]
  [XmlInclude(typeof(MD_Georeferenceable_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractMD_SpatialRepresentation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractMD_SpatialRepresentation_Type")]
  public abstract class AbstractMD_SpatialRepresentation_Type : AbstractObject_Type {
  }

  /// <summary>
  /// Information about the vector spatial objects in the dataset
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_VectorSpatialRepresentation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_VectorSpatialRepresentation_Type")]
  public class MD_VectorSpatialRepresentation_Type : AbstractMD_SpatialRepresentation_Type {
    #region Private fields
    private MD_TopologyLevelCode_PropertyType _topologyLevel;
    private List<MD_GeometricObjects_PropertyType> _geometricObjects;
    #endregion

    /// <summary>
    /// MD_VectorSpatialRepresentation_Type class constructor
    /// </summary>
    public MD_VectorSpatialRepresentation_Type() {
      _geometricObjects = new List<MD_GeometricObjects_PropertyType>();
      _topologyLevel = new MD_TopologyLevelCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("topologyLevel", Order = 0)]
    public MD_TopologyLevelCode_PropertyType topologyLevel {
      get {
        return _topologyLevel;
      }
      set {
        if ((_topologyLevel == value)) {
          return;
        }
        if (((_topologyLevel == null)
                    || (_topologyLevel.Equals(value) != true))) {
          _topologyLevel = value;
          OnPropertyChanged("topologyLevel");
        }
      }
    }

    [XmlElement("geometricObjects", Order = 1)]
    [JsonProperty("geometricObjects", Order = 1)]
    public List<MD_GeometricObjects_PropertyType> geometricObjects {
      get {
        return _geometricObjects;
      }
      set {
        if ((_geometricObjects == value)) {
          return;
        }
        if (((_geometricObjects == null)
                    || (_geometricObjects.Equals(value) != true))) {
          _geometricObjects = value;
          OnPropertyChanged("geometricObjects");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_TopologyLevelCode_PropertyType")]
  public class MD_TopologyLevelCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_TopologyLevelCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_TopologyLevelCode_PropertyType class constructor
    /// </summary>
    public MD_TopologyLevelCode_PropertyType() {
      _mD_TopologyLevelCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_TopologyLevelCode", Order = 0)]
    public CodeListValue_Type MD_TopologyLevelCode {
      get {
        return _mD_TopologyLevelCode;
      }
      set {
        if ((_mD_TopologyLevelCode == value)) {
          return;
        }
        if (((_mD_TopologyLevelCode == null)
                    || (_mD_TopologyLevelCode.Equals(value) != true))) {
          _mD_TopologyLevelCode = value;
          OnPropertyChanged("MD_TopologyLevelCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_GeometricObjects_PropertyType")]
  public class MD_GeometricObjects_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_GeometricObjects_Type _mD_GeometricObjects;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_GeometricObjects_PropertyType class constructor
    /// </summary>
    public MD_GeometricObjects_PropertyType() {
      _mD_GeometricObjects = new MD_GeometricObjects_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_GeometricObjects", Order = 0)]
    public MD_GeometricObjects_Type MD_GeometricObjects {
      get {
        return _mD_GeometricObjects;
      }
      set {
        if ((_mD_GeometricObjects == value)) {
          return;
        }
        if (((_mD_GeometricObjects == null)
                    || (_mD_GeometricObjects.Equals(value) != true))) {
          _mD_GeometricObjects = value;
          OnPropertyChanged("MD_GeometricObjects");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_GeometricObjects", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_GeometricObjects_Type")]
  public class MD_GeometricObjects_Type : AbstractObject_Type {
    #region Private fields
    private MD_GeometricObjectTypeCode_PropertyType _geometricObjectType;
    private Integer_PropertyType _geometricObjectCount;
    #endregion

    /// <summary>
    /// MD_GeometricObjects_Type class constructor
    /// </summary>
    public MD_GeometricObjects_Type() {
      _geometricObjectCount = new Integer_PropertyType();
      _geometricObjectType = new MD_GeometricObjectTypeCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("geometricObjectType", Order = 0)]
    public MD_GeometricObjectTypeCode_PropertyType geometricObjectType {
      get {
        return _geometricObjectType;
      }
      set {
        if ((_geometricObjectType == value)) {
          return;
        }
        if (((_geometricObjectType == null)
                    || (_geometricObjectType.Equals(value) != true))) {
          _geometricObjectType = value;
          OnPropertyChanged("geometricObjectType");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("geometricObjectCount", Order = 1)]
    public Integer_PropertyType geometricObjectCount {
      get {
        return _geometricObjectCount;
      }
      set {
        if ((_geometricObjectCount == value)) {
          return;
        }
        if (((_geometricObjectCount == null)
                    || (_geometricObjectCount.Equals(value) != true))) {
          _geometricObjectCount = value;
          OnPropertyChanged("geometricObjectCount");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_GeometricObjectTypeCode_PropertyType")]
  public class MD_GeometricObjectTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_GeometricObjectTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_GeometricObjectTypeCode_PropertyType class constructor
    /// </summary>
    public MD_GeometricObjectTypeCode_PropertyType() {
      _mD_GeometricObjectTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_GeometricObjectTypeCode", Order = 0)]
    public CodeListValue_Type MD_GeometricObjectTypeCode {
      get {
        return _mD_GeometricObjectTypeCode;
      }
      set {
        if ((_mD_GeometricObjectTypeCode == value)) {
          return;
        }
        if (((_mD_GeometricObjectTypeCode == null)
                    || (_mD_GeometricObjectTypeCode.Equals(value) != true))) {
          _mD_GeometricObjectTypeCode = value;
          OnPropertyChanged("MD_GeometricObjectTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Types and numbers of raster spatial objects in the dataset
  /// </summary>
  [XmlInclude(typeof(MD_Georectified_Type))]
  [XmlInclude(typeof(MD_Georeferenceable_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_GridSpatialRepresentation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_GridSpatialRepresentation_Type")]
  public class MD_GridSpatialRepresentation_Type : AbstractMD_SpatialRepresentation_Type {
    #region Private fields
    private Integer_PropertyType _numberOfDimensions;
    private List<MD_Dimension_PropertyType> _axisDimensionProperties;
    private MD_CellGeometryCode_PropertyType _cellGeometry;
    private Boolean_PropertyType _transformationParameterAvailability;
    #endregion

    /// <summary>
    /// MD_GridSpatialRepresentation_Type class constructor
    /// </summary>
    public MD_GridSpatialRepresentation_Type() {
      _transformationParameterAvailability = new Boolean_PropertyType();
      _cellGeometry = new MD_CellGeometryCode_PropertyType();
      _axisDimensionProperties = new List<MD_Dimension_PropertyType>();
      _numberOfDimensions = new Integer_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("numberOfDimensions", Order = 0)]
    public Integer_PropertyType numberOfDimensions {
      get {
        return _numberOfDimensions;
      }
      set {
        if ((_numberOfDimensions == value)) {
          return;
        }
        if (((_numberOfDimensions == null)
                    || (_numberOfDimensions.Equals(value) != true))) {
          _numberOfDimensions = value;
          OnPropertyChanged("numberOfDimensions");
        }
      }
    }

    [XmlElement("axisDimensionProperties", Order = 1)]
    [JsonProperty("axisDimensionProperties", Order = 1)]
    public List<MD_Dimension_PropertyType> axisDimensionProperties {
      get {
        return _axisDimensionProperties;
      }
      set {
        if ((_axisDimensionProperties == value)) {
          return;
        }
        if (((_axisDimensionProperties == null)
                    || (_axisDimensionProperties.Equals(value) != true))) {
          _axisDimensionProperties = value;
          OnPropertyChanged("axisDimensionProperties");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("cellGeometry", Order = 2)]
    public MD_CellGeometryCode_PropertyType cellGeometry {
      get {
        return _cellGeometry;
      }
      set {
        if ((_cellGeometry == value)) {
          return;
        }
        if (((_cellGeometry == null)
                    || (_cellGeometry.Equals(value) != true))) {
          _cellGeometry = value;
          OnPropertyChanged("cellGeometry");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("transformationParameterAvailability", Order = 3)]
    public Boolean_PropertyType transformationParameterAvailability {
      get {
        return _transformationParameterAvailability;
      }
      set {
        if ((_transformationParameterAvailability == value)) {
          return;
        }
        if (((_transformationParameterAvailability == null)
                    || (_transformationParameterAvailability.Equals(value) != true))) {
          _transformationParameterAvailability = value;
          OnPropertyChanged("transformationParameterAvailability");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Dimension_PropertyType")]
  public class MD_Dimension_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Dimension_Type _mD_Dimension;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Dimension_PropertyType class constructor
    /// </summary>
    public MD_Dimension_PropertyType() {
      _mD_Dimension = new MD_Dimension_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Dimension", Order = 0)]
    public MD_Dimension_Type MD_Dimension {
      get {
        return _mD_Dimension;
      }
      set {
        if ((_mD_Dimension == value)) {
          return;
        }
        if (((_mD_Dimension == null)
                    || (_mD_Dimension.Equals(value) != true))) {
          _mD_Dimension = value;
          OnPropertyChanged("MD_Dimension");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Dimension", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Dimension_Type")]
  public class MD_Dimension_Type : AbstractObject_Type {
    #region Private fields
    private MD_DimensionNameTypeCode_PropertyType _dimensionName;
    private Integer_PropertyType _dimensionSize;
    private Measure_PropertyType _resolution;
    #endregion

    /// <summary>
    /// MD_Dimension_Type class constructor
    /// </summary>
    public MD_Dimension_Type() {
      _resolution = new Measure_PropertyType();
      _dimensionSize = new Integer_PropertyType();
      _dimensionName = new MD_DimensionNameTypeCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("dimensionName", Order = 0)]
    public MD_DimensionNameTypeCode_PropertyType dimensionName {
      get {
        return _dimensionName;
      }
      set {
        if ((_dimensionName == value)) {
          return;
        }
        if (((_dimensionName == null)
                    || (_dimensionName.Equals(value) != true))) {
          _dimensionName = value;
          OnPropertyChanged("dimensionName");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("dimensionSize", Order = 1)]
    public Integer_PropertyType dimensionSize {
      get {
        return _dimensionSize;
      }
      set {
        if ((_dimensionSize == value)) {
          return;
        }
        if (((_dimensionSize == null)
                    || (_dimensionSize.Equals(value) != true))) {
          _dimensionSize = value;
          OnPropertyChanged("dimensionSize");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("resolution", Order = 2)]
    public Measure_PropertyType resolution {
      get {
        return _resolution;
      }
      set {
        if ((_resolution == value)) {
          return;
        }
        if (((_resolution == null)
                    || (_resolution.Equals(value) != true))) {
          _resolution = value;
          OnPropertyChanged("resolution");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_DimensionNameTypeCode_PropertyType")]
  public class MD_DimensionNameTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_DimensionNameTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_DimensionNameTypeCode_PropertyType class constructor
    /// </summary>
    public MD_DimensionNameTypeCode_PropertyType() {
      _mD_DimensionNameTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_DimensionNameTypeCode", Order = 0)]
    public CodeListValue_Type MD_DimensionNameTypeCode {
      get {
        return _mD_DimensionNameTypeCode;
      }
      set {
        if ((_mD_DimensionNameTypeCode == value)) {
          return;
        }
        if (((_mD_DimensionNameTypeCode == null)
                    || (_mD_DimensionNameTypeCode.Equals(value) != true))) {
          _mD_DimensionNameTypeCode = value;
          OnPropertyChanged("MD_DimensionNameTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Measure_PropertyType")]
  public class Measure_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MeasureType _measure;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Measure_PropertyType class constructor
    /// </summary>
    public Measure_PropertyType() {
      _measure = new MeasureType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Measure", Order = 0)]
    public MeasureType Measure {
      get {
        return _measure;
      }
      set {
        if ((_measure == value)) {
          return;
        }
        if (((_measure == null)
                    || (_measure.Equals(value) != true))) {
          _measure = value;
          OnPropertyChanged("Measure");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_CellGeometryCode_PropertyType")]
  public class MD_CellGeometryCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_CellGeometryCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_CellGeometryCode_PropertyType class constructor
    /// </summary>
    public MD_CellGeometryCode_PropertyType() {
      _mD_CellGeometryCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_CellGeometryCode", Order = 0)]
    public CodeListValue_Type MD_CellGeometryCode {
      get {
        return _mD_CellGeometryCode;
      }
      set {
        if ((_mD_CellGeometryCode == value)) {
          return;
        }
        if (((_mD_CellGeometryCode == null)
                    || (_mD_CellGeometryCode.Equals(value) != true))) {
          _mD_CellGeometryCode = value;
          OnPropertyChanged("MD_CellGeometryCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Boolean_PropertyType")]
  public class Boolean_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private bool _boolean;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("Boolean", Order = 0)]
    public bool Boolean {
      get {
        return _boolean;
      }
      set {
        if ((_boolean.Equals(value) != true)) {
          _boolean = value;
          OnPropertyChanged("Boolean");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Georectified", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Georectified_Type")]
  public class MD_Georectified_Type : MD_GridSpatialRepresentation_Type {
    #region Private fields
    private Boolean_PropertyType _checkPointAvailability;
    private CharacterString_PropertyType _checkPointDescription;
    private List<GM_Point_PropertyType> _cornerPoints;
    private GM_Point_PropertyType _centerPoint;
    private MD_PixelOrientationCode_PropertyType _pointInPixel;
    private CharacterString_PropertyType _transformationDimensionDescription;
    private List<CharacterString_PropertyType> _transformationDimensionMapping;
    #endregion

    /// <summary>
    /// MD_Georectified_Type class constructor
    /// </summary>
    public MD_Georectified_Type() {
      _transformationDimensionMapping = new List<CharacterString_PropertyType>();
      _transformationDimensionDescription = new CharacterString_PropertyType();
      _pointInPixel = new MD_PixelOrientationCode_PropertyType();
      _centerPoint = new GM_Point_PropertyType();
      _cornerPoints = new List<GM_Point_PropertyType>();
      _checkPointDescription = new CharacterString_PropertyType();
      _checkPointAvailability = new Boolean_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("checkPointAvailability", Order = 0)]
    public Boolean_PropertyType checkPointAvailability {
      get {
        return _checkPointAvailability;
      }
      set {
        if ((_checkPointAvailability == value)) {
          return;
        }
        if (((_checkPointAvailability == null)
                    || (_checkPointAvailability.Equals(value) != true))) {
          _checkPointAvailability = value;
          OnPropertyChanged("checkPointAvailability");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("checkPointDescription", Order = 1)]
    public CharacterString_PropertyType checkPointDescription {
      get {
        return _checkPointDescription;
      }
      set {
        if ((_checkPointDescription == value)) {
          return;
        }
        if (((_checkPointDescription == null)
                    || (_checkPointDescription.Equals(value) != true))) {
          _checkPointDescription = value;
          OnPropertyChanged("checkPointDescription");
        }
      }
    }

    [XmlElement("cornerPoints", Order = 2)]
    [JsonProperty("cornerPoints", Order = 2)]
    public List<GM_Point_PropertyType> cornerPoints {
      get {
        return _cornerPoints;
      }
      set {
        if ((_cornerPoints == value)) {
          return;
        }
        if (((_cornerPoints == null)
                    || (_cornerPoints.Equals(value) != true))) {
          _cornerPoints = value;
          OnPropertyChanged("cornerPoints");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("centerPoint", Order = 3)]
    public GM_Point_PropertyType centerPoint {
      get {
        return _centerPoint;
      }
      set {
        if ((_centerPoint == value)) {
          return;
        }
        if (((_centerPoint == null)
                    || (_centerPoint.Equals(value) != true))) {
          _centerPoint = value;
          OnPropertyChanged("centerPoint");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("pointInPixel", Order = 4)]
    public MD_PixelOrientationCode_PropertyType pointInPixel {
      get {
        return _pointInPixel;
      }
      set {
        if ((_pointInPixel == value)) {
          return;
        }
        if (((_pointInPixel == null)
                    || (_pointInPixel.Equals(value) != true))) {
          _pointInPixel = value;
          OnPropertyChanged("pointInPixel");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("transformationDimensionDescription", Order = 5)]
    public CharacterString_PropertyType transformationDimensionDescription {
      get {
        return _transformationDimensionDescription;
      }
      set {
        if ((_transformationDimensionDescription == value)) {
          return;
        }
        if (((_transformationDimensionDescription == null)
                    || (_transformationDimensionDescription.Equals(value) != true))) {
          _transformationDimensionDescription = value;
          OnPropertyChanged("transformationDimensionDescription");
        }
      }
    }

    [XmlElement("transformationDimensionMapping", Order = 6)]
    [JsonProperty("transformationDimensionMapping", Order = 6)]
    public List<CharacterString_PropertyType> transformationDimensionMapping {
      get {
        return _transformationDimensionMapping;
      }
      set {
        if ((_transformationDimensionMapping == value)) {
          return;
        }
        if (((_transformationDimensionMapping == null)
                    || (_transformationDimensionMapping.Equals(value) != true))) {
          _transformationDimensionMapping = value;
          OnPropertyChanged("transformationDimensionMapping");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gss")]
  [JsonObject("GM_Point_PropertyType")]
  public class GM_Point_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private PointType _point;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// GM_Point_PropertyType class constructor
    /// </summary>
    public GM_Point_PropertyType() {
      _point = new PointType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("Point", Order = 0)]
    public PointType Point {
      get {
        return _point;
      }
      set {
        if ((_point == value)) {
          return;
        }
        if (((_point == null)
                    || (_point.Equals(value) != true))) {
          _point = value;
          OnPropertyChanged("Point");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_PixelOrientationCode_PropertyType")]
  public class MD_PixelOrientationCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_PixelOrientationCode_Type _mD_PixelOrientationCode;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("MD_PixelOrientationCode", Order = 0)]
    public MD_PixelOrientationCode_Type MD_PixelOrientationCode {
      get {
        return _mD_PixelOrientationCode;
      }
      set {
        if ((_mD_PixelOrientationCode.Equals(value) != true)) {
          _mD_PixelOrientationCode = value;
          OnPropertyChanged("MD_PixelOrientationCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_PixelOrientationCode", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  public enum MD_PixelOrientationCode_Type {
    center,
    lowerLeft,
    lowerRight,
    upperRight,
    upperLeft,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Georeferenceable", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Georeferenceable_Type")]
  public class MD_Georeferenceable_Type : MD_GridSpatialRepresentation_Type {
    #region Private fields
    private Boolean_PropertyType _controlPointAvailability;
    private Boolean_PropertyType _orientationParameterAvailability;
    private CharacterString_PropertyType _orientationParameterDescription;
    private Record_PropertyType _georeferencedParameters;
    private List<CI_Citation_PropertyType> _parameterCitation;
    #endregion

    /// <summary>
    /// MD_Georeferenceable_Type class constructor
    /// </summary>
    public MD_Georeferenceable_Type() {
      _parameterCitation = new List<CI_Citation_PropertyType>();
      _georeferencedParameters = new Record_PropertyType();
      _orientationParameterDescription = new CharacterString_PropertyType();
      _orientationParameterAvailability = new Boolean_PropertyType();
      _controlPointAvailability = new Boolean_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("controlPointAvailability", Order = 0)]
    public Boolean_PropertyType controlPointAvailability {
      get {
        return _controlPointAvailability;
      }
      set {
        if ((_controlPointAvailability == value)) {
          return;
        }
        if (((_controlPointAvailability == null)
                    || (_controlPointAvailability.Equals(value) != true))) {
          _controlPointAvailability = value;
          OnPropertyChanged("controlPointAvailability");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("orientationParameterAvailability", Order = 1)]
    public Boolean_PropertyType orientationParameterAvailability {
      get {
        return _orientationParameterAvailability;
      }
      set {
        if ((_orientationParameterAvailability == value)) {
          return;
        }
        if (((_orientationParameterAvailability == null)
                    || (_orientationParameterAvailability.Equals(value) != true))) {
          _orientationParameterAvailability = value;
          OnPropertyChanged("orientationParameterAvailability");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("orientationParameterDescription", Order = 2)]
    public CharacterString_PropertyType orientationParameterDescription {
      get {
        return _orientationParameterDescription;
      }
      set {
        if ((_orientationParameterDescription == value)) {
          return;
        }
        if (((_orientationParameterDescription == null)
                    || (_orientationParameterDescription.Equals(value) != true))) {
          _orientationParameterDescription = value;
          OnPropertyChanged("orientationParameterDescription");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("georeferencedParameters", Order = 3)]
    public Record_PropertyType georeferencedParameters {
      get {
        return _georeferencedParameters;
      }
      set {
        if ((_georeferencedParameters == value)) {
          return;
        }
        if (((_georeferencedParameters == null)
                    || (_georeferencedParameters.Equals(value) != true))) {
          _georeferencedParameters = value;
          OnPropertyChanged("georeferencedParameters");
        }
      }
    }

    [XmlElement("parameterCitation", Order = 4)]
    [JsonProperty("parameterCitation", Order = 4)]
    public List<CI_Citation_PropertyType> parameterCitation {
      get {
        return _parameterCitation;
      }
      set {
        if ((_parameterCitation == value)) {
          return;
        }
        if (((_parameterCitation == null)
                    || (_parameterCitation.Equals(value) != true))) {
          _parameterCitation = value;
          OnPropertyChanged("parameterCitation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Record_PropertyType")]
  public class Record_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _record;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("Record", Order = 0)]
    public object Record {
      get {
        return _record;
      }
      set {
        if ((_record == value)) {
          return;
        }
        if (((_record == null)
                    || (_record.Equals(value) != true))) {
          _record = value;
          OnPropertyChanged("Record");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_Citation_PropertyType")]
  public class CI_Citation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_Citation_Type _cI_Citation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_Citation_PropertyType class constructor
    /// </summary>
    public CI_Citation_PropertyType() {
      _cI_Citation = new CI_Citation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_Citation", Order = 0)]
    public CI_Citation_Type CI_Citation {
      get {
        return _cI_Citation;
      }
      set {
        if ((_cI_Citation == value)) {
          return;
        }
        if (((_cI_Citation == null)
                    || (_cI_Citation.Equals(value) != true))) {
          _cI_Citation = value;
          OnPropertyChanged("CI_Citation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Standardized resource reference
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_Citation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_Citation_Type")]
  public class CI_Citation_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _title;
    private List<CharacterString_PropertyType> _alternateTitle;
    private List<CI_Date_PropertyType> _date;
    private CharacterString_PropertyType _edition;
    private Date_PropertyType _editionDate;
    private List<MD_Identifier_PropertyType> _identifier;
    private List<CI_ResponsibleParty_PropertyType> _citedResponsibleParty;
    private List<CI_PresentationFormCode_PropertyType> _presentationForm;
    private CI_Series_PropertyType _series;
    private CharacterString_PropertyType _otherCitationDetails;
    private CharacterString_PropertyType _collectiveTitle;
    private CharacterString_PropertyType _iSBN;
    private CharacterString_PropertyType _iSSN;
    #endregion

    /// <summary>
    /// CI_Citation_Type class constructor
    /// </summary>
    public CI_Citation_Type() {
      _iSSN = new CharacterString_PropertyType();
      _iSBN = new CharacterString_PropertyType();
      _collectiveTitle = new CharacterString_PropertyType();
      _otherCitationDetails = new CharacterString_PropertyType();
      _series = new CI_Series_PropertyType();
      _presentationForm = new List<CI_PresentationFormCode_PropertyType>();
      _citedResponsibleParty = new List<CI_ResponsibleParty_PropertyType>();
      _identifier = new List<MD_Identifier_PropertyType>();
      _editionDate = new Date_PropertyType();
      _edition = new CharacterString_PropertyType();
      _date = new List<CI_Date_PropertyType>();
      _alternateTitle = new List<CharacterString_PropertyType>();
      _title = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("title", Order = 0)]
    public CharacterString_PropertyType title {
      get {
        return _title;
      }
      set {
        if ((_title == value)) {
          return;
        }
        if (((_title == null)
                    || (_title.Equals(value) != true))) {
          _title = value;
          OnPropertyChanged("title");
        }
      }
    }

    [XmlElement("alternateTitle", Order = 1)]
    [JsonProperty("alternateTitle", Order = 1)]
    public List<CharacterString_PropertyType> alternateTitle {
      get {
        return _alternateTitle;
      }
      set {
        if ((_alternateTitle == value)) {
          return;
        }
        if (((_alternateTitle == null)
                    || (_alternateTitle.Equals(value) != true))) {
          _alternateTitle = value;
          OnPropertyChanged("alternateTitle");
        }
      }
    }

    [XmlElement("date", Order = 2)]
    [JsonProperty("date", Order = 2)]
    public List<CI_Date_PropertyType> date {
      get {
        return _date;
      }
      set {
        if ((_date == value)) {
          return;
        }
        if (((_date == null)
                    || (_date.Equals(value) != true))) {
          _date = value;
          OnPropertyChanged("date");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("edition", Order = 3)]
    public CharacterString_PropertyType edition {
      get {
        return _edition;
      }
      set {
        if ((_edition == value)) {
          return;
        }
        if (((_edition == null)
                    || (_edition.Equals(value) != true))) {
          _edition = value;
          OnPropertyChanged("edition");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("editionDate", Order = 4)]
    public Date_PropertyType editionDate {
      get {
        return _editionDate;
      }
      set {
        if ((_editionDate == value)) {
          return;
        }
        if (((_editionDate == null)
                    || (_editionDate.Equals(value) != true))) {
          _editionDate = value;
          OnPropertyChanged("editionDate");
        }
      }
    }

    [XmlElement("identifier", Order = 5)]
    [JsonProperty("identifier", Order = 5)]
    public List<MD_Identifier_PropertyType> identifier {
      get {
        return _identifier;
      }
      set {
        if ((_identifier == value)) {
          return;
        }
        if (((_identifier == null)
                    || (_identifier.Equals(value) != true))) {
          _identifier = value;
          OnPropertyChanged("identifier");
        }
      }
    }

    [XmlElement("citedResponsibleParty", Order = 6)]
    [JsonProperty("citedResponsibleParty", Order = 6)]
    public List<CI_ResponsibleParty_PropertyType> citedResponsibleParty {
      get {
        return _citedResponsibleParty;
      }
      set {
        if ((_citedResponsibleParty == value)) {
          return;
        }
        if (((_citedResponsibleParty == null)
                    || (_citedResponsibleParty.Equals(value) != true))) {
          _citedResponsibleParty = value;
          OnPropertyChanged("citedResponsibleParty");
        }
      }
    }

    [XmlElement("presentationForm", Order = 7)]
    [JsonProperty("presentationForm", Order = 7)]
    public List<CI_PresentationFormCode_PropertyType> presentationForm {
      get {
        return _presentationForm;
      }
      set {
        if ((_presentationForm == value)) {
          return;
        }
        if (((_presentationForm == null)
                    || (_presentationForm.Equals(value) != true))) {
          _presentationForm = value;
          OnPropertyChanged("presentationForm");
        }
      }
    }

    [XmlElement(Order = 8)]
    [JsonProperty("series", Order = 8)]
    public CI_Series_PropertyType series {
      get {
        return _series;
      }
      set {
        if ((_series == value)) {
          return;
        }
        if (((_series == null)
                    || (_series.Equals(value) != true))) {
          _series = value;
          OnPropertyChanged("series");
        }
      }
    }

    [XmlElement(Order = 9)]
    [JsonProperty("otherCitationDetails", Order = 9)]
    public CharacterString_PropertyType otherCitationDetails {
      get {
        return _otherCitationDetails;
      }
      set {
        if ((_otherCitationDetails == value)) {
          return;
        }
        if (((_otherCitationDetails == null)
                    || (_otherCitationDetails.Equals(value) != true))) {
          _otherCitationDetails = value;
          OnPropertyChanged("otherCitationDetails");
        }
      }
    }

    [XmlElement(Order = 10)]
    [JsonProperty("collectiveTitle", Order = 10)]
    public CharacterString_PropertyType collectiveTitle {
      get {
        return _collectiveTitle;
      }
      set {
        if ((_collectiveTitle == value)) {
          return;
        }
        if (((_collectiveTitle == null)
                    || (_collectiveTitle.Equals(value) != true))) {
          _collectiveTitle = value;
          OnPropertyChanged("collectiveTitle");
        }
      }
    }

    [XmlElement(Order = 11)]
    [JsonProperty("ISBN", Order = 11)]
    public CharacterString_PropertyType ISBN {
      get {
        return _iSBN;
      }
      set {
        if ((_iSBN == value)) {
          return;
        }
        if (((_iSBN == null)
                    || (_iSBN.Equals(value) != true))) {
          _iSBN = value;
          OnPropertyChanged("ISBN");
        }
      }
    }

    [XmlElement(Order = 12)]
    [JsonProperty("ISSN", Order = 12)]
    public CharacterString_PropertyType ISSN {
      get {
        return _iSSN;
      }
      set {
        if ((_iSSN == value)) {
          return;
        }
        if (((_iSSN == null)
                    || (_iSSN.Equals(value) != true))) {
          _iSSN = value;
          OnPropertyChanged("ISSN");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_Date_PropertyType")]
  public class CI_Date_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_Date_Type _cI_Date;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_Date_PropertyType class constructor
    /// </summary>
    public CI_Date_PropertyType() {
      _cI_Date = new CI_Date_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_Date", Order = 0)]
    public CI_Date_Type CI_Date {
      get {
        return _cI_Date;
      }
      set {
        if ((_cI_Date == value)) {
          return;
        }
        if (((_cI_Date == null)
                    || (_cI_Date.Equals(value) != true))) {
          _cI_Date = value;
          OnPropertyChanged("CI_Date");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_Date", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_Date_Type")]
  public class CI_Date_Type : AbstractObject_Type {
    #region Private fields
    private Date_PropertyType _date;
    private CI_DateTypeCode_PropertyType _dateType;
    #endregion

    /// <summary>
    /// CI_Date_Type class constructor
    /// </summary>
    public CI_Date_Type() {
      _dateType = new CI_DateTypeCode_PropertyType();
      _date = new Date_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("date", Order = 0)]
    public Date_PropertyType date {
      get {
        return _date;
      }
      set {
        if ((_date == value)) {
          return;
        }
        if (((_date == null)
                    || (_date.Equals(value) != true))) {
          _date = value;
          OnPropertyChanged("date");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("dateType", Order = 1)]
    public CI_DateTypeCode_PropertyType dateType {
      get {
        return _dateType;
      }
      set {
        if ((_dateType == value)) {
          return;
        }
        if (((_dateType == null)
                    || (_dateType.Equals(value) != true))) {
          _dateType = value;
          OnPropertyChanged("dateType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_DateTypeCode_PropertyType")]
  public class CI_DateTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _cI_DateTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_DateTypeCode_PropertyType class constructor
    /// </summary>
    public CI_DateTypeCode_PropertyType() {
      _cI_DateTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_DateTypeCode", Order = 0)]
    public CodeListValue_Type CI_DateTypeCode {
      get {
        return _cI_DateTypeCode;
      }
      set {
        if ((_cI_DateTypeCode == value)) {
          return;
        }
        if (((_cI_DateTypeCode == null)
                    || (_cI_DateTypeCode.Equals(value) != true))) {
          _cI_DateTypeCode = value;
          OnPropertyChanged("CI_DateTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Identifier_PropertyType")]
  public class MD_Identifier_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Identifier_Type _mD_Identifier;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Identifier_PropertyType class constructor
    /// </summary>
    public MD_Identifier_PropertyType() {
      _mD_Identifier = new MD_Identifier_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Identifier", Order = 0)]
    public MD_Identifier_Type MD_Identifier {
      get {
        return _mD_Identifier;
      }
      set {
        if ((_mD_Identifier == value)) {
          return;
        }
        if (((_mD_Identifier == null)
                    || (_mD_Identifier.Equals(value) != true))) {
          _mD_Identifier = value;
          OnPropertyChanged("MD_Identifier");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(RS_Identifier_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Identifier", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Identifier_Type")]
  public class MD_Identifier_Type : AbstractObject_Type {
    #region Private fields
    private CI_Citation_PropertyType _authority;
    private CharacterString_PropertyType _code;
    #endregion

    /// <summary>
    /// MD_Identifier_Type class constructor
    /// </summary>
    public MD_Identifier_Type() {
      _code = new CharacterString_PropertyType();
      _authority = new CI_Citation_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("authority", Order = 0)]
    public CI_Citation_PropertyType authority {
      get {
        return _authority;
      }
      set {
        if ((_authority == value)) {
          return;
        }
        if (((_authority == null)
                    || (_authority.Equals(value) != true))) {
          _authority = value;
          OnPropertyChanged("authority");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("code", Order = 1)]
    public CharacterString_PropertyType code {
      get {
        return _code;
      }
      set {
        if ((_code == value)) {
          return;
        }
        if (((_code == null)
                    || (_code.Equals(value) != true))) {
          _code = value;
          OnPropertyChanged("code");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("RS_Identifier", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("RS_Identifier_Type")]
  public class RS_Identifier_Type : MD_Identifier_Type {
    #region Private fields
    private CharacterString_PropertyType _codeSpace;
    private CharacterString_PropertyType _version;
    #endregion

    /// <summary>
    /// RS_Identifier_Type class constructor
    /// </summary>
    public RS_Identifier_Type() {
      _version = new CharacterString_PropertyType();
      _codeSpace = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("codeSpace", Order = 0)]
    public CharacterString_PropertyType codeSpace {
      get {
        return _codeSpace;
      }
      set {
        if ((_codeSpace == value)) {
          return;
        }
        if (((_codeSpace == null)
                    || (_codeSpace.Equals(value) != true))) {
          _codeSpace = value;
          OnPropertyChanged("codeSpace");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("version", Order = 1)]
    public CharacterString_PropertyType version {
      get {
        return _version;
      }
      set {
        if ((_version == value)) {
          return;
        }
        if (((_version == null)
                    || (_version.Equals(value) != true))) {
          _version = value;
          OnPropertyChanged("version");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_PresentationFormCode_PropertyType")]
  public class CI_PresentationFormCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _cI_PresentationFormCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_PresentationFormCode_PropertyType class constructor
    /// </summary>
    public CI_PresentationFormCode_PropertyType() {
      _cI_PresentationFormCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_PresentationFormCode", Order = 0)]
    public CodeListValue_Type CI_PresentationFormCode {
      get {
        return _cI_PresentationFormCode;
      }
      set {
        if ((_cI_PresentationFormCode == value)) {
          return;
        }
        if (((_cI_PresentationFormCode == null)
                    || (_cI_PresentationFormCode.Equals(value) != true))) {
          _cI_PresentationFormCode = value;
          OnPropertyChanged("CI_PresentationFormCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("CI_Series_PropertyType")]
  public class CI_Series_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CI_Series_Type _cI_Series;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// CI_Series_PropertyType class constructor
    /// </summary>
    public CI_Series_PropertyType() {
      _cI_Series = new CI_Series_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CI_Series", Order = 0)]
    public CI_Series_Type CI_Series {
      get {
        return _cI_Series;
      }
      set {
        if ((_cI_Series == value)) {
          return;
        }
        if (((_cI_Series == null)
                    || (_cI_Series.Equals(value) != true))) {
          _cI_Series = value;
          OnPropertyChanged("CI_Series");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("CI_Series", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("CI_Series_Type")]
  public class CI_Series_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _name;
    private CharacterString_PropertyType _issueIdentification;
    private CharacterString_PropertyType _page;
    #endregion

    /// <summary>
    /// CI_Series_Type class constructor
    /// </summary>
    public CI_Series_Type() {
      _page = new CharacterString_PropertyType();
      _issueIdentification = new CharacterString_PropertyType();
      _name = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("name", Order = 0)]
    public CharacterString_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("issueIdentification", Order = 1)]
    public CharacterString_PropertyType issueIdentification {
      get {
        return _issueIdentification;
      }
      set {
        if ((_issueIdentification == value)) {
          return;
        }
        if (((_issueIdentification == null)
                    || (_issueIdentification.Equals(value) != true))) {
          _issueIdentification = value;
          OnPropertyChanged("issueIdentification");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("page", Order = 2)]
    public CharacterString_PropertyType page {
      get {
        return _page;
      }
      set {
        if ((_page == value)) {
          return;
        }
        if (((_page == null)
                    || (_page.Equals(value) != true))) {
          _page = value;
          OnPropertyChanged("page");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ReferenceSystem_PropertyType")]
  public class MD_ReferenceSystem_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ReferenceSystem_Type _mD_ReferenceSystem;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ReferenceSystem_PropertyType class constructor
    /// </summary>
    public MD_ReferenceSystem_PropertyType() {
      _mD_ReferenceSystem = new MD_ReferenceSystem_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ReferenceSystem", Order = 0)]
    public MD_ReferenceSystem_Type MD_ReferenceSystem {
      get {
        return _mD_ReferenceSystem;
      }
      set {
        if ((_mD_ReferenceSystem == value)) {
          return;
        }
        if (((_mD_ReferenceSystem == null)
                    || (_mD_ReferenceSystem.Equals(value) != true))) {
          _mD_ReferenceSystem = value;
          OnPropertyChanged("MD_ReferenceSystem");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ReferenceSystem", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_ReferenceSystem_Type")]
  public class MD_ReferenceSystem_Type : AbstractObject_Type {
    #region Private fields
    private RS_Identifier_PropertyType _referenceSystemIdentifier;
    #endregion

    /// <summary>
    /// MD_ReferenceSystem_Type class constructor
    /// </summary>
    public MD_ReferenceSystem_Type() {
      _referenceSystemIdentifier = new RS_Identifier_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("referenceSystemIdentifier", Order = 0)]
    public RS_Identifier_PropertyType referenceSystemIdentifier {
      get {
        return _referenceSystemIdentifier;
      }
      set {
        if ((_referenceSystemIdentifier == value)) {
          return;
        }
        if (((_referenceSystemIdentifier == null)
                    || (_referenceSystemIdentifier.Equals(value) != true))) {
          _referenceSystemIdentifier = value;
          OnPropertyChanged("referenceSystemIdentifier");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("RS_Identifier_PropertyType")]
  public class RS_Identifier_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private RS_Identifier_Type _rS_Identifier;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// RS_Identifier_PropertyType class constructor
    /// </summary>
    public RS_Identifier_PropertyType() {
      _rS_Identifier = new RS_Identifier_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("RS_Identifier", Order = 0)]
    public RS_Identifier_Type RS_Identifier {
      get {
        return _rS_Identifier;
      }
      set {
        if ((_rS_Identifier == value)) {
          return;
        }
        if (((_rS_Identifier == null)
                    || (_rS_Identifier.Equals(value) != true))) {
          _rS_Identifier = value;
          OnPropertyChanged("RS_Identifier");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_MetadataExtensionInformation_PropertyType")]
  public class MD_MetadataExtensionInformation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_MetadataExtensionInformation_Type _mD_MetadataExtensionInformation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_MetadataExtensionInformation_PropertyType class constructor
    /// </summary>
    public MD_MetadataExtensionInformation_PropertyType() {
      _mD_MetadataExtensionInformation = new MD_MetadataExtensionInformation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_MetadataExtensionInformation", Order = 0)]
    public MD_MetadataExtensionInformation_Type MD_MetadataExtensionInformation {
      get {
        return _mD_MetadataExtensionInformation;
      }
      set {
        if ((_mD_MetadataExtensionInformation == value)) {
          return;
        }
        if (((_mD_MetadataExtensionInformation == null)
                    || (_mD_MetadataExtensionInformation.Equals(value) != true))) {
          _mD_MetadataExtensionInformation = value;
          OnPropertyChanged("MD_MetadataExtensionInformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information describing metadata extensions.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_MetadataExtensionInformation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_MetadataExtensionInformation_Type")]
  public class MD_MetadataExtensionInformation_Type : AbstractObject_Type {
    #region Private fields
    private CI_OnlineResource_PropertyType _extensionOnLineResource;
    private List<MD_ExtendedElementInformation_PropertyType> _extendedElementInformation;
    #endregion

    /// <summary>
    /// MD_MetadataExtensionInformation_Type class constructor
    /// </summary>
    public MD_MetadataExtensionInformation_Type() {
      _extendedElementInformation = new List<MD_ExtendedElementInformation_PropertyType>();
      _extensionOnLineResource = new CI_OnlineResource_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("extensionOnLineResource", Order = 0)]
    public CI_OnlineResource_PropertyType extensionOnLineResource {
      get {
        return _extensionOnLineResource;
      }
      set {
        if ((_extensionOnLineResource == value)) {
          return;
        }
        if (((_extensionOnLineResource == null)
                    || (_extensionOnLineResource.Equals(value) != true))) {
          _extensionOnLineResource = value;
          OnPropertyChanged("extensionOnLineResource");
        }
      }
    }

    [XmlElement("extendedElementInformation", Order = 1)]
    [JsonProperty("extendedElementInformation", Order = 1)]
    public List<MD_ExtendedElementInformation_PropertyType> extendedElementInformation {
      get {
        return _extendedElementInformation;
      }
      set {
        if ((_extendedElementInformation == value)) {
          return;
        }
        if (((_extendedElementInformation == null)
                    || (_extendedElementInformation.Equals(value) != true))) {
          _extendedElementInformation = value;
          OnPropertyChanged("extendedElementInformation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ExtendedElementInformation_PropertyType")]
  public class MD_ExtendedElementInformation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ExtendedElementInformation_Type _mD_ExtendedElementInformation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ExtendedElementInformation_PropertyType class constructor
    /// </summary>
    public MD_ExtendedElementInformation_PropertyType() {
      _mD_ExtendedElementInformation = new MD_ExtendedElementInformation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ExtendedElementInformation", Order = 0)]
    public MD_ExtendedElementInformation_Type MD_ExtendedElementInformation {
      get {
        return _mD_ExtendedElementInformation;
      }
      set {
        if ((_mD_ExtendedElementInformation == value)) {
          return;
        }
        if (((_mD_ExtendedElementInformation == null)
                    || (_mD_ExtendedElementInformation.Equals(value) != true))) {
          _mD_ExtendedElementInformation = value;
          OnPropertyChanged("MD_ExtendedElementInformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// New metadata element, not found in ISO 19115, which is required to describe geographic data
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ExtendedElementInformation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_ExtendedElementInformation_Type")]
  public class MD_ExtendedElementInformation_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _name;
    private CharacterString_PropertyType _shortName;
    private Integer_PropertyType _domainCode;
    private CharacterString_PropertyType _definition;
    private MD_ObligationCode_PropertyType _obligation;
    private CharacterString_PropertyType _condition;
    private MD_DatatypeCode_PropertyType _dataType;
    private CharacterString_PropertyType _maximumOccurrence;
    private CharacterString_PropertyType _domainValue;
    private List<CharacterString_PropertyType> _parentEntity;
    private CharacterString_PropertyType _rule;
    private List<CharacterString_PropertyType> _rationale;
    private List<CI_ResponsibleParty_PropertyType> _source;
    #endregion

    /// <summary>
    /// MD_ExtendedElementInformation_Type class constructor
    /// </summary>
    public MD_ExtendedElementInformation_Type() {
      _source = new List<CI_ResponsibleParty_PropertyType>();
      _rationale = new List<CharacterString_PropertyType>();
      _rule = new CharacterString_PropertyType();
      _parentEntity = new List<CharacterString_PropertyType>();
      _domainValue = new CharacterString_PropertyType();
      _maximumOccurrence = new CharacterString_PropertyType();
      _dataType = new MD_DatatypeCode_PropertyType();
      _condition = new CharacterString_PropertyType();
      _obligation = new MD_ObligationCode_PropertyType();
      _definition = new CharacterString_PropertyType();
      _domainCode = new Integer_PropertyType();
      _shortName = new CharacterString_PropertyType();
      _name = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("name", Order = 0)]
    public CharacterString_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("shortName", Order = 1)]
    public CharacterString_PropertyType shortName {
      get {
        return _shortName;
      }
      set {
        if ((_shortName == value)) {
          return;
        }
        if (((_shortName == null)
                    || (_shortName.Equals(value) != true))) {
          _shortName = value;
          OnPropertyChanged("shortName");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("domainCode", Order = 2)]
    public Integer_PropertyType domainCode {
      get {
        return _domainCode;
      }
      set {
        if ((_domainCode == value)) {
          return;
        }
        if (((_domainCode == null)
                    || (_domainCode.Equals(value) != true))) {
          _domainCode = value;
          OnPropertyChanged("domainCode");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("definition", Order = 3)]
    public CharacterString_PropertyType definition {
      get {
        return _definition;
      }
      set {
        if ((_definition == value)) {
          return;
        }
        if (((_definition == null)
                    || (_definition.Equals(value) != true))) {
          _definition = value;
          OnPropertyChanged("definition");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("obligation", Order = 4)]
    public MD_ObligationCode_PropertyType obligation {
      get {
        return _obligation;
      }
      set {
        if ((_obligation == value)) {
          return;
        }
        if (((_obligation == null)
                    || (_obligation.Equals(value) != true))) {
          _obligation = value;
          OnPropertyChanged("obligation");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("condition", Order = 5)]
    public CharacterString_PropertyType condition {
      get {
        return _condition;
      }
      set {
        if ((_condition == value)) {
          return;
        }
        if (((_condition == null)
                    || (_condition.Equals(value) != true))) {
          _condition = value;
          OnPropertyChanged("condition");
        }
      }
    }

    [XmlElement(Order = 6)]
    [JsonProperty("dataType", Order = 6)]
    public MD_DatatypeCode_PropertyType dataType {
      get {
        return _dataType;
      }
      set {
        if ((_dataType == value)) {
          return;
        }
        if (((_dataType == null)
                    || (_dataType.Equals(value) != true))) {
          _dataType = value;
          OnPropertyChanged("dataType");
        }
      }
    }

    [XmlElement(Order = 7)]
    [JsonProperty("maximumOccurrence", Order = 7)]
    public CharacterString_PropertyType maximumOccurrence {
      get {
        return _maximumOccurrence;
      }
      set {
        if ((_maximumOccurrence == value)) {
          return;
        }
        if (((_maximumOccurrence == null)
                    || (_maximumOccurrence.Equals(value) != true))) {
          _maximumOccurrence = value;
          OnPropertyChanged("maximumOccurrence");
        }
      }
    }

    [XmlElement(Order = 8)]
    [JsonProperty("domainValue", Order = 8)]
    public CharacterString_PropertyType domainValue {
      get {
        return _domainValue;
      }
      set {
        if ((_domainValue == value)) {
          return;
        }
        if (((_domainValue == null)
                    || (_domainValue.Equals(value) != true))) {
          _domainValue = value;
          OnPropertyChanged("domainValue");
        }
      }
    }

    [XmlElement("parentEntity", Order = 9)]
    [JsonProperty("parentEntity", Order = 9)]
    public List<CharacterString_PropertyType> parentEntity {
      get {
        return _parentEntity;
      }
      set {
        if ((_parentEntity == value)) {
          return;
        }
        if (((_parentEntity == null)
                    || (_parentEntity.Equals(value) != true))) {
          _parentEntity = value;
          OnPropertyChanged("parentEntity");
        }
      }
    }

    [XmlElement(Order = 10)]
    [JsonProperty("rule", Order = 10)]
    public CharacterString_PropertyType rule {
      get {
        return _rule;
      }
      set {
        if ((_rule == value)) {
          return;
        }
        if (((_rule == null)
                    || (_rule.Equals(value) != true))) {
          _rule = value;
          OnPropertyChanged("rule");
        }
      }
    }

    [XmlElement("rationale", Order = 11)]
    [JsonProperty("rationale", Order = 11)]
    public List<CharacterString_PropertyType> rationale {
      get {
        return _rationale;
      }
      set {
        if ((_rationale == value)) {
          return;
        }
        if (((_rationale == null)
                    || (_rationale.Equals(value) != true))) {
          _rationale = value;
          OnPropertyChanged("rationale");
        }
      }
    }

    [XmlElement("source", Order = 12)]
    [JsonProperty("source", Order = 12)]
    public List<CI_ResponsibleParty_PropertyType> source {
      get {
        return _source;
      }
      set {
        if ((_source == value)) {
          return;
        }
        if (((_source == null)
                    || (_source.Equals(value) != true))) {
          _source = value;
          OnPropertyChanged("source");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ObligationCode_PropertyType")]
  public class MD_ObligationCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ObligationCode_Type _mD_ObligationCode;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ObligationCode", Order = 0)]
    public MD_ObligationCode_Type MD_ObligationCode {
      get {
        return _mD_ObligationCode;
      }
      set {
        if ((_mD_ObligationCode.Equals(value) != true)) {
          _mD_ObligationCode = value;
          OnPropertyChanged("MD_ObligationCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ObligationCode", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  public enum MD_ObligationCode_Type {
    mandatory,
    optional,
    conditional,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_DatatypeCode_PropertyType")]
  public class MD_DatatypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_DatatypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_DatatypeCode_PropertyType class constructor
    /// </summary>
    public MD_DatatypeCode_PropertyType() {
      _mD_DatatypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_DatatypeCode", Order = 0)]
    public CodeListValue_Type MD_DatatypeCode {
      get {
        return _mD_DatatypeCode;
      }
      set {
        if ((_mD_DatatypeCode == value)) {
          return;
        }
        if (((_mD_DatatypeCode == null)
                    || (_mD_DatatypeCode.Equals(value) != true))) {
          _mD_DatatypeCode = value;
          OnPropertyChanged("MD_DatatypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Identification_PropertyType")]
  public class MD_Identification_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractMD_Identification_Type _abstractMD_Identification;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractMD_Identification", Order = 0)]
    public AbstractMD_Identification_Type AbstractMD_Identification {
      get {
        return _abstractMD_Identification;
      }
      set {
        if ((_abstractMD_Identification == value)) {
          return;
        }
        if (((_abstractMD_Identification == null)
                    || (_abstractMD_Identification.Equals(value) != true))) {
          _abstractMD_Identification = value;
          OnPropertyChanged("AbstractMD_Identification");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Basic information about data
  /// </summary>
  [XmlInclude(typeof(MD_ServiceIdentification_Type))]
  [XmlInclude(typeof(MD_DataIdentification_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractMD_Identification", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractMD_Identification_Type")]
  public abstract class AbstractMD_Identification_Type : AbstractObject_Type {
    #region Private fields
    private CI_Citation_PropertyType _citation;
    private CharacterString_PropertyType _abstract;
    private CharacterString_PropertyType _purpose;
    private List<CharacterString_PropertyType> _credit;
    private List<MD_ProgressCode_PropertyType> _status;
    private List<CI_ResponsibleParty_PropertyType> _pointOfContact;
    private List<MD_MaintenanceInformation_PropertyType> _resourceMaintenance;
    private List<MD_BrowseGraphic_PropertyType> _graphicOverview;
    private List<MD_Format_PropertyType> _resourceFormat;
    private List<MD_Keywords_PropertyType> _descriptiveKeywords;
    private List<MD_Usage_PropertyType> _resourceSpecificUsage;
    private List<MD_Constraints_PropertyType> _resourceConstraints;
    private List<MD_AggregateInformation_PropertyType> _aggregationInfo;
    #endregion

    /// <summary>
    /// AbstractMD_Identification_Type class constructor
    /// </summary>
    public AbstractMD_Identification_Type() {
      _aggregationInfo = new List<MD_AggregateInformation_PropertyType>();
      _resourceConstraints = new List<MD_Constraints_PropertyType>();
      _resourceSpecificUsage = new List<MD_Usage_PropertyType>();
      _descriptiveKeywords = new List<MD_Keywords_PropertyType>();
      _resourceFormat = new List<MD_Format_PropertyType>();
      _graphicOverview = new List<MD_BrowseGraphic_PropertyType>();
      _resourceMaintenance = new List<MD_MaintenanceInformation_PropertyType>();
      _pointOfContact = new List<CI_ResponsibleParty_PropertyType>();
      _status = new List<MD_ProgressCode_PropertyType>();
      _credit = new List<CharacterString_PropertyType>();
      _purpose = new CharacterString_PropertyType();
      _abstract = new CharacterString_PropertyType();
      _citation = new CI_Citation_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("citation", Order = 0)]
    public CI_Citation_PropertyType citation {
      get {
        return _citation;
      }
      set {
        if ((_citation == value)) {
          return;
        }
        if (((_citation == null)
                    || (_citation.Equals(value) != true))) {
          _citation = value;
          OnPropertyChanged("citation");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("abstract", Order = 1)]
    public CharacterString_PropertyType @abstract {
      get {
        return _abstract;
      }
      set {
        if ((_abstract == value)) {
          return;
        }
        if (((_abstract == null)
                    || (_abstract.Equals(value) != true))) {
          _abstract = value;
          OnPropertyChanged("abstract");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("purpose", Order = 2)]
    public CharacterString_PropertyType purpose {
      get {
        return _purpose;
      }
      set {
        if ((_purpose == value)) {
          return;
        }
        if (((_purpose == null)
                    || (_purpose.Equals(value) != true))) {
          _purpose = value;
          OnPropertyChanged("purpose");
        }
      }
    }

    [XmlElement("credit", Order = 3)]
    [JsonProperty("credit", Order = 3)]
    public List<CharacterString_PropertyType> credit {
      get {
        return _credit;
      }
      set {
        if ((_credit == value)) {
          return;
        }
        if (((_credit == null)
                    || (_credit.Equals(value) != true))) {
          _credit = value;
          OnPropertyChanged("credit");
        }
      }
    }

    [XmlElement("status", Order = 4)]
    [JsonProperty("status", Order = 4)]
    public List<MD_ProgressCode_PropertyType> status {
      get {
        return _status;
      }
      set {
        if ((_status == value)) {
          return;
        }
        if (((_status == null)
                    || (_status.Equals(value) != true))) {
          _status = value;
          OnPropertyChanged("status");
        }
      }
    }

    [XmlElement("pointOfContact", Order = 5)]
    [JsonProperty("pointOfContact", Order = 5)]
    public List<CI_ResponsibleParty_PropertyType> pointOfContact {
      get {
        return _pointOfContact;
      }
      set {
        if ((_pointOfContact == value)) {
          return;
        }
        if (((_pointOfContact == null)
                    || (_pointOfContact.Equals(value) != true))) {
          _pointOfContact = value;
          OnPropertyChanged("pointOfContact");
        }
      }
    }

    [XmlElement("resourceMaintenance", Order = 6)]
    [JsonProperty("resourceMaintenance", Order = 6)]
    public List<MD_MaintenanceInformation_PropertyType> resourceMaintenance {
      get {
        return _resourceMaintenance;
      }
      set {
        if ((_resourceMaintenance == value)) {
          return;
        }
        if (((_resourceMaintenance == null)
                    || (_resourceMaintenance.Equals(value) != true))) {
          _resourceMaintenance = value;
          OnPropertyChanged("resourceMaintenance");
        }
      }
    }

    [XmlElement("graphicOverview", Order = 7)]
    [JsonProperty("graphicOverview", Order = 7)]
    public List<MD_BrowseGraphic_PropertyType> graphicOverview {
      get {
        return _graphicOverview;
      }
      set {
        if ((_graphicOverview == value)) {
          return;
        }
        if (((_graphicOverview == null)
                    || (_graphicOverview.Equals(value) != true))) {
          _graphicOverview = value;
          OnPropertyChanged("graphicOverview");
        }
      }
    }

    [XmlElement("resourceFormat", Order = 8)]
    [JsonProperty("resourceFormat", Order = 8)]
    public List<MD_Format_PropertyType> resourceFormat {
      get {
        return _resourceFormat;
      }
      set {
        if ((_resourceFormat == value)) {
          return;
        }
        if (((_resourceFormat == null)
                    || (_resourceFormat.Equals(value) != true))) {
          _resourceFormat = value;
          OnPropertyChanged("resourceFormat");
        }
      }
    }

    [XmlElement("descriptiveKeywords", Order = 9)]
    [JsonProperty("descriptiveKeywords", Order = 9)]
    public List<MD_Keywords_PropertyType> descriptiveKeywords {
      get {
        return _descriptiveKeywords;
      }
      set {
        if ((_descriptiveKeywords == value)) {
          return;
        }
        if (((_descriptiveKeywords == null)
                    || (_descriptiveKeywords.Equals(value) != true))) {
          _descriptiveKeywords = value;
          OnPropertyChanged("descriptiveKeywords");
        }
      }
    }

    [XmlElement("resourceSpecificUsage", Order = 10)]
    [JsonProperty("resourceSpecificUsage", Order = 10)]
    public List<MD_Usage_PropertyType> resourceSpecificUsage {
      get {
        return _resourceSpecificUsage;
      }
      set {
        if ((_resourceSpecificUsage == value)) {
          return;
        }
        if (((_resourceSpecificUsage == null)
                    || (_resourceSpecificUsage.Equals(value) != true))) {
          _resourceSpecificUsage = value;
          OnPropertyChanged("resourceSpecificUsage");
        }
      }
    }

    [XmlElement("resourceConstraints", Order = 11)]
    [JsonProperty("resourceConstraints", Order = 11)]
    public List<MD_Constraints_PropertyType> resourceConstraints {
      get {
        return _resourceConstraints;
      }
      set {
        if ((_resourceConstraints == value)) {
          return;
        }
        if (((_resourceConstraints == null)
                    || (_resourceConstraints.Equals(value) != true))) {
          _resourceConstraints = value;
          OnPropertyChanged("resourceConstraints");
        }
      }
    }

    [XmlElement("aggregationInfo", Order = 12)]
    [JsonProperty("aggregationInfo", Order = 12)]
    public List<MD_AggregateInformation_PropertyType> aggregationInfo {
      get {
        return _aggregationInfo;
      }
      set {
        if ((_aggregationInfo == value)) {
          return;
        }
        if (((_aggregationInfo == null)
                    || (_aggregationInfo.Equals(value) != true))) {
          _aggregationInfo = value;
          OnPropertyChanged("aggregationInfo");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ProgressCode_PropertyType")]
  public class MD_ProgressCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_ProgressCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ProgressCode_PropertyType class constructor
    /// </summary>
    public MD_ProgressCode_PropertyType() {
      _mD_ProgressCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ProgressCode", Order = 0)]
    public CodeListValue_Type MD_ProgressCode {
      get {
        return _mD_ProgressCode;
      }
      set {
        if ((_mD_ProgressCode == value)) {
          return;
        }
        if (((_mD_ProgressCode == null)
                    || (_mD_ProgressCode.Equals(value) != true))) {
          _mD_ProgressCode = value;
          OnPropertyChanged("MD_ProgressCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_MaintenanceInformation_PropertyType")]
  public class MD_MaintenanceInformation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_MaintenanceInformation_Type _mD_MaintenanceInformation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_MaintenanceInformation_PropertyType class constructor
    /// </summary>
    public MD_MaintenanceInformation_PropertyType() {
      _mD_MaintenanceInformation = new MD_MaintenanceInformation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_MaintenanceInformation", Order = 0)]
    public MD_MaintenanceInformation_Type MD_MaintenanceInformation {
      get {
        return _mD_MaintenanceInformation;
      }
      set {
        if ((_mD_MaintenanceInformation == value)) {
          return;
        }
        if (((_mD_MaintenanceInformation == null)
                    || (_mD_MaintenanceInformation.Equals(value) != true))) {
          _mD_MaintenanceInformation = value;
          OnPropertyChanged("MD_MaintenanceInformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about the scope and frequency of updating
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_MaintenanceInformation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_MaintenanceInformation_Type")]
  public class MD_MaintenanceInformation_Type : AbstractObject_Type {
    #region Private fields
    private MD_MaintenanceFrequencyCode_PropertyType _maintenanceAndUpdateFrequency;
    private Date_PropertyType _dateOfNextUpdate;
    private TM_PeriodDuration_PropertyType _userDefinedMaintenanceFrequency;
    private List<MD_ScopeCode_PropertyType> _updateScope;
    private List<MD_ScopeDescription_PropertyType> _updateScopeDescription;
    private List<CharacterString_PropertyType> _maintenanceNote;
    private List<CI_ResponsibleParty_PropertyType> _contact;
    #endregion

    /// <summary>
    /// MD_MaintenanceInformation_Type class constructor
    /// </summary>
    public MD_MaintenanceInformation_Type() {
      _contact = new List<CI_ResponsibleParty_PropertyType>();
      _maintenanceNote = new List<CharacterString_PropertyType>();
      _updateScopeDescription = new List<MD_ScopeDescription_PropertyType>();
      _updateScope = new List<MD_ScopeCode_PropertyType>();
      _userDefinedMaintenanceFrequency = new TM_PeriodDuration_PropertyType();
      _dateOfNextUpdate = new Date_PropertyType();
      _maintenanceAndUpdateFrequency = new MD_MaintenanceFrequencyCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("maintenanceAndUpdateFrequency", Order = 0)]
    public MD_MaintenanceFrequencyCode_PropertyType maintenanceAndUpdateFrequency {
      get {
        return _maintenanceAndUpdateFrequency;
      }
      set {
        if ((_maintenanceAndUpdateFrequency == value)) {
          return;
        }
        if (((_maintenanceAndUpdateFrequency == null)
                    || (_maintenanceAndUpdateFrequency.Equals(value) != true))) {
          _maintenanceAndUpdateFrequency = value;
          OnPropertyChanged("maintenanceAndUpdateFrequency");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("dateOfNextUpdate", Order = 1)]
    public Date_PropertyType dateOfNextUpdate {
      get {
        return _dateOfNextUpdate;
      }
      set {
        if ((_dateOfNextUpdate == value)) {
          return;
        }
        if (((_dateOfNextUpdate == null)
                    || (_dateOfNextUpdate.Equals(value) != true))) {
          _dateOfNextUpdate = value;
          OnPropertyChanged("dateOfNextUpdate");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("userDefinedMaintenanceFrequency", Order = 2)]
    public TM_PeriodDuration_PropertyType userDefinedMaintenanceFrequency {
      get {
        return _userDefinedMaintenanceFrequency;
      }
      set {
        if ((_userDefinedMaintenanceFrequency == value)) {
          return;
        }
        if (((_userDefinedMaintenanceFrequency == null)
                    || (_userDefinedMaintenanceFrequency.Equals(value) != true))) {
          _userDefinedMaintenanceFrequency = value;
          OnPropertyChanged("userDefinedMaintenanceFrequency");
        }
      }
    }

    [XmlElement("updateScope", Order = 3)]
    [JsonProperty("updateScope", Order = 3)]
    public List<MD_ScopeCode_PropertyType> updateScope {
      get {
        return _updateScope;
      }
      set {
        if ((_updateScope == value)) {
          return;
        }
        if (((_updateScope == null)
                    || (_updateScope.Equals(value) != true))) {
          _updateScope = value;
          OnPropertyChanged("updateScope");
        }
      }
    }

    [XmlElement("updateScopeDescription", Order = 4)]
    [JsonProperty("updateScopeDescription", Order = 4)]
    public List<MD_ScopeDescription_PropertyType> updateScopeDescription {
      get {
        return _updateScopeDescription;
      }
      set {
        if ((_updateScopeDescription == value)) {
          return;
        }
        if (((_updateScopeDescription == null)
                    || (_updateScopeDescription.Equals(value) != true))) {
          _updateScopeDescription = value;
          OnPropertyChanged("updateScopeDescription");
        }
      }
    }

    [XmlElement("maintenanceNote", Order = 5)]
    [JsonProperty("maintenanceNote", Order = 5)]
    public List<CharacterString_PropertyType> maintenanceNote {
      get {
        return _maintenanceNote;
      }
      set {
        if ((_maintenanceNote == value)) {
          return;
        }
        if (((_maintenanceNote == null)
                    || (_maintenanceNote.Equals(value) != true))) {
          _maintenanceNote = value;
          OnPropertyChanged("maintenanceNote");
        }
      }
    }

    [XmlElement("contact", Order = 6)]
    [JsonProperty("contact", Order = 6)]
    public List<CI_ResponsibleParty_PropertyType> contact {
      get {
        return _contact;
      }
      set {
        if ((_contact == value)) {
          return;
        }
        if (((_contact == null)
                    || (_contact.Equals(value) != true))) {
          _contact = value;
          OnPropertyChanged("contact");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_MaintenanceFrequencyCode_PropertyType")]
  public class MD_MaintenanceFrequencyCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_MaintenanceFrequencyCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_MaintenanceFrequencyCode_PropertyType class constructor
    /// </summary>
    public MD_MaintenanceFrequencyCode_PropertyType() {
      _mD_MaintenanceFrequencyCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_MaintenanceFrequencyCode", Order = 0)]
    public CodeListValue_Type MD_MaintenanceFrequencyCode {
      get {
        return _mD_MaintenanceFrequencyCode;
      }
      set {
        if ((_mD_MaintenanceFrequencyCode == value)) {
          return;
        }
        if (((_mD_MaintenanceFrequencyCode == null)
                    || (_mD_MaintenanceFrequencyCode.Equals(value) != true))) {
          _mD_MaintenanceFrequencyCode = value;
          OnPropertyChanged("MD_MaintenanceFrequencyCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gts")]
  [JsonObject("TM_PeriodDuration_PropertyType")]
  public class TM_PeriodDuration_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private string _tM_PeriodDuration;
    private string _nilReason;
    #endregion

    [XmlElement(DataType = "duration", Order = 0)]
    [JsonProperty("TM_PeriodDuration", Order = 0)]
    public string TM_PeriodDuration {
      get {
        return _tM_PeriodDuration;
      }
      set {
        if ((_tM_PeriodDuration == value)) {
          return;
        }
        if (((_tM_PeriodDuration == null)
                    || (_tM_PeriodDuration.Equals(value) != true))) {
          _tM_PeriodDuration = value;
          OnPropertyChanged("TM_PeriodDuration");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ScopeDescription_PropertyType")]
  public class MD_ScopeDescription_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ScopeDescription_Type _mD_ScopeDescription;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ScopeDescription_PropertyType class constructor
    /// </summary>
    public MD_ScopeDescription_PropertyType() {
      _mD_ScopeDescription = new MD_ScopeDescription_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ScopeDescription", Order = 0)]
    public MD_ScopeDescription_Type MD_ScopeDescription {
      get {
        return _mD_ScopeDescription;
      }
      set {
        if ((_mD_ScopeDescription == value)) {
          return;
        }
        if (((_mD_ScopeDescription == null)
                    || (_mD_ScopeDescription.Equals(value) != true))) {
          _mD_ScopeDescription = value;
          OnPropertyChanged("MD_ScopeDescription");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Description of the class of information covered by the information
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ScopeDescription", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_ScopeDescription_Type")]
  public class MD_ScopeDescription_Type : INotifyPropertyChanged {
    #region Private fields
    private object[] _items;
    private ItemsChoiceType9[] _itemsElementName;
    #endregion

    [XmlElement("attributeInstances", typeof(ObjectReference_PropertyType), Order = 0)]
    [XmlElement("attributes", typeof(ObjectReference_PropertyType), Order = 0)]
    [XmlElement("dataset", typeof(CharacterString_PropertyType), Order = 0)]
    [XmlElement("featureInstances", typeof(ObjectReference_PropertyType), Order = 0)]
    [XmlElement("features", typeof(ObjectReference_PropertyType), Order = 0)]
    [XmlElement("other", typeof(CharacterString_PropertyType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 1)]
    [XmlIgnore]
    public ItemsChoiceType9[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd", IncludeInSchema = false)]
  public enum ItemsChoiceType9 {
    attributeInstances,
    attributes,
    dataset,
    featureInstances,
    features,
    other,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_BrowseGraphic_PropertyType")]
  public class MD_BrowseGraphic_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_BrowseGraphic_Type _mD_BrowseGraphic;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_BrowseGraphic_PropertyType class constructor
    /// </summary>
    public MD_BrowseGraphic_PropertyType() {
      _mD_BrowseGraphic = new MD_BrowseGraphic_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_BrowseGraphic", Order = 0)]
    public MD_BrowseGraphic_Type MD_BrowseGraphic {
      get {
        return _mD_BrowseGraphic;
      }
      set {
        if ((_mD_BrowseGraphic == value)) {
          return;
        }
        if (((_mD_BrowseGraphic == null)
                    || (_mD_BrowseGraphic.Equals(value) != true))) {
          _mD_BrowseGraphic = value;
          OnPropertyChanged("MD_BrowseGraphic");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Graphic that provides an illustration of the dataset (should include a legend for the graphic)
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_BrowseGraphic", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_BrowseGraphic_Type")]
  public class MD_BrowseGraphic_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _fileName;
    private CharacterString_PropertyType _fileDescription;
    private CharacterString_PropertyType _fileType;
    #endregion

    /// <summary>
    /// MD_BrowseGraphic_Type class constructor
    /// </summary>
    public MD_BrowseGraphic_Type() {
      _fileType = new CharacterString_PropertyType();
      _fileDescription = new CharacterString_PropertyType();
      _fileName = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("fileName", Order = 0)]
    public CharacterString_PropertyType fileName {
      get {
        return _fileName;
      }
      set {
        if ((_fileName == value)) {
          return;
        }
        if (((_fileName == null)
                    || (_fileName.Equals(value) != true))) {
          _fileName = value;
          OnPropertyChanged("fileName");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("fileDescription", Order = 1)]
    public CharacterString_PropertyType fileDescription {
      get {
        return _fileDescription;
      }
      set {
        if ((_fileDescription == value)) {
          return;
        }
        if (((_fileDescription == null)
                    || (_fileDescription.Equals(value) != true))) {
          _fileDescription = value;
          OnPropertyChanged("fileDescription");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("fileType", Order = 2)]
    public CharacterString_PropertyType fileType {
      get {
        return _fileType;
      }
      set {
        if ((_fileType == value)) {
          return;
        }
        if (((_fileType == null)
                    || (_fileType.Equals(value) != true))) {
          _fileType = value;
          OnPropertyChanged("fileType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Format_PropertyType")]
  public class MD_Format_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Format_Type _mD_Format;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Format_PropertyType class constructor
    /// </summary>
    public MD_Format_PropertyType() {
      _mD_Format = new MD_Format_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Format", Order = 0)]
    public MD_Format_Type MD_Format {
      get {
        return _mD_Format;
      }
      set {
        if ((_mD_Format == value)) {
          return;
        }
        if (((_mD_Format == null)
                    || (_mD_Format.Equals(value) != true))) {
          _mD_Format = value;
          OnPropertyChanged("MD_Format");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Description of the form of the data to be distributed
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Format", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Format_Type")]
  public class MD_Format_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _name;
    private CharacterString_PropertyType _version;
    private CharacterString_PropertyType _amendmentNumber;
    private CharacterString_PropertyType _specification;
    private CharacterString_PropertyType _fileDecompressionTechnique;
    private List<MD_Distributor_PropertyType> _formatDistributor;
    #endregion

    /// <summary>
    /// MD_Format_Type class constructor
    /// </summary>
    public MD_Format_Type() {
      _formatDistributor = new List<MD_Distributor_PropertyType>();
      _fileDecompressionTechnique = new CharacterString_PropertyType();
      _specification = new CharacterString_PropertyType();
      _amendmentNumber = new CharacterString_PropertyType();
      _version = new CharacterString_PropertyType();
      _name = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("name", Order = 0)]
    public CharacterString_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("version", Order = 1)]
    public CharacterString_PropertyType version {
      get {
        return _version;
      }
      set {
        if ((_version == value)) {
          return;
        }
        if (((_version == null)
                    || (_version.Equals(value) != true))) {
          _version = value;
          OnPropertyChanged("version");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("amendmentNumber", Order = 2)]
    public CharacterString_PropertyType amendmentNumber {
      get {
        return _amendmentNumber;
      }
      set {
        if ((_amendmentNumber == value)) {
          return;
        }
        if (((_amendmentNumber == null)
                    || (_amendmentNumber.Equals(value) != true))) {
          _amendmentNumber = value;
          OnPropertyChanged("amendmentNumber");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("specification", Order = 3)]
    public CharacterString_PropertyType specification {
      get {
        return _specification;
      }
      set {
        if ((_specification == value)) {
          return;
        }
        if (((_specification == null)
                    || (_specification.Equals(value) != true))) {
          _specification = value;
          OnPropertyChanged("specification");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("fileDecompressionTechnique", Order = 4)]
    public CharacterString_PropertyType fileDecompressionTechnique {
      get {
        return _fileDecompressionTechnique;
      }
      set {
        if ((_fileDecompressionTechnique == value)) {
          return;
        }
        if (((_fileDecompressionTechnique == null)
                    || (_fileDecompressionTechnique.Equals(value) != true))) {
          _fileDecompressionTechnique = value;
          OnPropertyChanged("fileDecompressionTechnique");
        }
      }
    }

    [XmlElement("formatDistributor", Order = 5)]
    [JsonProperty("formatDistributor", Order = 5)]
    public List<MD_Distributor_PropertyType> formatDistributor {
      get {
        return _formatDistributor;
      }
      set {
        if ((_formatDistributor == value)) {
          return;
        }
        if (((_formatDistributor == null)
                    || (_formatDistributor.Equals(value) != true))) {
          _formatDistributor = value;
          OnPropertyChanged("formatDistributor");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Distributor_PropertyType")]
  public class MD_Distributor_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Distributor_Type _mD_Distributor;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Distributor_PropertyType class constructor
    /// </summary>
    public MD_Distributor_PropertyType() {
      _mD_Distributor = new MD_Distributor_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Distributor", Order = 0)]
    public MD_Distributor_Type MD_Distributor {
      get {
        return _mD_Distributor;
      }
      set {
        if ((_mD_Distributor == value)) {
          return;
        }
        if (((_mD_Distributor == null)
                    || (_mD_Distributor.Equals(value) != true))) {
          _mD_Distributor = value;
          OnPropertyChanged("MD_Distributor");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about the distributor
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Distributor", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Distributor_Type")]
  public class MD_Distributor_Type : AbstractObject_Type {
    #region Private fields
    private CI_ResponsibleParty_PropertyType _distributorContact;
    private List<MD_StandardOrderProcess_PropertyType> _distributionOrderProcess;
    private List<MD_Format_PropertyType> _distributorFormat;
    private List<MD_DigitalTransferOptions_PropertyType> _distributorTransferOptions;
    #endregion

    /// <summary>
    /// MD_Distributor_Type class constructor
    /// </summary>
    public MD_Distributor_Type() {
      _distributorTransferOptions = new List<MD_DigitalTransferOptions_PropertyType>();
      _distributorFormat = new List<MD_Format_PropertyType>();
      _distributionOrderProcess = new List<MD_StandardOrderProcess_PropertyType>();
      _distributorContact = new CI_ResponsibleParty_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("distributorContact", Order = 0)]
    public CI_ResponsibleParty_PropertyType distributorContact {
      get {
        return _distributorContact;
      }
      set {
        if ((_distributorContact == value)) {
          return;
        }
        if (((_distributorContact == null)
                    || (_distributorContact.Equals(value) != true))) {
          _distributorContact = value;
          OnPropertyChanged("distributorContact");
        }
      }
    }

    [XmlElement("distributionOrderProcess", Order = 1)]
    [JsonProperty("distributionOrderProcess", Order = 1)]
    public List<MD_StandardOrderProcess_PropertyType> distributionOrderProcess {
      get {
        return _distributionOrderProcess;
      }
      set {
        if ((_distributionOrderProcess == value)) {
          return;
        }
        if (((_distributionOrderProcess == null)
                    || (_distributionOrderProcess.Equals(value) != true))) {
          _distributionOrderProcess = value;
          OnPropertyChanged("distributionOrderProcess");
        }
      }
    }

    [XmlElement("distributorFormat", Order = 2)]
    [JsonProperty("distributorFormat", Order = 2)]
    public List<MD_Format_PropertyType> distributorFormat {
      get {
        return _distributorFormat;
      }
      set {
        if ((_distributorFormat == value)) {
          return;
        }
        if (((_distributorFormat == null)
                    || (_distributorFormat.Equals(value) != true))) {
          _distributorFormat = value;
          OnPropertyChanged("distributorFormat");
        }
      }
    }

    [XmlElement("distributorTransferOptions", Order = 3)]
    [JsonProperty("distributorTransferOptions", Order = 3)]
    public List<MD_DigitalTransferOptions_PropertyType> distributorTransferOptions {
      get {
        return _distributorTransferOptions;
      }
      set {
        if ((_distributorTransferOptions == value)) {
          return;
        }
        if (((_distributorTransferOptions == null)
                    || (_distributorTransferOptions.Equals(value) != true))) {
          _distributorTransferOptions = value;
          OnPropertyChanged("distributorTransferOptions");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_StandardOrderProcess_PropertyType")]
  public class MD_StandardOrderProcess_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_StandardOrderProcess_Type _mD_StandardOrderProcess;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_StandardOrderProcess_PropertyType class constructor
    /// </summary>
    public MD_StandardOrderProcess_PropertyType() {
      _mD_StandardOrderProcess = new MD_StandardOrderProcess_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_StandardOrderProcess", Order = 0)]
    public MD_StandardOrderProcess_Type MD_StandardOrderProcess {
      get {
        return _mD_StandardOrderProcess;
      }
      set {
        if ((_mD_StandardOrderProcess == value)) {
          return;
        }
        if (((_mD_StandardOrderProcess == null)
                    || (_mD_StandardOrderProcess.Equals(value) != true))) {
          _mD_StandardOrderProcess = value;
          OnPropertyChanged("MD_StandardOrderProcess");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Common ways in which the dataset may be obtained or received, and related instructions and fee information
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_StandardOrderProcess", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_StandardOrderProcess_Type")]
  public class MD_StandardOrderProcess_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _fees;
    private DateTime_PropertyType _plannedAvailableDateTime;
    private CharacterString_PropertyType _orderingInstructions;
    private CharacterString_PropertyType _turnaround;
    #endregion

    /// <summary>
    /// MD_StandardOrderProcess_Type class constructor
    /// </summary>
    public MD_StandardOrderProcess_Type() {
      _turnaround = new CharacterString_PropertyType();
      _orderingInstructions = new CharacterString_PropertyType();
      _plannedAvailableDateTime = new DateTime_PropertyType();
      _fees = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("fees", Order = 0)]
    public CharacterString_PropertyType fees {
      get {
        return _fees;
      }
      set {
        if ((_fees == value)) {
          return;
        }
        if (((_fees == null)
                    || (_fees.Equals(value) != true))) {
          _fees = value;
          OnPropertyChanged("fees");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("plannedAvailableDateTime", Order = 1)]
    public DateTime_PropertyType plannedAvailableDateTime {
      get {
        return _plannedAvailableDateTime;
      }
      set {
        if ((_plannedAvailableDateTime == value)) {
          return;
        }
        if (((_plannedAvailableDateTime == null)
                    || (_plannedAvailableDateTime.Equals(value) != true))) {
          _plannedAvailableDateTime = value;
          OnPropertyChanged("plannedAvailableDateTime");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("orderingInstructions", Order = 2)]
    public CharacterString_PropertyType orderingInstructions {
      get {
        return _orderingInstructions;
      }
      set {
        if ((_orderingInstructions == value)) {
          return;
        }
        if (((_orderingInstructions == null)
                    || (_orderingInstructions.Equals(value) != true))) {
          _orderingInstructions = value;
          OnPropertyChanged("orderingInstructions");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("turnaround", Order = 3)]
    public CharacterString_PropertyType turnaround {
      get {
        return _turnaround;
      }
      set {
        if ((_turnaround == value)) {
          return;
        }
        if (((_turnaround == null)
                    || (_turnaround.Equals(value) != true))) {
          _turnaround = value;
          OnPropertyChanged("turnaround");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("DateTime_PropertyType")]
  public class DateTime_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private System.DateTime _dateTime;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("DateTime", Order = 0)]
    public System.DateTime DateTime {
      get {
        return _dateTime;
      }
      set {
        if ((_dateTime.Equals(value) != true)) {
          _dateTime = value;
          OnPropertyChanged("DateTime");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_DigitalTransferOptions_PropertyType")]
  public class MD_DigitalTransferOptions_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_DigitalTransferOptions_Type _mD_DigitalTransferOptions;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_DigitalTransferOptions_PropertyType class constructor
    /// </summary>
    public MD_DigitalTransferOptions_PropertyType() {
      _mD_DigitalTransferOptions = new MD_DigitalTransferOptions_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_DigitalTransferOptions", Order = 0)]
    public MD_DigitalTransferOptions_Type MD_DigitalTransferOptions {
      get {
        return _mD_DigitalTransferOptions;
      }
      set {
        if ((_mD_DigitalTransferOptions == value)) {
          return;
        }
        if (((_mD_DigitalTransferOptions == null)
                    || (_mD_DigitalTransferOptions.Equals(value) != true))) {
          _mD_DigitalTransferOptions = value;
          OnPropertyChanged("MD_DigitalTransferOptions");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Technical means and media by which a dataset is obtained from the distributor
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_DigitalTransferOptions", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_DigitalTransferOptions_Type")]
  public class MD_DigitalTransferOptions_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _unitsOfDistribution;
    private Real_PropertyType _transferSize;
    private List<CI_OnlineResource_PropertyType> _onLine;
    private MD_Medium_PropertyType _offLine;
    #endregion

    /// <summary>
    /// MD_DigitalTransferOptions_Type class constructor
    /// </summary>
    public MD_DigitalTransferOptions_Type() {
      _offLine = new MD_Medium_PropertyType();
      _onLine = new List<CI_OnlineResource_PropertyType>();
      _transferSize = new Real_PropertyType();
      _unitsOfDistribution = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("unitsOfDistribution", Order = 0)]
    public CharacterString_PropertyType unitsOfDistribution {
      get {
        return _unitsOfDistribution;
      }
      set {
        if ((_unitsOfDistribution == value)) {
          return;
        }
        if (((_unitsOfDistribution == null)
                    || (_unitsOfDistribution.Equals(value) != true))) {
          _unitsOfDistribution = value;
          OnPropertyChanged("unitsOfDistribution");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("transferSize", Order = 1)]
    public Real_PropertyType transferSize {
      get {
        return _transferSize;
      }
      set {
        if ((_transferSize == value)) {
          return;
        }
        if (((_transferSize == null)
                    || (_transferSize.Equals(value) != true))) {
          _transferSize = value;
          OnPropertyChanged("transferSize");
        }
      }
    }

    [XmlElement("onLine", Order = 2)]
    [JsonProperty("onLine", Order = 2)]
    public List<CI_OnlineResource_PropertyType> onLine {
      get {
        return _onLine;
      }
      set {
        if ((_onLine == value)) {
          return;
        }
        if (((_onLine == null)
                    || (_onLine.Equals(value) != true))) {
          _onLine = value;
          OnPropertyChanged("onLine");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("offLine", Order = 3)]
    public MD_Medium_PropertyType offLine {
      get {
        return _offLine;
      }
      set {
        if ((_offLine == value)) {
          return;
        }
        if (((_offLine == null)
                    || (_offLine.Equals(value) != true))) {
          _offLine = value;
          OnPropertyChanged("offLine");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Real_PropertyType")]
  public class Real_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private double _real;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("Real", Order = 0)]
    public double Real {
      get {
        return _real;
      }
      set {
        if ((_real.Equals(value) != true)) {
          _real = value;
          OnPropertyChanged("Real");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Medium_PropertyType")]
  public class MD_Medium_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Medium_Type _mD_Medium;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Medium_PropertyType class constructor
    /// </summary>
    public MD_Medium_PropertyType() {
      _mD_Medium = new MD_Medium_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Medium", Order = 0)]
    public MD_Medium_Type MD_Medium {
      get {
        return _mD_Medium;
      }
      set {
        if ((_mD_Medium == value)) {
          return;
        }
        if (((_mD_Medium == null)
                    || (_mD_Medium.Equals(value) != true))) {
          _mD_Medium = value;
          OnPropertyChanged("MD_Medium");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about the media on which the data can be distributed
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Medium", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Medium_Type")]
  public class MD_Medium_Type : AbstractObject_Type {
    #region Private fields
    private MD_MediumNameCode_PropertyType _name;
    private List<Real_PropertyType> _density;
    private CharacterString_PropertyType _densityUnits;
    private Integer_PropertyType _volumes;
    private List<MD_MediumFormatCode_PropertyType> _mediumFormat;
    private CharacterString_PropertyType _mediumNote;
    #endregion

    /// <summary>
    /// MD_Medium_Type class constructor
    /// </summary>
    public MD_Medium_Type() {
      _mediumNote = new CharacterString_PropertyType();
      _mediumFormat = new List<MD_MediumFormatCode_PropertyType>();
      _volumes = new Integer_PropertyType();
      _densityUnits = new CharacterString_PropertyType();
      _density = new List<Real_PropertyType>();
      _name = new MD_MediumNameCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("name", Order = 0)]
    public MD_MediumNameCode_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement("density", Order = 1)]
    [JsonProperty("density", Order = 1)]
    public List<Real_PropertyType> density {
      get {
        return _density;
      }
      set {
        if ((_density == value)) {
          return;
        }
        if (((_density == null)
                    || (_density.Equals(value) != true))) {
          _density = value;
          OnPropertyChanged("density");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("densityUnits", Order = 2)]
    public CharacterString_PropertyType densityUnits {
      get {
        return _densityUnits;
      }
      set {
        if ((_densityUnits == value)) {
          return;
        }
        if (((_densityUnits == null)
                    || (_densityUnits.Equals(value) != true))) {
          _densityUnits = value;
          OnPropertyChanged("densityUnits");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("volumes", Order = 3)]
    public Integer_PropertyType volumes {
      get {
        return _volumes;
      }
      set {
        if ((_volumes == value)) {
          return;
        }
        if (((_volumes == null)
                    || (_volumes.Equals(value) != true))) {
          _volumes = value;
          OnPropertyChanged("volumes");
        }
      }
    }

    [XmlElement("mediumFormat", Order = 4)]
    [JsonProperty("mediumFormat", Order = 4)]
    public List<MD_MediumFormatCode_PropertyType> mediumFormat {
      get {
        return _mediumFormat;
      }
      set {
        if ((_mediumFormat == value)) {
          return;
        }
        if (((_mediumFormat == null)
                    || (_mediumFormat.Equals(value) != true))) {
          _mediumFormat = value;
          OnPropertyChanged("mediumFormat");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("mediumNote", Order = 5)]
    public CharacterString_PropertyType mediumNote {
      get {
        return _mediumNote;
      }
      set {
        if ((_mediumNote == value)) {
          return;
        }
        if (((_mediumNote == null)
                    || (_mediumNote.Equals(value) != true))) {
          _mediumNote = value;
          OnPropertyChanged("mediumNote");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_MediumNameCode_PropertyType")]
  public class MD_MediumNameCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_MediumNameCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_MediumNameCode_PropertyType class constructor
    /// </summary>
    public MD_MediumNameCode_PropertyType() {
      _mD_MediumNameCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_MediumNameCode", Order = 0)]
    public CodeListValue_Type MD_MediumNameCode {
      get {
        return _mD_MediumNameCode;
      }
      set {
        if ((_mD_MediumNameCode == value)) {
          return;
        }
        if (((_mD_MediumNameCode == null)
                    || (_mD_MediumNameCode.Equals(value) != true))) {
          _mD_MediumNameCode = value;
          OnPropertyChanged("MD_MediumNameCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_MediumFormatCode_PropertyType")]
  public class MD_MediumFormatCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_MediumFormatCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_MediumFormatCode_PropertyType class constructor
    /// </summary>
    public MD_MediumFormatCode_PropertyType() {
      _mD_MediumFormatCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_MediumFormatCode", Order = 0)]
    public CodeListValue_Type MD_MediumFormatCode {
      get {
        return _mD_MediumFormatCode;
      }
      set {
        if ((_mD_MediumFormatCode == value)) {
          return;
        }
        if (((_mD_MediumFormatCode == null)
                    || (_mD_MediumFormatCode.Equals(value) != true))) {
          _mD_MediumFormatCode = value;
          OnPropertyChanged("MD_MediumFormatCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Keywords_PropertyType")]
  public class MD_Keywords_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Keywords_Type _mD_Keywords;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Keywords_PropertyType class constructor
    /// </summary>
    public MD_Keywords_PropertyType() {
      _mD_Keywords = new MD_Keywords_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Keywords", Order = 0)]
    public MD_Keywords_Type MD_Keywords {
      get {
        return _mD_Keywords;
      }
      set {
        if ((_mD_Keywords == value)) {
          return;
        }
        if (((_mD_Keywords == null)
                    || (_mD_Keywords.Equals(value) != true))) {
          _mD_Keywords = value;
          OnPropertyChanged("MD_Keywords");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Keywords, their type and reference source
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Keywords", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Keywords_Type")]
  public class MD_Keywords_Type : AbstractObject_Type {
    #region Private fields
    private List<CharacterString_PropertyType> _keyword;
    private MD_KeywordTypeCode_PropertyType _type;
    private CI_Citation_PropertyType _thesaurusName;
    #endregion

    /// <summary>
    /// MD_Keywords_Type class constructor
    /// </summary>
    public MD_Keywords_Type() {
      _thesaurusName = new CI_Citation_PropertyType();
      _type = new MD_KeywordTypeCode_PropertyType();
      _keyword = new List<CharacterString_PropertyType>();
    }

    [XmlElement("keyword", Order = 0)]
    [JsonProperty("keyword", Order = 0)]
    public List<CharacterString_PropertyType> keyword {
      get {
        return _keyword;
      }
      set {
        if ((_keyword == value)) {
          return;
        }
        if (((_keyword == null)
                    || (_keyword.Equals(value) != true))) {
          _keyword = value;
          OnPropertyChanged("keyword");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("type", Order = 1)]
    public MD_KeywordTypeCode_PropertyType type {
      get {
        return _type;
      }
      set {
        if ((_type == value)) {
          return;
        }
        if (((_type == null)
                    || (_type.Equals(value) != true))) {
          _type = value;
          OnPropertyChanged("type");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("thesaurusName", Order = 2)]
    public CI_Citation_PropertyType thesaurusName {
      get {
        return _thesaurusName;
      }
      set {
        if ((_thesaurusName == value)) {
          return;
        }
        if (((_thesaurusName == null)
                    || (_thesaurusName.Equals(value) != true))) {
          _thesaurusName = value;
          OnPropertyChanged("thesaurusName");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_KeywordTypeCode_PropertyType")]
  public class MD_KeywordTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_KeywordTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_KeywordTypeCode_PropertyType class constructor
    /// </summary>
    public MD_KeywordTypeCode_PropertyType() {
      _mD_KeywordTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_KeywordTypeCode", Order = 0)]
    public CodeListValue_Type MD_KeywordTypeCode {
      get {
        return _mD_KeywordTypeCode;
      }
      set {
        if ((_mD_KeywordTypeCode == value)) {
          return;
        }
        if (((_mD_KeywordTypeCode == null)
                    || (_mD_KeywordTypeCode.Equals(value) != true))) {
          _mD_KeywordTypeCode = value;
          OnPropertyChanged("MD_KeywordTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Usage_PropertyType")]
  public class MD_Usage_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Usage_Type _mD_Usage;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Usage_PropertyType class constructor
    /// </summary>
    public MD_Usage_PropertyType() {
      _mD_Usage = new MD_Usage_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Usage", Order = 0)]
    public MD_Usage_Type MD_Usage {
      get {
        return _mD_Usage;
      }
      set {
        if ((_mD_Usage == value)) {
          return;
        }
        if (((_mD_Usage == null)
                    || (_mD_Usage.Equals(value) != true))) {
          _mD_Usage = value;
          OnPropertyChanged("MD_Usage");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Brief description of ways in which the dataset is currently used.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Usage", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Usage_Type")]
  public class MD_Usage_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _specificUsage;
    private DateTime_PropertyType _usageDateTime;
    private CharacterString_PropertyType _userDeterminedLimitations;
    private List<CI_ResponsibleParty_PropertyType> _userContactInfo;
    #endregion

    /// <summary>
    /// MD_Usage_Type class constructor
    /// </summary>
    public MD_Usage_Type() {
      _userContactInfo = new List<CI_ResponsibleParty_PropertyType>();
      _userDeterminedLimitations = new CharacterString_PropertyType();
      _usageDateTime = new DateTime_PropertyType();
      _specificUsage = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("specificUsage", Order = 0)]
    public CharacterString_PropertyType specificUsage {
      get {
        return _specificUsage;
      }
      set {
        if ((_specificUsage == value)) {
          return;
        }
        if (((_specificUsage == null)
                    || (_specificUsage.Equals(value) != true))) {
          _specificUsage = value;
          OnPropertyChanged("specificUsage");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("usageDateTime", Order = 1)]
    public DateTime_PropertyType usageDateTime {
      get {
        return _usageDateTime;
      }
      set {
        if ((_usageDateTime == value)) {
          return;
        }
        if (((_usageDateTime == null)
                    || (_usageDateTime.Equals(value) != true))) {
          _usageDateTime = value;
          OnPropertyChanged("usageDateTime");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("userDeterminedLimitations", Order = 2)]
    public CharacterString_PropertyType userDeterminedLimitations {
      get {
        return _userDeterminedLimitations;
      }
      set {
        if ((_userDeterminedLimitations == value)) {
          return;
        }
        if (((_userDeterminedLimitations == null)
                    || (_userDeterminedLimitations.Equals(value) != true))) {
          _userDeterminedLimitations = value;
          OnPropertyChanged("userDeterminedLimitations");
        }
      }
    }

    [XmlElement("userContactInfo", Order = 3)]
    [JsonProperty("userContactInfo", Order = 3)]
    public List<CI_ResponsibleParty_PropertyType> userContactInfo {
      get {
        return _userContactInfo;
      }
      set {
        if ((_userContactInfo == value)) {
          return;
        }
        if (((_userContactInfo == null)
                    || (_userContactInfo.Equals(value) != true))) {
          _userContactInfo = value;
          OnPropertyChanged("userContactInfo");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Constraints_PropertyType")]
  public class MD_Constraints_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Constraints_Type _mD_Constraints;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Constraints_PropertyType class constructor
    /// </summary>
    public MD_Constraints_PropertyType() {
      _mD_Constraints = new MD_Constraints_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Constraints", Order = 0)]
    public MD_Constraints_Type MD_Constraints {
      get {
        return _mD_Constraints;
      }
      set {
        if ((_mD_Constraints == value)) {
          return;
        }
        if (((_mD_Constraints == null)
                    || (_mD_Constraints.Equals(value) != true))) {
          _mD_Constraints = value;
          OnPropertyChanged("MD_Constraints");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Restrictions on the access and use of a dataset or metadata
  /// </summary>
  [XmlInclude(typeof(MD_SecurityConstraints_Type))]
  [XmlInclude(typeof(MD_LegalConstraints_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Constraints", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Constraints_Type")]
  public class MD_Constraints_Type : AbstractObject_Type {
    #region Private fields
    private List<CharacterString_PropertyType> _useLimitation;
    #endregion

    /// <summary>
    /// MD_Constraints_Type class constructor
    /// </summary>
    public MD_Constraints_Type() {
      _useLimitation = new List<CharacterString_PropertyType>();
    }

    [XmlElement("useLimitation", Order = 0)]
    [JsonProperty("useLimitation", Order = 0)]
    public List<CharacterString_PropertyType> useLimitation {
      get {
        return _useLimitation;
      }
      set {
        if ((_useLimitation == value)) {
          return;
        }
        if (((_useLimitation == null)
                    || (_useLimitation.Equals(value) != true))) {
          _useLimitation = value;
          OnPropertyChanged("useLimitation");
        }
      }
    }
  }

  /// <summary>
  /// Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_SecurityConstraints", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_SecurityConstraints_Type")]
  public class MD_SecurityConstraints_Type : MD_Constraints_Type {
    #region Private fields
    private MD_ClassificationCode_PropertyType _classification;
    private CharacterString_PropertyType _userNote;
    private CharacterString_PropertyType _classificationSystem;
    private CharacterString_PropertyType _handlingDescription;
    #endregion

    /// <summary>
    /// MD_SecurityConstraints_Type class constructor
    /// </summary>
    public MD_SecurityConstraints_Type() {
      _handlingDescription = new CharacterString_PropertyType();
      _classificationSystem = new CharacterString_PropertyType();
      _userNote = new CharacterString_PropertyType();
      _classification = new MD_ClassificationCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("classification", Order = 0)]
    public MD_ClassificationCode_PropertyType classification {
      get {
        return _classification;
      }
      set {
        if ((_classification == value)) {
          return;
        }
        if (((_classification == null)
                    || (_classification.Equals(value) != true))) {
          _classification = value;
          OnPropertyChanged("classification");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("userNote", Order = 1)]
    public CharacterString_PropertyType userNote {
      get {
        return _userNote;
      }
      set {
        if ((_userNote == value)) {
          return;
        }
        if (((_userNote == null)
                    || (_userNote.Equals(value) != true))) {
          _userNote = value;
          OnPropertyChanged("userNote");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("classificationSystem", Order = 2)]
    public CharacterString_PropertyType classificationSystem {
      get {
        return _classificationSystem;
      }
      set {
        if ((_classificationSystem == value)) {
          return;
        }
        if (((_classificationSystem == null)
                    || (_classificationSystem.Equals(value) != true))) {
          _classificationSystem = value;
          OnPropertyChanged("classificationSystem");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("handlingDescription", Order = 3)]
    public CharacterString_PropertyType handlingDescription {
      get {
        return _handlingDescription;
      }
      set {
        if ((_handlingDescription == value)) {
          return;
        }
        if (((_handlingDescription == null)
                    || (_handlingDescription.Equals(value) != true))) {
          _handlingDescription = value;
          OnPropertyChanged("handlingDescription");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ClassificationCode_PropertyType")]
  public class MD_ClassificationCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_ClassificationCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ClassificationCode_PropertyType class constructor
    /// </summary>
    public MD_ClassificationCode_PropertyType() {
      _mD_ClassificationCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ClassificationCode", Order = 0)]
    public CodeListValue_Type MD_ClassificationCode {
      get {
        return _mD_ClassificationCode;
      }
      set {
        if ((_mD_ClassificationCode == value)) {
          return;
        }
        if (((_mD_ClassificationCode == null)
                    || (_mD_ClassificationCode.Equals(value) != true))) {
          _mD_ClassificationCode = value;
          OnPropertyChanged("MD_ClassificationCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Restrictions and legal prerequisites for accessing and using the dataset.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_LegalConstraints", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_LegalConstraints_Type")]
  public class MD_LegalConstraints_Type : MD_Constraints_Type {
    #region Private fields
    private List<MD_RestrictionCode_PropertyType> _accessConstraints;
    private List<MD_RestrictionCode_PropertyType> _useConstraints;
    private List<CharacterString_PropertyType> _otherConstraints;
    #endregion

    /// <summary>
    /// MD_LegalConstraints_Type class constructor
    /// </summary>
    public MD_LegalConstraints_Type() {
      _otherConstraints = new List<CharacterString_PropertyType>();
      _useConstraints = new List<MD_RestrictionCode_PropertyType>();
      _accessConstraints = new List<MD_RestrictionCode_PropertyType>();
    }

    [XmlElement("accessConstraints", Order = 0)]
    [JsonProperty("accessConstraints", Order = 0)]
    public List<MD_RestrictionCode_PropertyType> accessConstraints {
      get {
        return _accessConstraints;
      }
      set {
        if ((_accessConstraints == value)) {
          return;
        }
        if (((_accessConstraints == null)
                    || (_accessConstraints.Equals(value) != true))) {
          _accessConstraints = value;
          OnPropertyChanged("accessConstraints");
        }
      }
    }

    [XmlElement("useConstraints", Order = 1)]
    [JsonProperty("useConstraints", Order = 1)]
    public List<MD_RestrictionCode_PropertyType> useConstraints {
      get {
        return _useConstraints;
      }
      set {
        if ((_useConstraints == value)) {
          return;
        }
        if (((_useConstraints == null)
                    || (_useConstraints.Equals(value) != true))) {
          _useConstraints = value;
          OnPropertyChanged("useConstraints");
        }
      }
    }

    [XmlElement("otherConstraints", Order = 2)]
    [JsonProperty("otherConstraints", Order = 2)]
    public List<CharacterString_PropertyType> otherConstraints {
      get {
        return _otherConstraints;
      }
      set {
        if ((_otherConstraints == value)) {
          return;
        }
        if (((_otherConstraints == null)
                    || (_otherConstraints.Equals(value) != true))) {
          _otherConstraints = value;
          OnPropertyChanged("otherConstraints");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_RestrictionCode_PropertyType")]
  public class MD_RestrictionCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_RestrictionCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_RestrictionCode_PropertyType class constructor
    /// </summary>
    public MD_RestrictionCode_PropertyType() {
      _mD_RestrictionCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_RestrictionCode", Order = 0)]
    public CodeListValue_Type MD_RestrictionCode {
      get {
        return _mD_RestrictionCode;
      }
      set {
        if ((_mD_RestrictionCode == value)) {
          return;
        }
        if (((_mD_RestrictionCode == null)
                    || (_mD_RestrictionCode.Equals(value) != true))) {
          _mD_RestrictionCode = value;
          OnPropertyChanged("MD_RestrictionCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_AggregateInformation_PropertyType")]
  public class MD_AggregateInformation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_AggregateInformation_Type _mD_AggregateInformation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_AggregateInformation_PropertyType class constructor
    /// </summary>
    public MD_AggregateInformation_PropertyType() {
      _mD_AggregateInformation = new MD_AggregateInformation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_AggregateInformation", Order = 0)]
    public MD_AggregateInformation_Type MD_AggregateInformation {
      get {
        return _mD_AggregateInformation;
      }
      set {
        if ((_mD_AggregateInformation == value)) {
          return;
        }
        if (((_mD_AggregateInformation == null)
                    || (_mD_AggregateInformation.Equals(value) != true))) {
          _mD_AggregateInformation = value;
          OnPropertyChanged("MD_AggregateInformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Encapsulates the dataset aggregation information
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_AggregateInformation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_AggregateInformation_Type")]
  public class MD_AggregateInformation_Type : AbstractObject_Type {
    #region Private fields
    private CI_Citation_PropertyType _aggregateDataSetName;
    private MD_Identifier_PropertyType _aggregateDataSetIdentifier;
    private DS_AssociationTypeCode_PropertyType _associationType;
    private DS_InitiativeTypeCode_PropertyType _initiativeType;
    #endregion

    /// <summary>
    /// MD_AggregateInformation_Type class constructor
    /// </summary>
    public MD_AggregateInformation_Type() {
      _initiativeType = new DS_InitiativeTypeCode_PropertyType();
      _associationType = new DS_AssociationTypeCode_PropertyType();
      _aggregateDataSetIdentifier = new MD_Identifier_PropertyType();
      _aggregateDataSetName = new CI_Citation_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("aggregateDataSetName", Order = 0)]
    public CI_Citation_PropertyType aggregateDataSetName {
      get {
        return _aggregateDataSetName;
      }
      set {
        if ((_aggregateDataSetName == value)) {
          return;
        }
        if (((_aggregateDataSetName == null)
                    || (_aggregateDataSetName.Equals(value) != true))) {
          _aggregateDataSetName = value;
          OnPropertyChanged("aggregateDataSetName");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("aggregateDataSetIdentifier", Order = 1)]
    public MD_Identifier_PropertyType aggregateDataSetIdentifier {
      get {
        return _aggregateDataSetIdentifier;
      }
      set {
        if ((_aggregateDataSetIdentifier == value)) {
          return;
        }
        if (((_aggregateDataSetIdentifier == null)
                    || (_aggregateDataSetIdentifier.Equals(value) != true))) {
          _aggregateDataSetIdentifier = value;
          OnPropertyChanged("aggregateDataSetIdentifier");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("associationType", Order = 2)]
    public DS_AssociationTypeCode_PropertyType associationType {
      get {
        return _associationType;
      }
      set {
        if ((_associationType == value)) {
          return;
        }
        if (((_associationType == null)
                    || (_associationType.Equals(value) != true))) {
          _associationType = value;
          OnPropertyChanged("associationType");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("initiativeType", Order = 3)]
    public DS_InitiativeTypeCode_PropertyType initiativeType {
      get {
        return _initiativeType;
      }
      set {
        if ((_initiativeType == value)) {
          return;
        }
        if (((_initiativeType == null)
                    || (_initiativeType.Equals(value) != true))) {
          _initiativeType = value;
          OnPropertyChanged("initiativeType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_AssociationTypeCode_PropertyType")]
  public class DS_AssociationTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _dS_AssociationTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_AssociationTypeCode_PropertyType class constructor
    /// </summary>
    public DS_AssociationTypeCode_PropertyType() {
      _dS_AssociationTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_AssociationTypeCode", Order = 0)]
    public CodeListValue_Type DS_AssociationTypeCode {
      get {
        return _dS_AssociationTypeCode;
      }
      set {
        if ((_dS_AssociationTypeCode == value)) {
          return;
        }
        if (((_dS_AssociationTypeCode == null)
                    || (_dS_AssociationTypeCode.Equals(value) != true))) {
          _dS_AssociationTypeCode = value;
          OnPropertyChanged("DS_AssociationTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_InitiativeTypeCode_PropertyType")]
  public class DS_InitiativeTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _dS_InitiativeTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_InitiativeTypeCode_PropertyType class constructor
    /// </summary>
    public DS_InitiativeTypeCode_PropertyType() {
      _dS_InitiativeTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_InitiativeTypeCode", Order = 0)]
    public CodeListValue_Type DS_InitiativeTypeCode {
      get {
        return _dS_InitiativeTypeCode;
      }
      set {
        if ((_dS_InitiativeTypeCode == value)) {
          return;
        }
        if (((_dS_InitiativeTypeCode == null)
                    || (_dS_InitiativeTypeCode.Equals(value) != true))) {
          _dS_InitiativeTypeCode = value;
          OnPropertyChanged("DS_InitiativeTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// See 19119 for further info
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ServiceIdentification", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_ServiceIdentification_Type")]
  public class MD_ServiceIdentification_Type : AbstractMD_Identification_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_DataIdentification", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_DataIdentification_Type")]
  public class MD_DataIdentification_Type : AbstractMD_Identification_Type {
    #region Private fields
    private List<MD_SpatialRepresentationTypeCode_PropertyType> _spatialRepresentationType;
    private List<MD_Resolution_PropertyType> _spatialResolution;
    private List<CharacterString_PropertyType> _language;
    private List<MD_CharacterSetCode_PropertyType> _characterSet;
    private List<MD_TopicCategoryCode_PropertyType> _topicCategory;
    private CharacterString_PropertyType _environmentDescription;
    private List<EX_Extent_PropertyType> _extent;
    private CharacterString_PropertyType _supplementalInformation;
    #endregion

    /// <summary>
    /// MD_DataIdentification_Type class constructor
    /// </summary>
    public MD_DataIdentification_Type() {
      _supplementalInformation = new CharacterString_PropertyType();
      _extent = new List<EX_Extent_PropertyType>();
      _environmentDescription = new CharacterString_PropertyType();
      _topicCategory = new List<MD_TopicCategoryCode_PropertyType>();
      _characterSet = new List<MD_CharacterSetCode_PropertyType>();
      _language = new List<CharacterString_PropertyType>();
      _spatialResolution = new List<MD_Resolution_PropertyType>();
      _spatialRepresentationType = new List<MD_SpatialRepresentationTypeCode_PropertyType>();
    }

    [XmlElement("spatialRepresentationType", Order = 0)]
    [JsonProperty("spatialRepresentationType", Order = 0)]
    public List<MD_SpatialRepresentationTypeCode_PropertyType> spatialRepresentationType {
      get {
        return _spatialRepresentationType;
      }
      set {
        if ((_spatialRepresentationType == value)) {
          return;
        }
        if (((_spatialRepresentationType == null)
                    || (_spatialRepresentationType.Equals(value) != true))) {
          _spatialRepresentationType = value;
          OnPropertyChanged("spatialRepresentationType");
        }
      }
    }

    [XmlElement("spatialResolution", Order = 1)]
    [JsonProperty("spatialResolution", Order = 1)]
    public List<MD_Resolution_PropertyType> spatialResolution {
      get {
        return _spatialResolution;
      }
      set {
        if ((_spatialResolution == value)) {
          return;
        }
        if (((_spatialResolution == null)
                    || (_spatialResolution.Equals(value) != true))) {
          _spatialResolution = value;
          OnPropertyChanged("spatialResolution");
        }
      }
    }

    [XmlElement("language", Order = 2)]
    [JsonProperty("language", Order = 2)]
    public List<CharacterString_PropertyType> language {
      get {
        return _language;
      }
      set {
        if ((_language == value)) {
          return;
        }
        if (((_language == null)
                    || (_language.Equals(value) != true))) {
          _language = value;
          OnPropertyChanged("language");
        }
      }
    }

    [XmlElement("characterSet", Order = 3)]
    [JsonProperty("characterSet", Order = 3)]
    public List<MD_CharacterSetCode_PropertyType> characterSet {
      get {
        return _characterSet;
      }
      set {
        if ((_characterSet == value)) {
          return;
        }
        if (((_characterSet == null)
                    || (_characterSet.Equals(value) != true))) {
          _characterSet = value;
          OnPropertyChanged("characterSet");
        }
      }
    }

    [XmlElement("topicCategory", Order = 4)]
    [JsonProperty("topicCategory", Order = 4)]
    public List<MD_TopicCategoryCode_PropertyType> topicCategory {
      get {
        return _topicCategory;
      }
      set {
        if ((_topicCategory == value)) {
          return;
        }
        if (((_topicCategory == null)
                    || (_topicCategory.Equals(value) != true))) {
          _topicCategory = value;
          OnPropertyChanged("topicCategory");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("environmentDescription", Order = 5)]
    public CharacterString_PropertyType environmentDescription {
      get {
        return _environmentDescription;
      }
      set {
        if ((_environmentDescription == value)) {
          return;
        }
        if (((_environmentDescription == null)
                    || (_environmentDescription.Equals(value) != true))) {
          _environmentDescription = value;
          OnPropertyChanged("environmentDescription");
        }
      }
    }

    [XmlElement("extent", Order = 6)]
    [JsonProperty("extent", Order = 6)]
    public List<EX_Extent_PropertyType> extent {
      get {
        return _extent;
      }
      set {
        if ((_extent == value)) {
          return;
        }
        if (((_extent == null)
                    || (_extent.Equals(value) != true))) {
          _extent = value;
          OnPropertyChanged("extent");
        }
      }
    }

    [XmlElement(Order = 7)]
    [JsonProperty("supplementalInformation", Order = 7)]
    public CharacterString_PropertyType supplementalInformation {
      get {
        return _supplementalInformation;
      }
      set {
        if ((_supplementalInformation == value)) {
          return;
        }
        if (((_supplementalInformation == null)
                    || (_supplementalInformation.Equals(value) != true))) {
          _supplementalInformation = value;
          OnPropertyChanged("supplementalInformation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_SpatialRepresentationTypeCode_PropertyType")]
  public class MD_SpatialRepresentationTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_SpatialRepresentationTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_SpatialRepresentationTypeCode_PropertyType class constructor
    /// </summary>
    public MD_SpatialRepresentationTypeCode_PropertyType() {
      _mD_SpatialRepresentationTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_SpatialRepresentationTypeCode", Order = 0)]
    public CodeListValue_Type MD_SpatialRepresentationTypeCode {
      get {
        return _mD_SpatialRepresentationTypeCode;
      }
      set {
        if ((_mD_SpatialRepresentationTypeCode == value)) {
          return;
        }
        if (((_mD_SpatialRepresentationTypeCode == null)
                    || (_mD_SpatialRepresentationTypeCode.Equals(value) != true))) {
          _mD_SpatialRepresentationTypeCode = value;
          OnPropertyChanged("MD_SpatialRepresentationTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Resolution_PropertyType")]
  public class MD_Resolution_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Resolution_Type _mD_Resolution;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Resolution_PropertyType class constructor
    /// </summary>
    public MD_Resolution_PropertyType() {
      _mD_Resolution = new MD_Resolution_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Resolution", Order = 0)]
    public MD_Resolution_Type MD_Resolution {
      get {
        return _mD_Resolution;
      }
      set {
        if ((_mD_Resolution == value)) {
          return;
        }
        if (((_mD_Resolution == null)
                    || (_mD_Resolution.Equals(value) != true))) {
          _mD_Resolution = value;
          OnPropertyChanged("MD_Resolution");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Resolution", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Resolution_Type")]
  public class MD_Resolution_Type : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("distance", typeof(Distance_PropertyType), Order = 0)]
    [XmlElement("equivalentScale", typeof(MD_RepresentativeFraction_PropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Distance_PropertyType")]
  public class Distance_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private LengthType _distance;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Distance_PropertyType class constructor
    /// </summary>
    public Distance_PropertyType() {
      _distance = new LengthType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Distance", Order = 0)]
    public LengthType Distance {
      get {
        return _distance;
      }
      set {
        if ((_distance == value)) {
          return;
        }
        if (((_distance == null)
                    || (_distance.Equals(value) != true))) {
          _distance = value;
          OnPropertyChanged("Distance");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_RepresentativeFraction_PropertyType")]
  public class MD_RepresentativeFraction_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_RepresentativeFraction_Type _mD_RepresentativeFraction;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_RepresentativeFraction_PropertyType class constructor
    /// </summary>
    public MD_RepresentativeFraction_PropertyType() {
      _mD_RepresentativeFraction = new MD_RepresentativeFraction_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_RepresentativeFraction", Order = 0)]
    public MD_RepresentativeFraction_Type MD_RepresentativeFraction {
      get {
        return _mD_RepresentativeFraction;
      }
      set {
        if ((_mD_RepresentativeFraction == value)) {
          return;
        }
        if (((_mD_RepresentativeFraction == null)
                    || (_mD_RepresentativeFraction.Equals(value) != true))) {
          _mD_RepresentativeFraction = value;
          OnPropertyChanged("MD_RepresentativeFraction");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_RepresentativeFraction", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_RepresentativeFraction_Type")]
  public class MD_RepresentativeFraction_Type : AbstractObject_Type {
    #region Private fields
    private Integer_PropertyType _denominator;
    #endregion

    /// <summary>
    /// MD_RepresentativeFraction_Type class constructor
    /// </summary>
    public MD_RepresentativeFraction_Type() {
      _denominator = new Integer_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("denominator", Order = 0)]
    public Integer_PropertyType denominator {
      get {
        return _denominator;
      }
      set {
        if ((_denominator == value)) {
          return;
        }
        if (((_denominator == null)
                    || (_denominator.Equals(value) != true))) {
          _denominator = value;
          OnPropertyChanged("denominator");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_TopicCategoryCode_PropertyType")]
  public class MD_TopicCategoryCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_TopicCategoryCode_Type _mD_TopicCategoryCode;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("MD_TopicCategoryCode", Order = 0)]
    public MD_TopicCategoryCode_Type MD_TopicCategoryCode {
      get {
        return _mD_TopicCategoryCode;
      }
      set {
        if ((_mD_TopicCategoryCode.Equals(value) != true)) {
          _mD_TopicCategoryCode = value;
          OnPropertyChanged("MD_TopicCategoryCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_TopicCategoryCode", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  public enum MD_TopicCategoryCode_Type {
    farming,
    biota,
    boundaries,
    climatologyMeteorologyAtmosphere,
    economy,
    elevation,
    environment,
    geoscientificInformation,
    health,
    imageryBaseMapsEarthCover,
    intelligenceMilitary,
    inlandWaters,
    location,
    oceans,
    planningCadastre,
    society,
    structure,
    transportation,
    utilitiesCommunication,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_Extent_PropertyType")]
  public class EX_Extent_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_Extent_Type _eX_Extent;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_Extent_PropertyType class constructor
    /// </summary>
    public EX_Extent_PropertyType() {
      _eX_Extent = new EX_Extent_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_Extent", Order = 0)]
    public EX_Extent_Type EX_Extent {
      get {
        return _eX_Extent;
      }
      set {
        if ((_eX_Extent == value)) {
          return;
        }
        if (((_eX_Extent == null)
                    || (_eX_Extent.Equals(value) != true))) {
          _eX_Extent = value;
          OnPropertyChanged("EX_Extent");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ContentInformation_PropertyType")]
  public class MD_ContentInformation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractMD_ContentInformation_Type _abstractMD_ContentInformation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractMD_ContentInformation", Order = 0)]
    public AbstractMD_ContentInformation_Type AbstractMD_ContentInformation {
      get {
        return _abstractMD_ContentInformation;
      }
      set {
        if ((_abstractMD_ContentInformation == value)) {
          return;
        }
        if (((_abstractMD_ContentInformation == null)
                    || (_abstractMD_ContentInformation.Equals(value) != true))) {
          _abstractMD_ContentInformation = value;
          OnPropertyChanged("AbstractMD_ContentInformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(MD_CoverageDescription_Type))]
  [XmlInclude(typeof(MD_ImageDescription_Type))]
  [XmlInclude(typeof(MD_FeatureCatalogueDescription_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractMD_ContentInformation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractMD_ContentInformation_Type")]
  public abstract class AbstractMD_ContentInformation_Type : AbstractObject_Type {
  }

  /// <summary>
  /// Information about the domain of the raster cell
  /// </summary>
  [XmlInclude(typeof(MD_ImageDescription_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_CoverageDescription", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_CoverageDescription_Type")]
  public class MD_CoverageDescription_Type : AbstractMD_ContentInformation_Type {
    #region Private fields
    private RecordType_PropertyType _attributeDescription;
    private MD_CoverageContentTypeCode_PropertyType _contentType;
    private List<MD_RangeDimension_PropertyType> _dimension;
    #endregion

    /// <summary>
    /// MD_CoverageDescription_Type class constructor
    /// </summary>
    public MD_CoverageDescription_Type() {
      _dimension = new List<MD_RangeDimension_PropertyType>();
      _contentType = new MD_CoverageContentTypeCode_PropertyType();
      _attributeDescription = new RecordType_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("attributeDescription", Order = 0)]
    public RecordType_PropertyType attributeDescription {
      get {
        return _attributeDescription;
      }
      set {
        if ((_attributeDescription == value)) {
          return;
        }
        if (((_attributeDescription == null)
                    || (_attributeDescription.Equals(value) != true))) {
          _attributeDescription = value;
          OnPropertyChanged("attributeDescription");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("contentType", Order = 1)]
    public MD_CoverageContentTypeCode_PropertyType contentType {
      get {
        return _contentType;
      }
      set {
        if ((_contentType == value)) {
          return;
        }
        if (((_contentType == null)
                    || (_contentType.Equals(value) != true))) {
          _contentType = value;
          OnPropertyChanged("contentType");
        }
      }
    }

    [XmlElement("dimension", Order = 2)]
    [JsonProperty("dimension", Order = 2)]
    public List<MD_RangeDimension_PropertyType> dimension {
      get {
        return _dimension;
      }
      set {
        if ((_dimension == value)) {
          return;
        }
        if (((_dimension == null)
                    || (_dimension.Equals(value) != true))) {
          _dimension = value;
          OnPropertyChanged("dimension");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("RecordType_PropertyType")]
  public class RecordType_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private RecordType_Type _recordType;
    private string _nilReason;
    #endregion

    /// <summary>
    /// RecordType_PropertyType class constructor
    /// </summary>
    public RecordType_PropertyType() {
      _recordType = new RecordType_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("RecordType", Order = 0)]
    public RecordType_Type RecordType {
      get {
        return _recordType;
      }
      set {
        if ((_recordType == value)) {
          return;
        }
        if (((_recordType == null)
                    || (_recordType.Equals(value) != true))) {
          _recordType = value;
          OnPropertyChanged("RecordType");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("RecordType_Type")]
  public class RecordType_Type : INotifyPropertyChanged {
    #region Private fields
    private string _type;
    private string _href;
    private string _role;
    private string _arcrole;
    private string _title;
    private RecordType_TypeShow _show;
    private RecordType_TypeActuate _actuate;
    private string _value;
    #endregion

    /// <summary>
    /// RecordType_Type class constructor
    /// </summary>
    public RecordType_Type() {
      _type = "simple";
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink")]
    public string type {
      get {
        return _type;
      }
      set {
        if ((_type == value)) {
          return;
        }
        if (((_type == null)
                    || (_type.Equals(value) != true))) {
          _type = value;
          OnPropertyChanged("type");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink", DataType = "anyURI")]
    [JsonProperty("href")]
    public string href {
      get {
        return _href;
      }
      set {
        if ((_href == value)) {
          return;
        }
        if (((_href == null)
                    || (_href.Equals(value) != true))) {
          _href = value;
          OnPropertyChanged("href");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink", DataType = "anyURI")]
    public string role {
      get {
        return _role;
      }
      set {
        if ((_role == value)) {
          return;
        }
        if (((_role == null)
                    || (_role.Equals(value) != true))) {
          _role = value;
          OnPropertyChanged("role");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink", DataType = "anyURI")]
    [JsonProperty("arcrole")]
    public string arcrole {
      get {
        return _arcrole;
      }
      set {
        if ((_arcrole == value)) {
          return;
        }
        if (((_arcrole == null)
                    || (_arcrole.Equals(value) != true))) {
          _arcrole = value;
          OnPropertyChanged("arcrole");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink")]
    public string title {
      get {
        return _title;
      }
      set {
        if ((_title == value)) {
          return;
        }
        if (((_title == null)
                    || (_title.Equals(value) != true))) {
          _title = value;
          OnPropertyChanged("title");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink")]
    [JsonProperty("show")]
    public RecordType_TypeShow show {
      get {
        return _show;
      }
      set {
        if ((_show.Equals(value) != true)) {
          _show = value;
          OnPropertyChanged("show");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink")]
    [JsonProperty("actuate")]
    public RecordType_TypeActuate actuate {
      get {
        return _actuate;
      }
      set {
        if ((_actuate.Equals(value) != true)) {
          _actuate = value;
          OnPropertyChanged("actuate");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.w3.org/1999/xlink")]
  public enum RecordType_TypeShow {
    @new,
    replace,
    embed,
    other,
    none,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.w3.org/1999/xlink")]
  public enum RecordType_TypeActuate {
    onLoad,
    onRequest,
    other,
    none,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_CoverageContentTypeCode_PropertyType")]
  public class MD_CoverageContentTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_CoverageContentTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_CoverageContentTypeCode_PropertyType class constructor
    /// </summary>
    public MD_CoverageContentTypeCode_PropertyType() {
      _mD_CoverageContentTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_CoverageContentTypeCode", Order = 0)]
    public CodeListValue_Type MD_CoverageContentTypeCode {
      get {
        return _mD_CoverageContentTypeCode;
      }
      set {
        if ((_mD_CoverageContentTypeCode == value)) {
          return;
        }
        if (((_mD_CoverageContentTypeCode == null)
                    || (_mD_CoverageContentTypeCode.Equals(value) != true))) {
          _mD_CoverageContentTypeCode = value;
          OnPropertyChanged("MD_CoverageContentTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_RangeDimension_PropertyType")]
  public class MD_RangeDimension_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_RangeDimension_Type _mD_RangeDimension;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_RangeDimension_PropertyType class constructor
    /// </summary>
    public MD_RangeDimension_PropertyType() {
      _mD_RangeDimension = new MD_RangeDimension_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_RangeDimension", Order = 0)]
    public MD_RangeDimension_Type MD_RangeDimension {
      get {
        return _mD_RangeDimension;
      }
      set {
        if ((_mD_RangeDimension == value)) {
          return;
        }
        if (((_mD_RangeDimension == null)
                    || (_mD_RangeDimension.Equals(value) != true))) {
          _mD_RangeDimension = value;
          OnPropertyChanged("MD_RangeDimension");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
  /// </summary>
  [XmlInclude(typeof(MD_Band_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_RangeDimension", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_RangeDimension_Type")]
  public class MD_RangeDimension_Type : AbstractObject_Type {
    #region Private fields
    private MemberName_PropertyType _sequenceIdentifier;
    private CharacterString_PropertyType _descriptor;
    #endregion

    /// <summary>
    /// MD_RangeDimension_Type class constructor
    /// </summary>
    public MD_RangeDimension_Type() {
      _descriptor = new CharacterString_PropertyType();
      _sequenceIdentifier = new MemberName_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("sequenceIdentifier", Order = 0)]
    public MemberName_PropertyType sequenceIdentifier {
      get {
        return _sequenceIdentifier;
      }
      set {
        if ((_sequenceIdentifier == value)) {
          return;
        }
        if (((_sequenceIdentifier == null)
                    || (_sequenceIdentifier.Equals(value) != true))) {
          _sequenceIdentifier = value;
          OnPropertyChanged("sequenceIdentifier");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("descriptor", Order = 1)]
    public CharacterString_PropertyType descriptor {
      get {
        return _descriptor;
      }
      set {
        if ((_descriptor == value)) {
          return;
        }
        if (((_descriptor == null)
                    || (_descriptor.Equals(value) != true))) {
          _descriptor = value;
          OnPropertyChanged("descriptor");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("MemberName_PropertyType")]
  public class MemberName_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MemberName_Type _memberName;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MemberName_PropertyType class constructor
    /// </summary>
    public MemberName_PropertyType() {
      _memberName = new MemberName_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MemberName", Order = 0)]
    public MemberName_Type MemberName {
      get {
        return _memberName;
      }
      set {
        if ((_memberName == value)) {
          return;
        }
        if (((_memberName == null)
                    || (_memberName.Equals(value) != true))) {
          _memberName = value;
          OnPropertyChanged("MemberName");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A MemberName is a LocalName that references either an attribute slot in a record or  recordType or an attribute, operation, or association role in an object instance or  type description in some form of schema. The stored value "aName" is the returned value for the "aName()" operation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("MemberName_Type")]
  public class MemberName_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _aName;
    private TypeName_PropertyType _attributeType;
    #endregion

    /// <summary>
    /// MemberName_Type class constructor
    /// </summary>
    public MemberName_Type() {
      _attributeType = new TypeName_PropertyType();
      _aName = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("aName", Order = 0)]
    public CharacterString_PropertyType aName {
      get {
        return _aName;
      }
      set {
        if ((_aName == value)) {
          return;
        }
        if (((_aName == null)
                    || (_aName.Equals(value) != true))) {
          _aName = value;
          OnPropertyChanged("aName");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("attributeType", Order = 1)]
    public TypeName_PropertyType attributeType {
      get {
        return _attributeType;
      }
      set {
        if ((_attributeType == value)) {
          return;
        }
        if (((_attributeType == null)
                    || (_attributeType.Equals(value) != true))) {
          _attributeType = value;
          OnPropertyChanged("attributeType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("TypeName_PropertyType")]
  public class TypeName_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private TypeName_Type _typeName;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// TypeName_PropertyType class constructor
    /// </summary>
    public TypeName_PropertyType() {
      _typeName = new TypeName_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TypeName", Order = 0)]
    public TypeName_Type TypeName {
      get {
        return _typeName;
      }
      set {
        if ((_typeName == value)) {
          return;
        }
        if (((_typeName == null)
                    || (_typeName.Equals(value) != true))) {
          _typeName = value;
          OnPropertyChanged("TypeName");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A TypeName is a LocalName that references either a recordType or object type in some form of schema. The stored value "aName" is the returned value for the "aName()" operation. This is the types name.  - For parsing from types (or objects) the parsible name normally uses a "." navigation separator, so that it is of the form  [class].[member].[memberOfMember]. ...)
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("TypeName_Type")]
  public class TypeName_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _aName;
    #endregion

    /// <summary>
    /// TypeName_Type class constructor
    /// </summary>
    public TypeName_Type() {
      _aName = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("aName", Order = 0)]
    public CharacterString_PropertyType aName {
      get {
        return _aName;
      }
      set {
        if ((_aName == value)) {
          return;
        }
        if (((_aName == null)
                    || (_aName.Equals(value) != true))) {
          _aName = value;
          OnPropertyChanged("aName");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Band", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Band_Type")]
  public class MD_Band_Type : MD_RangeDimension_Type {
    #region Private fields
    private Real_PropertyType _maxValue;
    private Real_PropertyType _minValue;
    private UomLength_PropertyType _units;
    private Real_PropertyType _peakResponse;
    private Integer_PropertyType _bitsPerValue;
    private Integer_PropertyType _toneGradation;
    private Real_PropertyType _scaleFactor;
    private Real_PropertyType _offset;
    #endregion

    /// <summary>
    /// MD_Band_Type class constructor
    /// </summary>
    public MD_Band_Type() {
      _offset = new Real_PropertyType();
      _scaleFactor = new Real_PropertyType();
      _toneGradation = new Integer_PropertyType();
      _bitsPerValue = new Integer_PropertyType();
      _peakResponse = new Real_PropertyType();
      _units = new UomLength_PropertyType();
      _minValue = new Real_PropertyType();
      _maxValue = new Real_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("maxValue", Order = 0)]
    public Real_PropertyType maxValue {
      get {
        return _maxValue;
      }
      set {
        if ((_maxValue == value)) {
          return;
        }
        if (((_maxValue == null)
                    || (_maxValue.Equals(value) != true))) {
          _maxValue = value;
          OnPropertyChanged("maxValue");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("minValue", Order = 1)]
    public Real_PropertyType minValue {
      get {
        return _minValue;
      }
      set {
        if ((_minValue == value)) {
          return;
        }
        if (((_minValue == null)
                    || (_minValue.Equals(value) != true))) {
          _minValue = value;
          OnPropertyChanged("minValue");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("units", Order = 2)]
    public UomLength_PropertyType units {
      get {
        return _units;
      }
      set {
        if ((_units == value)) {
          return;
        }
        if (((_units == null)
                    || (_units.Equals(value) != true))) {
          _units = value;
          OnPropertyChanged("units");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("peakResponse", Order = 3)]
    public Real_PropertyType peakResponse {
      get {
        return _peakResponse;
      }
      set {
        if ((_peakResponse == value)) {
          return;
        }
        if (((_peakResponse == null)
                    || (_peakResponse.Equals(value) != true))) {
          _peakResponse = value;
          OnPropertyChanged("peakResponse");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("bitsPerValue", Order = 4)]
    public Integer_PropertyType bitsPerValue {
      get {
        return _bitsPerValue;
      }
      set {
        if ((_bitsPerValue == value)) {
          return;
        }
        if (((_bitsPerValue == null)
                    || (_bitsPerValue.Equals(value) != true))) {
          _bitsPerValue = value;
          OnPropertyChanged("bitsPerValue");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("toneGradation", Order = 5)]
    public Integer_PropertyType toneGradation {
      get {
        return _toneGradation;
      }
      set {
        if ((_toneGradation == value)) {
          return;
        }
        if (((_toneGradation == null)
                    || (_toneGradation.Equals(value) != true))) {
          _toneGradation = value;
          OnPropertyChanged("toneGradation");
        }
      }
    }

    [XmlElement(Order = 6)]
    [JsonProperty("scaleFactor", Order = 6)]
    public Real_PropertyType scaleFactor {
      get {
        return _scaleFactor;
      }
      set {
        if ((_scaleFactor == value)) {
          return;
        }
        if (((_scaleFactor == null)
                    || (_scaleFactor.Equals(value) != true))) {
          _scaleFactor = value;
          OnPropertyChanged("scaleFactor");
        }
      }
    }

    [XmlElement(Order = 7)]
    [JsonProperty("offset", Order = 7)]
    public Real_PropertyType offset {
      get {
        return _offset;
      }
      set {
        if ((_offset == value)) {
          return;
        }
        if (((_offset == null)
                    || (_offset.Equals(value) != true))) {
          _offset = value;
          OnPropertyChanged("offset");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomLength_PropertyType")]
  public class UomLength_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomLength_PropertyType class constructor
    /// </summary>
    public UomLength_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(ConventionalUnitType))]
  [XmlInclude(typeof(DerivedUnitType))]
  [XmlInclude(typeof(BaseUnitType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("UnitDefinitionType")]
  public class UnitDefinitionType : DefinitionType {
    #region Private fields
    private StringOrRefType _quantityType;
    private ReferenceType _quantityTypeReference;
    private CodeType _catalogSymbol;
    #endregion

    /// <summary>
    /// UnitDefinitionType class constructor
    /// </summary>
    public UnitDefinitionType() {
      _catalogSymbol = new CodeType();
      _quantityTypeReference = new ReferenceType();
      _quantityType = new StringOrRefType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("quantityType", Order = 0)]
    public StringOrRefType quantityType {
      get {
        return _quantityType;
      }
      set {
        if ((_quantityType == value)) {
          return;
        }
        if (((_quantityType == null)
                    || (_quantityType.Equals(value) != true))) {
          _quantityType = value;
          OnPropertyChanged("quantityType");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("quantityTypeReference", Order = 1)]
    public ReferenceType quantityTypeReference {
      get {
        return _quantityTypeReference;
      }
      set {
        if ((_quantityTypeReference == value)) {
          return;
        }
        if (((_quantityTypeReference == null)
                    || (_quantityTypeReference.Equals(value) != true))) {
          _quantityTypeReference = value;
          OnPropertyChanged("quantityTypeReference");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("catalogSymbol", Order = 2)]
    public CodeType catalogSymbol {
      get {
        return _catalogSymbol;
      }
      set {
        if ((_catalogSymbol == value)) {
          return;
        }
        if (((_catalogSymbol == null)
                    || (_catalogSymbol.Equals(value) != true))) {
          _catalogSymbol = value;
          OnPropertyChanged("catalogSymbol");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConventionalUnitType")]
  public class ConventionalUnitType : UnitDefinitionType {
    #region Private fields
    private ConversionToPreferredUnitType _item;
    private ItemChoiceType _itemElementName;
    private List<DerivationUnitTermType> _derivationUnitTerm;
    #endregion

    /// <summary>
    /// ConventionalUnitType class constructor
    /// </summary>
    public ConventionalUnitType() {
      _derivationUnitTerm = new List<DerivationUnitTermType>();
    }

    [XmlElement("conversionToPreferredUnit", typeof(ConversionToPreferredUnitType), Order = 0)]
    [XmlElement("roughConversionToPreferredUnit", typeof(ConversionToPreferredUnitType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemElementName")]
    public ConversionToPreferredUnitType Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [XmlIgnore]
    public ItemChoiceType ItemElementName {
      get {
        return _itemElementName;
      }
      set {
        if ((_itemElementName.Equals(value) != true)) {
          _itemElementName = value;
          OnPropertyChanged("ItemElementName");
        }
      }
    }

    [XmlElement("derivationUnitTerm", Order = 2)]
    [JsonProperty("derivationUnitTerm", Order = 2)]
    public List<DerivationUnitTermType> derivationUnitTerm {
      get {
        return _derivationUnitTerm;
      }
      set {
        if ((_derivationUnitTerm == value)) {
          return;
        }
        if (((_derivationUnitTerm == null)
                    || (_derivationUnitTerm.Equals(value) != true))) {
          _derivationUnitTerm = value;
          OnPropertyChanged("derivationUnitTerm");
        }
      }
    }
  }

  /// <summary>
  /// The inherited attribute uom references the preferred unit that this conversion applies to. The conversion of a unit to the preferred unit for this physical quantity type is specified by an arithmetic conversion (scaling and/or offset). The content model extends gml:UnitOfMeasureType, which has a mandatory attribute uom which identifies the preferred unit for the physical quantity type that this conversion applies to. The conversion is specified by a choice of
  /// -	gml:factor, which defines the scale factor, or
  /// -	gml:formula, which defines a formula
  /// by which a value using the conventional unit of measure can be converted to obtain the corresponding value using the preferred unit of measure.
  /// The formula defines the parameters of a simple formula by which a value using the conventional unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type double. These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the base unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConversionToPreferredUnitType")]
  public class ConversionToPreferredUnitType : UnitOfMeasureType {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("factor", typeof(double), Order = 0)]
    [XmlElement("formula", typeof(FormulaType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("FormulaType")]
  public class FormulaType : INotifyPropertyChanged {
    #region Private fields
    private double _a;
    private double _b;
    private double _c;
    private double _d;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("a", Order = 0)]
    public double a {
      get {
        return _a;
      }
      set {
        if ((_a.Equals(value) != true)) {
          _a = value;
          OnPropertyChanged("a");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("b", Order = 1)]
    public double b {
      get {
        return _b;
      }
      set {
        if ((_b.Equals(value) != true)) {
          _b = value;
          OnPropertyChanged("b");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("c", Order = 2)]
    public double c {
      get {
        return _c;
      }
      set {
        if ((_c.Equals(value) != true)) {
          _c = value;
          OnPropertyChanged("c");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("d", Order = 3)]
    public double d {
      get {
        return _d;
      }
      set {
        if ((_d.Equals(value) != true)) {
          _d = value;
          OnPropertyChanged("d");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(ConversionToPreferredUnitType))]
  [XmlInclude(typeof(DerivationUnitTermType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("UnitOfMeasureType")]
  public class UnitOfMeasureType : INotifyPropertyChanged {
    #region Private fields
    private string _uom;
    #endregion

    [XmlAttribute]
    [JsonProperty("uom")]
    public string uom {
      get {
        return _uom;
      }
      set {
        if ((_uom == value)) {
          return;
        }
        if (((_uom == null)
                    || (_uom.Equals(value) != true))) {
          _uom = value;
          OnPropertyChanged("uom");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DerivationUnitTermType")]
  public class DerivationUnitTermType : UnitOfMeasureType {
    #region Private fields
    private string _exponent;
    #endregion

    [XmlAttribute(DataType = "integer")]
    [JsonProperty("exponent")]
    public string exponent {
      get {
        return _exponent;
      }
      set {
        if ((_exponent == value)) {
          return;
        }
        if (((_exponent == null)
                    || (_exponent.Equals(value) != true))) {
          _exponent = value;
          OnPropertyChanged("exponent");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemChoiceType {
    conversionToPreferredUnit,
    roughConversionToPreferredUnit,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DerivedUnitType")]
  public class DerivedUnitType : UnitDefinitionType {
    #region Private fields
    private List<DerivationUnitTermType> _derivationUnitTerm;
    #endregion

    /// <summary>
    /// DerivedUnitType class constructor
    /// </summary>
    public DerivedUnitType() {
      _derivationUnitTerm = new List<DerivationUnitTermType>();
    }

    [XmlElement("derivationUnitTerm", Order = 0)]
    [JsonProperty("derivationUnitTerm", Order = 0)]
    public List<DerivationUnitTermType> derivationUnitTerm {
      get {
        return _derivationUnitTerm;
      }
      set {
        if ((_derivationUnitTerm == value)) {
          return;
        }
        if (((_derivationUnitTerm == null)
                    || (_derivationUnitTerm.Equals(value) != true))) {
          _derivationUnitTerm = value;
          OnPropertyChanged("derivationUnitTerm");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BaseUnitType")]
  public class BaseUnitType : UnitDefinitionType {
    #region Private fields
    private ReferenceType _unitsSystem;
    #endregion

    /// <summary>
    /// BaseUnitType class constructor
    /// </summary>
    public BaseUnitType() {
      _unitsSystem = new ReferenceType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("unitsSystem", Order = 0)]
    public ReferenceType unitsSystem {
      get {
        return _unitsSystem;
      }
      set {
        if ((_unitsSystem == value)) {
          return;
        }
        if (((_unitsSystem == null)
                    || (_unitsSystem.Equals(value) != true))) {
          _unitsSystem = value;
          OnPropertyChanged("unitsSystem");
        }
      }
    }
  }

  /// <summary>
  /// Information about an image's suitability for use
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ImageDescription", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_ImageDescription_Type")]
  public class MD_ImageDescription_Type : MD_CoverageDescription_Type {
    #region Private fields
    private Real_PropertyType _illuminationElevationAngle;
    private Real_PropertyType _illuminationAzimuthAngle;
    private MD_ImagingConditionCode_PropertyType _imagingCondition;
    private MD_Identifier_PropertyType _imageQualityCode;
    private Real_PropertyType _cloudCoverPercentage;
    private MD_Identifier_PropertyType _processingLevelCode;
    private Integer_PropertyType _compressionGenerationQuantity;
    private Boolean_PropertyType _triangulationIndicator;
    private Boolean_PropertyType _radiometricCalibrationDataAvailability;
    private Boolean_PropertyType _cameraCalibrationInformationAvailability;
    private Boolean_PropertyType _filmDistortionInformationAvailability;
    private Boolean_PropertyType _lensDistortionInformationAvailability;
    #endregion

    /// <summary>
    /// MD_ImageDescription_Type class constructor
    /// </summary>
    public MD_ImageDescription_Type() {
      _lensDistortionInformationAvailability = new Boolean_PropertyType();
      _filmDistortionInformationAvailability = new Boolean_PropertyType();
      _cameraCalibrationInformationAvailability = new Boolean_PropertyType();
      _radiometricCalibrationDataAvailability = new Boolean_PropertyType();
      _triangulationIndicator = new Boolean_PropertyType();
      _compressionGenerationQuantity = new Integer_PropertyType();
      _processingLevelCode = new MD_Identifier_PropertyType();
      _cloudCoverPercentage = new Real_PropertyType();
      _imageQualityCode = new MD_Identifier_PropertyType();
      _imagingCondition = new MD_ImagingConditionCode_PropertyType();
      _illuminationAzimuthAngle = new Real_PropertyType();
      _illuminationElevationAngle = new Real_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("illuminationElevationAngle", Order = 0)]
    public Real_PropertyType illuminationElevationAngle {
      get {
        return _illuminationElevationAngle;
      }
      set {
        if ((_illuminationElevationAngle == value)) {
          return;
        }
        if (((_illuminationElevationAngle == null)
                    || (_illuminationElevationAngle.Equals(value) != true))) {
          _illuminationElevationAngle = value;
          OnPropertyChanged("illuminationElevationAngle");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("illuminationAzimuthAngle", Order = 1)]
    public Real_PropertyType illuminationAzimuthAngle {
      get {
        return _illuminationAzimuthAngle;
      }
      set {
        if ((_illuminationAzimuthAngle == value)) {
          return;
        }
        if (((_illuminationAzimuthAngle == null)
                    || (_illuminationAzimuthAngle.Equals(value) != true))) {
          _illuminationAzimuthAngle = value;
          OnPropertyChanged("illuminationAzimuthAngle");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("imagingCondition", Order = 2)]
    public MD_ImagingConditionCode_PropertyType imagingCondition {
      get {
        return _imagingCondition;
      }
      set {
        if ((_imagingCondition == value)) {
          return;
        }
        if (((_imagingCondition == null)
                    || (_imagingCondition.Equals(value) != true))) {
          _imagingCondition = value;
          OnPropertyChanged("imagingCondition");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("imageQualityCode", Order = 3)]
    public MD_Identifier_PropertyType imageQualityCode {
      get {
        return _imageQualityCode;
      }
      set {
        if ((_imageQualityCode == value)) {
          return;
        }
        if (((_imageQualityCode == null)
                    || (_imageQualityCode.Equals(value) != true))) {
          _imageQualityCode = value;
          OnPropertyChanged("imageQualityCode");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("cloudCoverPercentage", Order = 4)]
    public Real_PropertyType cloudCoverPercentage {
      get {
        return _cloudCoverPercentage;
      }
      set {
        if ((_cloudCoverPercentage == value)) {
          return;
        }
        if (((_cloudCoverPercentage == null)
                    || (_cloudCoverPercentage.Equals(value) != true))) {
          _cloudCoverPercentage = value;
          OnPropertyChanged("cloudCoverPercentage");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("processingLevelCode", Order = 5)]
    public MD_Identifier_PropertyType processingLevelCode {
      get {
        return _processingLevelCode;
      }
      set {
        if ((_processingLevelCode == value)) {
          return;
        }
        if (((_processingLevelCode == null)
                    || (_processingLevelCode.Equals(value) != true))) {
          _processingLevelCode = value;
          OnPropertyChanged("processingLevelCode");
        }
      }
    }

    [XmlElement(Order = 6)]
    [JsonProperty("compressionGenerationQuantity", Order = 6)]
    public Integer_PropertyType compressionGenerationQuantity {
      get {
        return _compressionGenerationQuantity;
      }
      set {
        if ((_compressionGenerationQuantity == value)) {
          return;
        }
        if (((_compressionGenerationQuantity == null)
                    || (_compressionGenerationQuantity.Equals(value) != true))) {
          _compressionGenerationQuantity = value;
          OnPropertyChanged("compressionGenerationQuantity");
        }
      }
    }

    [XmlElement(Order = 7)]
    [JsonProperty("triangulationIndicator", Order = 7)]
    public Boolean_PropertyType triangulationIndicator {
      get {
        return _triangulationIndicator;
      }
      set {
        if ((_triangulationIndicator == value)) {
          return;
        }
        if (((_triangulationIndicator == null)
                    || (_triangulationIndicator.Equals(value) != true))) {
          _triangulationIndicator = value;
          OnPropertyChanged("triangulationIndicator");
        }
      }
    }

    [XmlElement(Order = 8)]
    [JsonProperty("radiometricCalibrationDataAvailability", Order = 8)]
    public Boolean_PropertyType radiometricCalibrationDataAvailability {
      get {
        return _radiometricCalibrationDataAvailability;
      }
      set {
        if ((_radiometricCalibrationDataAvailability == value)) {
          return;
        }
        if (((_radiometricCalibrationDataAvailability == null)
                    || (_radiometricCalibrationDataAvailability.Equals(value) != true))) {
          _radiometricCalibrationDataAvailability = value;
          OnPropertyChanged("radiometricCalibrationDataAvailability");
        }
      }
    }

    [XmlElement(Order = 9)]
    [JsonProperty("cameraCalibrationInformationAvailability", Order = 9)]
    public Boolean_PropertyType cameraCalibrationInformationAvailability {
      get {
        return _cameraCalibrationInformationAvailability;
      }
      set {
        if ((_cameraCalibrationInformationAvailability == value)) {
          return;
        }
        if (((_cameraCalibrationInformationAvailability == null)
                    || (_cameraCalibrationInformationAvailability.Equals(value) != true))) {
          _cameraCalibrationInformationAvailability = value;
          OnPropertyChanged("cameraCalibrationInformationAvailability");
        }
      }
    }

    [XmlElement(Order = 10)]
    [JsonProperty("filmDistortionInformationAvailability", Order = 10)]
    public Boolean_PropertyType filmDistortionInformationAvailability {
      get {
        return _filmDistortionInformationAvailability;
      }
      set {
        if ((_filmDistortionInformationAvailability == value)) {
          return;
        }
        if (((_filmDistortionInformationAvailability == null)
                    || (_filmDistortionInformationAvailability.Equals(value) != true))) {
          _filmDistortionInformationAvailability = value;
          OnPropertyChanged("filmDistortionInformationAvailability");
        }
      }
    }

    [XmlElement(Order = 11)]
    [JsonProperty("lensDistortionInformationAvailability", Order = 11)]
    public Boolean_PropertyType lensDistortionInformationAvailability {
      get {
        return _lensDistortionInformationAvailability;
      }
      set {
        if ((_lensDistortionInformationAvailability == value)) {
          return;
        }
        if (((_lensDistortionInformationAvailability == null)
                    || (_lensDistortionInformationAvailability.Equals(value) != true))) {
          _lensDistortionInformationAvailability = value;
          OnPropertyChanged("lensDistortionInformationAvailability");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ImagingConditionCode_PropertyType")]
  public class MD_ImagingConditionCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_ImagingConditionCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ImagingConditionCode_PropertyType class constructor
    /// </summary>
    public MD_ImagingConditionCode_PropertyType() {
      _mD_ImagingConditionCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ImagingConditionCode", Order = 0)]
    public CodeListValue_Type MD_ImagingConditionCode {
      get {
        return _mD_ImagingConditionCode;
      }
      set {
        if ((_mD_ImagingConditionCode == value)) {
          return;
        }
        if (((_mD_ImagingConditionCode == null)
                    || (_mD_ImagingConditionCode.Equals(value) != true))) {
          _mD_ImagingConditionCode = value;
          OnPropertyChanged("MD_ImagingConditionCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information identifing the feature catalogue
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_FeatureCatalogueDescription", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_FeatureCatalogueDescription_Type")]
  public class MD_FeatureCatalogueDescription_Type : AbstractMD_ContentInformation_Type {
    #region Private fields
    private Boolean_PropertyType _complianceCode;
    private List<CharacterString_PropertyType> _language;
    private Boolean_PropertyType _includedWithDataset;
    private List<GenericName_PropertyType> _featureTypes;
    private List<CI_Citation_PropertyType> _featureCatalogueCitation;
    #endregion

    /// <summary>
    /// MD_FeatureCatalogueDescription_Type class constructor
    /// </summary>
    public MD_FeatureCatalogueDescription_Type() {
      _featureCatalogueCitation = new List<CI_Citation_PropertyType>();
      _featureTypes = new List<GenericName_PropertyType>();
      _includedWithDataset = new Boolean_PropertyType();
      _language = new List<CharacterString_PropertyType>();
      _complianceCode = new Boolean_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("complianceCode", Order = 0)]
    public Boolean_PropertyType complianceCode {
      get {
        return _complianceCode;
      }
      set {
        if ((_complianceCode == value)) {
          return;
        }
        if (((_complianceCode == null)
                    || (_complianceCode.Equals(value) != true))) {
          _complianceCode = value;
          OnPropertyChanged("complianceCode");
        }
      }
    }

    [XmlElement("language", Order = 1)]
    [JsonProperty("language", Order = 1)]
    public List<CharacterString_PropertyType> language {
      get {
        return _language;
      }
      set {
        if ((_language == value)) {
          return;
        }
        if (((_language == null)
                    || (_language.Equals(value) != true))) {
          _language = value;
          OnPropertyChanged("language");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("includedWithDataset", Order = 2)]
    public Boolean_PropertyType includedWithDataset {
      get {
        return _includedWithDataset;
      }
      set {
        if ((_includedWithDataset == value)) {
          return;
        }
        if (((_includedWithDataset == null)
                    || (_includedWithDataset.Equals(value) != true))) {
          _includedWithDataset = value;
          OnPropertyChanged("includedWithDataset");
        }
      }
    }

    [XmlElement("featureTypes", Order = 3)]
    [JsonProperty("featureTypes", Order = 3)]
    public List<GenericName_PropertyType> featureTypes {
      get {
        return _featureTypes;
      }
      set {
        if ((_featureTypes == value)) {
          return;
        }
        if (((_featureTypes == null)
                    || (_featureTypes.Equals(value) != true))) {
          _featureTypes = value;
          OnPropertyChanged("featureTypes");
        }
      }
    }

    [XmlElement("featureCatalogueCitation", Order = 4)]
    [JsonProperty("featureCatalogueCitation", Order = 4)]
    public List<CI_Citation_PropertyType> featureCatalogueCitation {
      get {
        return _featureCatalogueCitation;
      }
      set {
        if ((_featureCatalogueCitation == value)) {
          return;
        }
        if (((_featureCatalogueCitation == null)
                    || (_featureCatalogueCitation.Equals(value) != true))) {
          _featureCatalogueCitation = value;
          OnPropertyChanged("featureCatalogueCitation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("GenericName_PropertyType")]
  public class GenericName_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeType _abstractGenericName;
    private string _nilReason;
    #endregion

    /// <summary>
    /// GenericName_PropertyType class constructor
    /// </summary>
    public GenericName_PropertyType() {
      _abstractGenericName = new CodeType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGenericName", Order = 0)]
    public CodeType AbstractGenericName {
      get {
        return _abstractGenericName;
      }
      set {
        if ((_abstractGenericName == value)) {
          return;
        }
        if (((_abstractGenericName == null)
                    || (_abstractGenericName.Equals(value) != true))) {
          _abstractGenericName = value;
          OnPropertyChanged("AbstractGenericName");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Distribution_PropertyType")]
  public class MD_Distribution_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Distribution_Type _mD_Distribution;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Distribution_PropertyType class constructor
    /// </summary>
    public MD_Distribution_PropertyType() {
      _mD_Distribution = new MD_Distribution_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Distribution", Order = 0)]
    public MD_Distribution_Type MD_Distribution {
      get {
        return _mD_Distribution;
      }
      set {
        if ((_mD_Distribution == value)) {
          return;
        }
        if (((_mD_Distribution == null)
                    || (_mD_Distribution.Equals(value) != true))) {
          _mD_Distribution = value;
          OnPropertyChanged("MD_Distribution");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about the distributor of and options for obtaining the dataset
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_Distribution", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_Distribution_Type")]
  public class MD_Distribution_Type : AbstractObject_Type {
    #region Private fields
    private List<MD_Format_PropertyType> _distributionFormat;
    private List<MD_Distributor_PropertyType> _distributor;
    private List<MD_DigitalTransferOptions_PropertyType> _transferOptions;
    #endregion

    /// <summary>
    /// MD_Distribution_Type class constructor
    /// </summary>
    public MD_Distribution_Type() {
      _transferOptions = new List<MD_DigitalTransferOptions_PropertyType>();
      _distributor = new List<MD_Distributor_PropertyType>();
      _distributionFormat = new List<MD_Format_PropertyType>();
    }

    [XmlElement("distributionFormat", Order = 0)]
    [JsonProperty("distributionFormat", Order = 0)]
    public List<MD_Format_PropertyType> distributionFormat {
      get {
        return _distributionFormat;
      }
      set {
        if ((_distributionFormat == value)) {
          return;
        }
        if (((_distributionFormat == null)
                    || (_distributionFormat.Equals(value) != true))) {
          _distributionFormat = value;
          OnPropertyChanged("distributionFormat");
        }
      }
    }

    [XmlElement("distributor", Order = 1)]
    [JsonProperty("distributor", Order = 1)]
    public List<MD_Distributor_PropertyType> distributor {
      get {
        return _distributor;
      }
      set {
        if ((_distributor == value)) {
          return;
        }
        if (((_distributor == null)
                    || (_distributor.Equals(value) != true))) {
          _distributor = value;
          OnPropertyChanged("distributor");
        }
      }
    }

    [XmlElement("transferOptions", Order = 2)]
    [JsonProperty("transferOptions", Order = 2)]
    public List<MD_DigitalTransferOptions_PropertyType> transferOptions {
      get {
        return _transferOptions;
      }
      set {
        if ((_transferOptions == value)) {
          return;
        }
        if (((_transferOptions == null)
                    || (_transferOptions.Equals(value) != true))) {
          _transferOptions = value;
          OnPropertyChanged("transferOptions");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_DataQuality_PropertyType")]
  public class DQ_DataQuality_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_DataQuality_Type _dQ_DataQuality;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_DataQuality_PropertyType class constructor
    /// </summary>
    public DQ_DataQuality_PropertyType() {
      _dQ_DataQuality = new DQ_DataQuality_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_DataQuality", Order = 0)]
    public DQ_DataQuality_Type DQ_DataQuality {
      get {
        return _dQ_DataQuality;
      }
      set {
        if ((_dQ_DataQuality == value)) {
          return;
        }
        if (((_dQ_DataQuality == null)
                    || (_dQ_DataQuality.Equals(value) != true))) {
          _dQ_DataQuality = value;
          OnPropertyChanged("DQ_DataQuality");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_DataQuality", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_DataQuality_Type")]
  public class DQ_DataQuality_Type : AbstractObject_Type {
    #region Private fields
    private DQ_Scope_PropertyType _scope;
    private List<DQ_Element_PropertyType> _report;
    private LI_Lineage_PropertyType _lineage;
    #endregion

    /// <summary>
    /// DQ_DataQuality_Type class constructor
    /// </summary>
    public DQ_DataQuality_Type() {
      _lineage = new LI_Lineage_PropertyType();
      _report = new List<DQ_Element_PropertyType>();
      _scope = new DQ_Scope_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("scope", Order = 0)]
    public DQ_Scope_PropertyType scope {
      get {
        return _scope;
      }
      set {
        if ((_scope == value)) {
          return;
        }
        if (((_scope == null)
                    || (_scope.Equals(value) != true))) {
          _scope = value;
          OnPropertyChanged("scope");
        }
      }
    }

    [XmlElement("report", Order = 1)]
    [JsonProperty("report", Order = 1)]
    public List<DQ_Element_PropertyType> report {
      get {
        return _report;
      }
      set {
        if ((_report == value)) {
          return;
        }
        if (((_report == null)
                    || (_report.Equals(value) != true))) {
          _report = value;
          OnPropertyChanged("report");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("lineage", Order = 2)]
    public LI_Lineage_PropertyType lineage {
      get {
        return _lineage;
      }
      set {
        if ((_lineage == value)) {
          return;
        }
        if (((_lineage == null)
                    || (_lineage.Equals(value) != true))) {
          _lineage = value;
          OnPropertyChanged("lineage");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_Scope_PropertyType")]
  public class DQ_Scope_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_Scope_Type _dQ_Scope;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_Scope_PropertyType class constructor
    /// </summary>
    public DQ_Scope_PropertyType() {
      _dQ_Scope = new DQ_Scope_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_Scope", Order = 0)]
    public DQ_Scope_Type DQ_Scope {
      get {
        return _dQ_Scope;
      }
      set {
        if ((_dQ_Scope == value)) {
          return;
        }
        if (((_dQ_Scope == null)
                    || (_dQ_Scope.Equals(value) != true))) {
          _dQ_Scope = value;
          OnPropertyChanged("DQ_Scope");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_Scope", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_Scope_Type")]
  public class DQ_Scope_Type : AbstractObject_Type {
    #region Private fields
    private MD_ScopeCode_PropertyType _level;
    private EX_Extent_PropertyType _extent;
    private List<MD_ScopeDescription_PropertyType> _levelDescription;
    #endregion

    /// <summary>
    /// DQ_Scope_Type class constructor
    /// </summary>
    public DQ_Scope_Type() {
      _levelDescription = new List<MD_ScopeDescription_PropertyType>();
      _extent = new EX_Extent_PropertyType();
      _level = new MD_ScopeCode_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("level", Order = 0)]
    public MD_ScopeCode_PropertyType level {
      get {
        return _level;
      }
      set {
        if ((_level == value)) {
          return;
        }
        if (((_level == null)
                    || (_level.Equals(value) != true))) {
          _level = value;
          OnPropertyChanged("level");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("extent", Order = 1)]
    public EX_Extent_PropertyType extent {
      get {
        return _extent;
      }
      set {
        if ((_extent == value)) {
          return;
        }
        if (((_extent == null)
                    || (_extent.Equals(value) != true))) {
          _extent = value;
          OnPropertyChanged("extent");
        }
      }
    }

    [XmlElement("levelDescription", Order = 2)]
    [JsonProperty("levelDescription", Order = 2)]
    public List<MD_ScopeDescription_PropertyType> levelDescription {
      get {
        return _levelDescription;
      }
      set {
        if ((_levelDescription == value)) {
          return;
        }
        if (((_levelDescription == null)
                    || (_levelDescription.Equals(value) != true))) {
          _levelDescription = value;
          OnPropertyChanged("levelDescription");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_Element_PropertyType")]
  public class DQ_Element_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_Element_Type _abstractDQ_Element;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_Element", Order = 0)]
    public AbstractDQ_Element_Type AbstractDQ_Element {
      get {
        return _abstractDQ_Element;
      }
      set {
        if ((_abstractDQ_Element == value)) {
          return;
        }
        if (((_abstractDQ_Element == null)
                    || (_abstractDQ_Element.Equals(value) != true))) {
          _abstractDQ_Element = value;
          OnPropertyChanged("AbstractDQ_Element");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(AbstractDQ_Completeness_Type))]
  [XmlInclude(typeof(DQ_CompletenessCommission_Type))]
  [XmlInclude(typeof(DQ_CompletenessOmission_Type))]
  [XmlInclude(typeof(AbstractDQ_LogicalConsistency_Type))]
  [XmlInclude(typeof(DQ_ConceptualConsistency_Type))]
  [XmlInclude(typeof(DQ_DomainConsistency_Type))]
  [XmlInclude(typeof(DQ_FormatConsistency_Type))]
  [XmlInclude(typeof(DQ_TopologicalConsistency_Type))]
  [XmlInclude(typeof(AbstractDQ_PositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_AbsoluteExternalPositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_GriddedDataPositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_RelativeInternalPositionalAccuracy_Type))]
  [XmlInclude(typeof(AbstractDQ_ThematicAccuracy_Type))]
  [XmlInclude(typeof(DQ_ThematicClassificationCorrectness_Type))]
  [XmlInclude(typeof(DQ_NonQuantitativeAttributeAccuracy_Type))]
  [XmlInclude(typeof(DQ_QuantitativeAttributeAccuracy_Type))]
  [XmlInclude(typeof(AbstractDQ_TemporalAccuracy_Type))]
  [XmlInclude(typeof(DQ_AccuracyOfATimeMeasurement_Type))]
  [XmlInclude(typeof(DQ_TemporalConsistency_Type))]
  [XmlInclude(typeof(DQ_TemporalValidity_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_Element", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_Element_Type")]
  public abstract class AbstractDQ_Element_Type : AbstractObject_Type {
    #region Private fields
    private List<CharacterString_PropertyType> _nameOfMeasure;
    private MD_Identifier_PropertyType _measureIdentification;
    private CharacterString_PropertyType _measureDescription;
    private DQ_EvaluationMethodTypeCode_PropertyType _evaluationMethodType;
    private CharacterString_PropertyType _evaluationMethodDescription;
    private CI_Citation_PropertyType _evaluationProcedure;
    private List<DateTime_PropertyType> _dateTime;
    private List<DQ_Result_PropertyType> _result;
    #endregion

    /// <summary>
    /// AbstractDQ_Element_Type class constructor
    /// </summary>
    public AbstractDQ_Element_Type() {
      _result = new List<DQ_Result_PropertyType>();
      _dateTime = new List<DateTime_PropertyType>();
      _evaluationProcedure = new CI_Citation_PropertyType();
      _evaluationMethodDescription = new CharacterString_PropertyType();
      _evaluationMethodType = new DQ_EvaluationMethodTypeCode_PropertyType();
      _measureDescription = new CharacterString_PropertyType();
      _measureIdentification = new MD_Identifier_PropertyType();
      _nameOfMeasure = new List<CharacterString_PropertyType>();
    }

    [XmlElement("nameOfMeasure", Order = 0)]
    [JsonProperty("nameOfMeasure", Order = 0)]
    public List<CharacterString_PropertyType> nameOfMeasure {
      get {
        return _nameOfMeasure;
      }
      set {
        if ((_nameOfMeasure == value)) {
          return;
        }
        if (((_nameOfMeasure == null)
                    || (_nameOfMeasure.Equals(value) != true))) {
          _nameOfMeasure = value;
          OnPropertyChanged("nameOfMeasure");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("measureIdentification", Order = 1)]
    public MD_Identifier_PropertyType measureIdentification {
      get {
        return _measureIdentification;
      }
      set {
        if ((_measureIdentification == value)) {
          return;
        }
        if (((_measureIdentification == null)
                    || (_measureIdentification.Equals(value) != true))) {
          _measureIdentification = value;
          OnPropertyChanged("measureIdentification");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("measureDescription", Order = 2)]
    public CharacterString_PropertyType measureDescription {
      get {
        return _measureDescription;
      }
      set {
        if ((_measureDescription == value)) {
          return;
        }
        if (((_measureDescription == null)
                    || (_measureDescription.Equals(value) != true))) {
          _measureDescription = value;
          OnPropertyChanged("measureDescription");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("evaluationMethodType", Order = 3)]
    public DQ_EvaluationMethodTypeCode_PropertyType evaluationMethodType {
      get {
        return _evaluationMethodType;
      }
      set {
        if ((_evaluationMethodType == value)) {
          return;
        }
        if (((_evaluationMethodType == null)
                    || (_evaluationMethodType.Equals(value) != true))) {
          _evaluationMethodType = value;
          OnPropertyChanged("evaluationMethodType");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("evaluationMethodDescription", Order = 4)]
    public CharacterString_PropertyType evaluationMethodDescription {
      get {
        return _evaluationMethodDescription;
      }
      set {
        if ((_evaluationMethodDescription == value)) {
          return;
        }
        if (((_evaluationMethodDescription == null)
                    || (_evaluationMethodDescription.Equals(value) != true))) {
          _evaluationMethodDescription = value;
          OnPropertyChanged("evaluationMethodDescription");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("evaluationProcedure", Order = 5)]
    public CI_Citation_PropertyType evaluationProcedure {
      get {
        return _evaluationProcedure;
      }
      set {
        if ((_evaluationProcedure == value)) {
          return;
        }
        if (((_evaluationProcedure == null)
                    || (_evaluationProcedure.Equals(value) != true))) {
          _evaluationProcedure = value;
          OnPropertyChanged("evaluationProcedure");
        }
      }
    }

    [XmlElement("dateTime", Order = 6)]
    [JsonProperty("dateTime", Order = 6)]
    public List<DateTime_PropertyType> dateTime {
      get {
        return _dateTime;
      }
      set {
        if ((_dateTime == value)) {
          return;
        }
        if (((_dateTime == null)
                    || (_dateTime.Equals(value) != true))) {
          _dateTime = value;
          OnPropertyChanged("dateTime");
        }
      }
    }

    [XmlElement("result", Order = 7)]
    [JsonProperty("result", Order = 7)]
    public List<DQ_Result_PropertyType> result {
      get {
        return _result;
      }
      set {
        if ((_result == value)) {
          return;
        }
        if (((_result == null)
                    || (_result.Equals(value) != true))) {
          _result = value;
          OnPropertyChanged("result");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_EvaluationMethodTypeCode_PropertyType")]
  public class DQ_EvaluationMethodTypeCode_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _dQ_EvaluationMethodTypeCode;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_EvaluationMethodTypeCode_PropertyType class constructor
    /// </summary>
    public DQ_EvaluationMethodTypeCode_PropertyType() {
      _dQ_EvaluationMethodTypeCode = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_EvaluationMethodTypeCode", Order = 0)]
    public CodeListValue_Type DQ_EvaluationMethodTypeCode {
      get {
        return _dQ_EvaluationMethodTypeCode;
      }
      set {
        if ((_dQ_EvaluationMethodTypeCode == value)) {
          return;
        }
        if (((_dQ_EvaluationMethodTypeCode == null)
                    || (_dQ_EvaluationMethodTypeCode.Equals(value) != true))) {
          _dQ_EvaluationMethodTypeCode = value;
          OnPropertyChanged("DQ_EvaluationMethodTypeCode");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_Result_PropertyType")]
  public class DQ_Result_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_Result_Type _abstractDQ_Result;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_Result", Order = 0)]
    public AbstractDQ_Result_Type AbstractDQ_Result {
      get {
        return _abstractDQ_Result;
      }
      set {
        if ((_abstractDQ_Result == value)) {
          return;
        }
        if (((_abstractDQ_Result == null)
                    || (_abstractDQ_Result.Equals(value) != true))) {
          _abstractDQ_Result = value;
          OnPropertyChanged("AbstractDQ_Result");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(DQ_QuantitativeResult_Type))]
  [XmlInclude(typeof(DQ_ConformanceResult_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_Result", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_Result_Type")]
  public abstract class AbstractDQ_Result_Type : AbstractObject_Type {
  }

  /// <summary>
  /// Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_QuantitativeResult", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_QuantitativeResult_Type")]
  public class DQ_QuantitativeResult_Type : AbstractDQ_Result_Type {
    #region Private fields
    private RecordType_PropertyType _valueType;
    private UnitOfMeasure_PropertyType _valueUnit;
    private CharacterString_PropertyType _errorStatistic;
    private List<Record_PropertyType> _value;
    #endregion

    /// <summary>
    /// DQ_QuantitativeResult_Type class constructor
    /// </summary>
    public DQ_QuantitativeResult_Type() {
      _value = new List<Record_PropertyType>();
      _errorStatistic = new CharacterString_PropertyType();
      _valueUnit = new UnitOfMeasure_PropertyType();
      _valueType = new RecordType_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("valueType", Order = 0)]
    public RecordType_PropertyType valueType {
      get {
        return _valueType;
      }
      set {
        if ((_valueType == value)) {
          return;
        }
        if (((_valueType == null)
                    || (_valueType.Equals(value) != true))) {
          _valueType = value;
          OnPropertyChanged("valueType");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("valueUnit", Order = 1)]
    public UnitOfMeasure_PropertyType valueUnit {
      get {
        return _valueUnit;
      }
      set {
        if ((_valueUnit == value)) {
          return;
        }
        if (((_valueUnit == null)
                    || (_valueUnit.Equals(value) != true))) {
          _valueUnit = value;
          OnPropertyChanged("valueUnit");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("errorStatistic", Order = 2)]
    public CharacterString_PropertyType errorStatistic {
      get {
        return _errorStatistic;
      }
      set {
        if ((_errorStatistic == value)) {
          return;
        }
        if (((_errorStatistic == null)
                    || (_errorStatistic.Equals(value) != true))) {
          _errorStatistic = value;
          OnPropertyChanged("errorStatistic");
        }
      }
    }

    [XmlElement("value", Order = 3)]
    [JsonProperty("value", Order = 3)]
    public List<Record_PropertyType> value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("value");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UnitOfMeasure_PropertyType")]
  public class UnitOfMeasure_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UnitOfMeasure_PropertyType class constructor
    /// </summary>
    public UnitOfMeasure_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_ConformanceResult", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_ConformanceResult_Type")]
  public class DQ_ConformanceResult_Type : AbstractDQ_Result_Type {
    #region Private fields
    private CI_Citation_PropertyType _specification;
    private CharacterString_PropertyType _explanation;
    private Boolean_PropertyType _pass;
    #endregion

    /// <summary>
    /// DQ_ConformanceResult_Type class constructor
    /// </summary>
    public DQ_ConformanceResult_Type() {
      _pass = new Boolean_PropertyType();
      _explanation = new CharacterString_PropertyType();
      _specification = new CI_Citation_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("specification", Order = 0)]
    public CI_Citation_PropertyType specification {
      get {
        return _specification;
      }
      set {
        if ((_specification == value)) {
          return;
        }
        if (((_specification == null)
                    || (_specification.Equals(value) != true))) {
          _specification = value;
          OnPropertyChanged("specification");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("explanation", Order = 1)]
    public CharacterString_PropertyType explanation {
      get {
        return _explanation;
      }
      set {
        if ((_explanation == value)) {
          return;
        }
        if (((_explanation == null)
                    || (_explanation.Equals(value) != true))) {
          _explanation = value;
          OnPropertyChanged("explanation");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("pass", Order = 2)]
    public Boolean_PropertyType pass {
      get {
        return _pass;
      }
      set {
        if ((_pass == value)) {
          return;
        }
        if (((_pass == null)
                    || (_pass.Equals(value) != true))) {
          _pass = value;
          OnPropertyChanged("pass");
        }
      }
    }
  }

  [XmlInclude(typeof(DQ_CompletenessCommission_Type))]
  [XmlInclude(typeof(DQ_CompletenessOmission_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_Completeness", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_Completeness_Type")]
  public abstract class AbstractDQ_Completeness_Type : AbstractDQ_Element_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_CompletenessCommission", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_CompletenessCommission_Type")]
  public class DQ_CompletenessCommission_Type : AbstractDQ_Completeness_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_CompletenessOmission", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_CompletenessOmission_Type")]
  public class DQ_CompletenessOmission_Type : AbstractDQ_Completeness_Type {
  }

  [XmlInclude(typeof(DQ_ConceptualConsistency_Type))]
  [XmlInclude(typeof(DQ_DomainConsistency_Type))]
  [XmlInclude(typeof(DQ_FormatConsistency_Type))]
  [XmlInclude(typeof(DQ_TopologicalConsistency_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_LogicalConsistency", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_LogicalConsistency_Type")]
  public abstract class AbstractDQ_LogicalConsistency_Type : AbstractDQ_Element_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_ConceptualConsistency", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_ConceptualConsistency_Type")]
  public class DQ_ConceptualConsistency_Type : AbstractDQ_LogicalConsistency_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_DomainConsistency", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_DomainConsistency_Type")]
  public class DQ_DomainConsistency_Type : AbstractDQ_LogicalConsistency_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_FormatConsistency", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_FormatConsistency_Type")]
  public class DQ_FormatConsistency_Type : AbstractDQ_LogicalConsistency_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_TopologicalConsistency", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_TopologicalConsistency_Type")]
  public class DQ_TopologicalConsistency_Type : AbstractDQ_LogicalConsistency_Type {
  }

  [XmlInclude(typeof(DQ_AbsoluteExternalPositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_GriddedDataPositionalAccuracy_Type))]
  [XmlInclude(typeof(DQ_RelativeInternalPositionalAccuracy_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_PositionalAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_PositionalAccuracy_Type")]
  public abstract class AbstractDQ_PositionalAccuracy_Type : AbstractDQ_Element_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_AbsoluteExternalPositionalAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_AbsoluteExternalPositionalAccuracy_Type")]
  public class DQ_AbsoluteExternalPositionalAccuracy_Type : AbstractDQ_PositionalAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_GriddedDataPositionalAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_GriddedDataPositionalAccuracy_Type")]
  public class DQ_GriddedDataPositionalAccuracy_Type : AbstractDQ_PositionalAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_RelativeInternalPositionalAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_RelativeInternalPositionalAccuracy_Type")]
  public class DQ_RelativeInternalPositionalAccuracy_Type : AbstractDQ_PositionalAccuracy_Type {
  }

  [XmlInclude(typeof(DQ_ThematicClassificationCorrectness_Type))]
  [XmlInclude(typeof(DQ_NonQuantitativeAttributeAccuracy_Type))]
  [XmlInclude(typeof(DQ_QuantitativeAttributeAccuracy_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_ThematicAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_ThematicAccuracy_Type")]
  public abstract class AbstractDQ_ThematicAccuracy_Type : AbstractDQ_Element_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_ThematicClassificationCorrectness", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_ThematicClassificationCorrectness_Type")]
  public class DQ_ThematicClassificationCorrectness_Type : AbstractDQ_ThematicAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_NonQuantitativeAttributeAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_NonQuantitativeAttributeAccuracy_Type")]
  public class DQ_NonQuantitativeAttributeAccuracy_Type : AbstractDQ_ThematicAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_QuantitativeAttributeAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_QuantitativeAttributeAccuracy_Type")]
  public class DQ_QuantitativeAttributeAccuracy_Type : AbstractDQ_ThematicAccuracy_Type {
  }

  [XmlInclude(typeof(DQ_AccuracyOfATimeMeasurement_Type))]
  [XmlInclude(typeof(DQ_TemporalConsistency_Type))]
  [XmlInclude(typeof(DQ_TemporalValidity_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDQ_TemporalAccuracy", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDQ_TemporalAccuracy_Type")]
  public abstract class AbstractDQ_TemporalAccuracy_Type : AbstractDQ_Element_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_AccuracyOfATimeMeasurement", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_AccuracyOfATimeMeasurement_Type")]
  public class DQ_AccuracyOfATimeMeasurement_Type : AbstractDQ_TemporalAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_TemporalConsistency", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_TemporalConsistency_Type")]
  public class DQ_TemporalConsistency_Type : AbstractDQ_TemporalAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DQ_TemporalValidity", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DQ_TemporalValidity_Type")]
  public class DQ_TemporalValidity_Type : AbstractDQ_TemporalAccuracy_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("LI_Lineage_PropertyType")]
  public class LI_Lineage_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private LI_Lineage_Type _lI_Lineage;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// LI_Lineage_PropertyType class constructor
    /// </summary>
    public LI_Lineage_PropertyType() {
      _lI_Lineage = new LI_Lineage_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LI_Lineage", Order = 0)]
    public LI_Lineage_Type LI_Lineage {
      get {
        return _lI_Lineage;
      }
      set {
        if ((_lI_Lineage == value)) {
          return;
        }
        if (((_lI_Lineage == null)
                    || (_lI_Lineage.Equals(value) != true))) {
          _lI_Lineage = value;
          OnPropertyChanged("LI_Lineage");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("LI_Lineage", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("LI_Lineage_Type")]
  public class LI_Lineage_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _statement;
    private List<LI_ProcessStep_PropertyType> _processStep;
    private List<LI_Source_PropertyType> _source;
    #endregion

    /// <summary>
    /// LI_Lineage_Type class constructor
    /// </summary>
    public LI_Lineage_Type() {
      _source = new List<LI_Source_PropertyType>();
      _processStep = new List<LI_ProcessStep_PropertyType>();
      _statement = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("statement", Order = 0)]
    public CharacterString_PropertyType statement {
      get {
        return _statement;
      }
      set {
        if ((_statement == value)) {
          return;
        }
        if (((_statement == null)
                    || (_statement.Equals(value) != true))) {
          _statement = value;
          OnPropertyChanged("statement");
        }
      }
    }

    [XmlElement("processStep", Order = 1)]
    [JsonProperty("processStep", Order = 1)]
    public List<LI_ProcessStep_PropertyType> processStep {
      get {
        return _processStep;
      }
      set {
        if ((_processStep == value)) {
          return;
        }
        if (((_processStep == null)
                    || (_processStep.Equals(value) != true))) {
          _processStep = value;
          OnPropertyChanged("processStep");
        }
      }
    }

    [XmlElement("source", Order = 2)]
    [JsonProperty("source", Order = 2)]
    public List<LI_Source_PropertyType> source {
      get {
        return _source;
      }
      set {
        if ((_source == value)) {
          return;
        }
        if (((_source == null)
                    || (_source.Equals(value) != true))) {
          _source = value;
          OnPropertyChanged("source");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("LI_ProcessStep_PropertyType")]
  public class LI_ProcessStep_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private LI_ProcessStep_Type _lI_ProcessStep;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// LI_ProcessStep_PropertyType class constructor
    /// </summary>
    public LI_ProcessStep_PropertyType() {
      _lI_ProcessStep = new LI_ProcessStep_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LI_ProcessStep", Order = 0)]
    public LI_ProcessStep_Type LI_ProcessStep {
      get {
        return _lI_ProcessStep;
      }
      set {
        if ((_lI_ProcessStep == value)) {
          return;
        }
        if (((_lI_ProcessStep == null)
                    || (_lI_ProcessStep.Equals(value) != true))) {
          _lI_ProcessStep = value;
          OnPropertyChanged("LI_ProcessStep");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("LI_ProcessStep", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("LI_ProcessStep_Type")]
  public class LI_ProcessStep_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _description;
    private CharacterString_PropertyType _rationale;
    private DateTime_PropertyType _dateTime;
    private List<CI_ResponsibleParty_PropertyType> _processor;
    private List<LI_Source_PropertyType> _source;
    #endregion

    /// <summary>
    /// LI_ProcessStep_Type class constructor
    /// </summary>
    public LI_ProcessStep_Type() {
      _source = new List<LI_Source_PropertyType>();
      _processor = new List<CI_ResponsibleParty_PropertyType>();
      _dateTime = new DateTime_PropertyType();
      _rationale = new CharacterString_PropertyType();
      _description = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("description", Order = 0)]
    public CharacterString_PropertyType description {
      get {
        return _description;
      }
      set {
        if ((_description == value)) {
          return;
        }
        if (((_description == null)
                    || (_description.Equals(value) != true))) {
          _description = value;
          OnPropertyChanged("description");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("rationale", Order = 1)]
    public CharacterString_PropertyType rationale {
      get {
        return _rationale;
      }
      set {
        if ((_rationale == value)) {
          return;
        }
        if (((_rationale == null)
                    || (_rationale.Equals(value) != true))) {
          _rationale = value;
          OnPropertyChanged("rationale");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("dateTime", Order = 2)]
    public DateTime_PropertyType dateTime {
      get {
        return _dateTime;
      }
      set {
        if ((_dateTime == value)) {
          return;
        }
        if (((_dateTime == null)
                    || (_dateTime.Equals(value) != true))) {
          _dateTime = value;
          OnPropertyChanged("dateTime");
        }
      }
    }

    [XmlElement("processor", Order = 3)]
    [JsonProperty("processor", Order = 3)]
    public List<CI_ResponsibleParty_PropertyType> processor {
      get {
        return _processor;
      }
      set {
        if ((_processor == value)) {
          return;
        }
        if (((_processor == null)
                    || (_processor.Equals(value) != true))) {
          _processor = value;
          OnPropertyChanged("processor");
        }
      }
    }

    [XmlElement("source", Order = 4)]
    [JsonProperty("source", Order = 4)]
    public List<LI_Source_PropertyType> source {
      get {
        return _source;
      }
      set {
        if ((_source == value)) {
          return;
        }
        if (((_source == null)
                    || (_source.Equals(value) != true))) {
          _source = value;
          OnPropertyChanged("source");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("LI_Source_PropertyType")]
  public class LI_Source_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private LI_Source_Type _lI_Source;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// LI_Source_PropertyType class constructor
    /// </summary>
    public LI_Source_PropertyType() {
      _lI_Source = new LI_Source_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LI_Source", Order = 0)]
    public LI_Source_Type LI_Source {
      get {
        return _lI_Source;
      }
      set {
        if ((_lI_Source == value)) {
          return;
        }
        if (((_lI_Source == null)
                    || (_lI_Source.Equals(value) != true))) {
          _lI_Source = value;
          OnPropertyChanged("LI_Source");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("LI_Source", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("LI_Source_Type")]
  public class LI_Source_Type : AbstractObject_Type {
    #region Private fields
    private CharacterString_PropertyType _description;
    private MD_RepresentativeFraction_PropertyType _scaleDenominator;
    private MD_ReferenceSystem_PropertyType _sourceReferenceSystem;
    private CI_Citation_PropertyType _sourceCitation;
    private List<EX_Extent_PropertyType> _sourceExtent;
    private List<LI_ProcessStep_PropertyType> _sourceStep;
    #endregion

    /// <summary>
    /// LI_Source_Type class constructor
    /// </summary>
    public LI_Source_Type() {
      _sourceStep = new List<LI_ProcessStep_PropertyType>();
      _sourceExtent = new List<EX_Extent_PropertyType>();
      _sourceCitation = new CI_Citation_PropertyType();
      _sourceReferenceSystem = new MD_ReferenceSystem_PropertyType();
      _scaleDenominator = new MD_RepresentativeFraction_PropertyType();
      _description = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("description", Order = 0)]
    public CharacterString_PropertyType description {
      get {
        return _description;
      }
      set {
        if ((_description == value)) {
          return;
        }
        if (((_description == null)
                    || (_description.Equals(value) != true))) {
          _description = value;
          OnPropertyChanged("description");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("scaleDenominator", Order = 1)]
    public MD_RepresentativeFraction_PropertyType scaleDenominator {
      get {
        return _scaleDenominator;
      }
      set {
        if ((_scaleDenominator == value)) {
          return;
        }
        if (((_scaleDenominator == null)
                    || (_scaleDenominator.Equals(value) != true))) {
          _scaleDenominator = value;
          OnPropertyChanged("scaleDenominator");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("sourceReferenceSystem", Order = 2)]
    public MD_ReferenceSystem_PropertyType sourceReferenceSystem {
      get {
        return _sourceReferenceSystem;
      }
      set {
        if ((_sourceReferenceSystem == value)) {
          return;
        }
        if (((_sourceReferenceSystem == null)
                    || (_sourceReferenceSystem.Equals(value) != true))) {
          _sourceReferenceSystem = value;
          OnPropertyChanged("sourceReferenceSystem");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("sourceCitation", Order = 3)]
    public CI_Citation_PropertyType sourceCitation {
      get {
        return _sourceCitation;
      }
      set {
        if ((_sourceCitation == value)) {
          return;
        }
        if (((_sourceCitation == null)
                    || (_sourceCitation.Equals(value) != true))) {
          _sourceCitation = value;
          OnPropertyChanged("sourceCitation");
        }
      }
    }

    [XmlElement("sourceExtent", Order = 4)]
    [JsonProperty("sourceExtent", Order = 4)]
    public List<EX_Extent_PropertyType> sourceExtent {
      get {
        return _sourceExtent;
      }
      set {
        if ((_sourceExtent == value)) {
          return;
        }
        if (((_sourceExtent == null)
                    || (_sourceExtent.Equals(value) != true))) {
          _sourceExtent = value;
          OnPropertyChanged("sourceExtent");
        }
      }
    }

    [XmlElement("sourceStep", Order = 5)]
    [JsonProperty("sourceStep", Order = 5)]
    public List<LI_ProcessStep_PropertyType> sourceStep {
      get {
        return _sourceStep;
      }
      set {
        if ((_sourceStep == value)) {
          return;
        }
        if (((_sourceStep == null)
                    || (_sourceStep.Equals(value) != true))) {
          _sourceStep = value;
          OnPropertyChanged("sourceStep");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_PortrayalCatalogueReference_PropertyType")]
  public class MD_PortrayalCatalogueReference_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_PortrayalCatalogueReference_Type _mD_PortrayalCatalogueReference;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_PortrayalCatalogueReference_PropertyType class constructor
    /// </summary>
    public MD_PortrayalCatalogueReference_PropertyType() {
      _mD_PortrayalCatalogueReference = new MD_PortrayalCatalogueReference_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_PortrayalCatalogueReference", Order = 0)]
    public MD_PortrayalCatalogueReference_Type MD_PortrayalCatalogueReference {
      get {
        return _mD_PortrayalCatalogueReference;
      }
      set {
        if ((_mD_PortrayalCatalogueReference == value)) {
          return;
        }
        if (((_mD_PortrayalCatalogueReference == null)
                    || (_mD_PortrayalCatalogueReference.Equals(value) != true))) {
          _mD_PortrayalCatalogueReference = value;
          OnPropertyChanged("MD_PortrayalCatalogueReference");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information identifing the portrayal catalogue used
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_PortrayalCatalogueReference", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_PortrayalCatalogueReference_Type")]
  public class MD_PortrayalCatalogueReference_Type : AbstractObject_Type {
    #region Private fields
    private List<CI_Citation_PropertyType> _portrayalCatalogueCitation;
    #endregion

    /// <summary>
    /// MD_PortrayalCatalogueReference_Type class constructor
    /// </summary>
    public MD_PortrayalCatalogueReference_Type() {
      _portrayalCatalogueCitation = new List<CI_Citation_PropertyType>();
    }

    [XmlElement("portrayalCatalogueCitation", Order = 0)]
    [JsonProperty("portrayalCatalogueCitation", Order = 0)]
    public List<CI_Citation_PropertyType> portrayalCatalogueCitation {
      get {
        return _portrayalCatalogueCitation;
      }
      set {
        if ((_portrayalCatalogueCitation == value)) {
          return;
        }
        if (((_portrayalCatalogueCitation == null)
                    || (_portrayalCatalogueCitation.Equals(value) != true))) {
          _portrayalCatalogueCitation = value;
          OnPropertyChanged("portrayalCatalogueCitation");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ApplicationSchemaInformation_PropertyType")]
  public class MD_ApplicationSchemaInformation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ApplicationSchemaInformation_Type _mD_ApplicationSchemaInformation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ApplicationSchemaInformation_PropertyType class constructor
    /// </summary>
    public MD_ApplicationSchemaInformation_PropertyType() {
      _mD_ApplicationSchemaInformation = new MD_ApplicationSchemaInformation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ApplicationSchemaInformation", Order = 0)]
    public MD_ApplicationSchemaInformation_Type MD_ApplicationSchemaInformation {
      get {
        return _mD_ApplicationSchemaInformation;
      }
      set {
        if ((_mD_ApplicationSchemaInformation == value)) {
          return;
        }
        if (((_mD_ApplicationSchemaInformation == null)
                    || (_mD_ApplicationSchemaInformation.Equals(value) != true))) {
          _mD_ApplicationSchemaInformation = value;
          OnPropertyChanged("MD_ApplicationSchemaInformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Information about the application schema used to build the dataset
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("MD_ApplicationSchemaInformation", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("MD_ApplicationSchemaInformation_Type")]
  public class MD_ApplicationSchemaInformation_Type : AbstractObject_Type {
    #region Private fields
    private CI_Citation_PropertyType _name;
    private CharacterString_PropertyType _schemaLanguage;
    private CharacterString_PropertyType _constraintLanguage;
    private CharacterString_PropertyType _schemaAscii;
    private Binary_PropertyType _graphicsFile;
    private Binary_PropertyType _softwareDevelopmentFile;
    private CharacterString_PropertyType _softwareDevelopmentFileFormat;
    #endregion

    /// <summary>
    /// MD_ApplicationSchemaInformation_Type class constructor
    /// </summary>
    public MD_ApplicationSchemaInformation_Type() {
      _softwareDevelopmentFileFormat = new CharacterString_PropertyType();
      _softwareDevelopmentFile = new Binary_PropertyType();
      _graphicsFile = new Binary_PropertyType();
      _schemaAscii = new CharacterString_PropertyType();
      _constraintLanguage = new CharacterString_PropertyType();
      _schemaLanguage = new CharacterString_PropertyType();
      _name = new CI_Citation_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("name", Order = 0)]
    public CI_Citation_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("schemaLanguage", Order = 1)]
    public CharacterString_PropertyType schemaLanguage {
      get {
        return _schemaLanguage;
      }
      set {
        if ((_schemaLanguage == value)) {
          return;
        }
        if (((_schemaLanguage == null)
                    || (_schemaLanguage.Equals(value) != true))) {
          _schemaLanguage = value;
          OnPropertyChanged("schemaLanguage");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("constraintLanguage", Order = 2)]
    public CharacterString_PropertyType constraintLanguage {
      get {
        return _constraintLanguage;
      }
      set {
        if ((_constraintLanguage == value)) {
          return;
        }
        if (((_constraintLanguage == null)
                    || (_constraintLanguage.Equals(value) != true))) {
          _constraintLanguage = value;
          OnPropertyChanged("constraintLanguage");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("schemaAscii", Order = 3)]
    public CharacterString_PropertyType schemaAscii {
      get {
        return _schemaAscii;
      }
      set {
        if ((_schemaAscii == value)) {
          return;
        }
        if (((_schemaAscii == null)
                    || (_schemaAscii.Equals(value) != true))) {
          _schemaAscii = value;
          OnPropertyChanged("schemaAscii");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("graphicsFile", Order = 4)]
    public Binary_PropertyType graphicsFile {
      get {
        return _graphicsFile;
      }
      set {
        if ((_graphicsFile == value)) {
          return;
        }
        if (((_graphicsFile == null)
                    || (_graphicsFile.Equals(value) != true))) {
          _graphicsFile = value;
          OnPropertyChanged("graphicsFile");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("softwareDevelopmentFile", Order = 5)]
    public Binary_PropertyType softwareDevelopmentFile {
      get {
        return _softwareDevelopmentFile;
      }
      set {
        if ((_softwareDevelopmentFile == value)) {
          return;
        }
        if (((_softwareDevelopmentFile == null)
                    || (_softwareDevelopmentFile.Equals(value) != true))) {
          _softwareDevelopmentFile = value;
          OnPropertyChanged("softwareDevelopmentFile");
        }
      }
    }

    [XmlElement(Order = 6)]
    [JsonProperty("softwareDevelopmentFileFormat", Order = 6)]
    public CharacterString_PropertyType softwareDevelopmentFileFormat {
      get {
        return _softwareDevelopmentFileFormat;
      }
      set {
        if ((_softwareDevelopmentFileFormat == value)) {
          return;
        }
        if (((_softwareDevelopmentFileFormat == null)
                    || (_softwareDevelopmentFileFormat.Equals(value) != true))) {
          _softwareDevelopmentFileFormat = value;
          OnPropertyChanged("softwareDevelopmentFileFormat");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Binary_PropertyType")]
  public class Binary_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private Binary_Type _binary;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Binary_PropertyType class constructor
    /// </summary>
    public Binary_PropertyType() {
      _binary = new Binary_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Binary", Order = 0)]
    public Binary_Type Binary {
      get {
        return _binary;
      }
      set {
        if ((_binary == value)) {
          return;
        }
        if (((_binary == null)
                    || (_binary.Equals(value) != true))) {
          _binary = value;
          OnPropertyChanged("Binary");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Binary_Type")]
  public class Binary_Type : INotifyPropertyChanged {
    #region Private fields
    private string _src;
    private string _value;
    #endregion

    [XmlAttribute(DataType = "anyURI")]
    [JsonProperty("src")]
    public string src {
      get {
        return _src;
      }
      set {
        if ((_src == value)) {
          return;
        }
        if (((_src == null)
                    || (_src.Equals(value) != true))) {
          _src = value;
          OnPropertyChanged("src");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_Aggregate_PropertyType")]
  public class DS_Aggregate_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDS_Aggregate_Type _abstractDS_Aggregate;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDS_Aggregate", Order = 0)]
    public AbstractDS_Aggregate_Type AbstractDS_Aggregate {
      get {
        return _abstractDS_Aggregate;
      }
      set {
        if ((_abstractDS_Aggregate == value)) {
          return;
        }
        if (((_abstractDS_Aggregate == null)
                    || (_abstractDS_Aggregate.Equals(value) != true))) {
          _abstractDS_Aggregate = value;
          OnPropertyChanged("AbstractDS_Aggregate");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Identifiable collection of datasets
  /// </summary>
  [XmlInclude(typeof(DS_Initiative_Type))]
  [XmlInclude(typeof(DS_Series_Type))]
  [XmlInclude(typeof(DS_ProductionSeries_Type))]
  [XmlInclude(typeof(DS_Sensor_Type))]
  [XmlInclude(typeof(DS_Platform_Type))]
  [XmlInclude(typeof(DS_OtherAggregate_Type))]
  [XmlInclude(typeof(DS_StereoMate_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractDS_Aggregate", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractDS_Aggregate_Type")]
  public abstract class AbstractDS_Aggregate_Type : AbstractObject_Type {
    #region Private fields
    private List<DS_DataSet_PropertyType> _composedOf;
    private List<MD_Metadata_PropertyType> _seriesMetadata;
    private List<DS_Aggregate_PropertyType> _subset;
    private List<DS_Aggregate_PropertyType> _superset;
    #endregion

    /// <summary>
    /// AbstractDS_Aggregate_Type class constructor
    /// </summary>
    public AbstractDS_Aggregate_Type() {
      _superset = new List<DS_Aggregate_PropertyType>();
      _subset = new List<DS_Aggregate_PropertyType>();
      _seriesMetadata = new List<MD_Metadata_PropertyType>();
      _composedOf = new List<DS_DataSet_PropertyType>();
    }

    [XmlElement("composedOf", Order = 0)]
    [JsonProperty("composedOf", Order = 0)]
    public List<DS_DataSet_PropertyType> composedOf {
      get {
        return _composedOf;
      }
      set {
        if ((_composedOf == value)) {
          return;
        }
        if (((_composedOf == null)
                    || (_composedOf.Equals(value) != true))) {
          _composedOf = value;
          OnPropertyChanged("composedOf");
        }
      }
    }

    [XmlElement("seriesMetadata", Order = 1)]
    [JsonProperty("seriesMetadata", Order = 1)]
    public List<MD_Metadata_PropertyType> seriesMetadata {
      get {
        return _seriesMetadata;
      }
      set {
        if ((_seriesMetadata == value)) {
          return;
        }
        if (((_seriesMetadata == null)
                    || (_seriesMetadata.Equals(value) != true))) {
          _seriesMetadata = value;
          OnPropertyChanged("seriesMetadata");
        }
      }
    }

    [XmlElement("subset", Order = 2)]
    [JsonProperty("subset", Order = 2)]
    public List<DS_Aggregate_PropertyType> subset {
      get {
        return _subset;
      }
      set {
        if ((_subset == value)) {
          return;
        }
        if (((_subset == null)
                    || (_subset.Equals(value) != true))) {
          _subset = value;
          OnPropertyChanged("subset");
        }
      }
    }

    [XmlElement("superset", Order = 3)]
    [JsonProperty("superset", Order = 3)]
    public List<DS_Aggregate_PropertyType> superset {
      get {
        return _superset;
      }
      set {
        if ((_superset == value)) {
          return;
        }
        if (((_superset == null)
                    || (_superset.Equals(value) != true))) {
          _superset = value;
          OnPropertyChanged("superset");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_DataSet_PropertyType")]
  public class DS_DataSet_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_DataSet_Type _dS_DataSet;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_DataSet_PropertyType class constructor
    /// </summary>
    public DS_DataSet_PropertyType() {
      _dS_DataSet = new DS_DataSet_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_DataSet", Order = 0)]
    public DS_DataSet_Type DS_DataSet {
      get {
        return _dS_DataSet;
      }
      set {
        if ((_dS_DataSet == value)) {
          return;
        }
        if (((_dS_DataSet == null)
                    || (_dS_DataSet.Equals(value) != true))) {
          _dS_DataSet = value;
          OnPropertyChanged("DS_DataSet");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_Initiative", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_Initiative_Type")]
  public class DS_Initiative_Type : AbstractDS_Aggregate_Type {
  }

  [XmlInclude(typeof(DS_ProductionSeries_Type))]
  [XmlInclude(typeof(DS_Sensor_Type))]
  [XmlInclude(typeof(DS_Platform_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_Series", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_Series_Type")]
  public class DS_Series_Type : AbstractDS_Aggregate_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_ProductionSeries", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_ProductionSeries_Type")]
  public class DS_ProductionSeries_Type : DS_Series_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_Sensor", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_Sensor_Type")]
  public class DS_Sensor_Type : DS_Series_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_Platform", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_Platform_Type")]
  public class DS_Platform_Type : DS_Series_Type {
  }

  [XmlInclude(typeof(DS_StereoMate_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_OtherAggregate", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_OtherAggregate_Type")]
  public class DS_OtherAggregate_Type : AbstractDS_Aggregate_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_StereoMate", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_StereoMate_Type")]
  public class DS_StereoMate_Type : DS_OtherAggregate_Type {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("DS_Association", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("DS_Association_Type")]
  public class DS_Association_Type : AbstractObject_Type {
  }

  /// <summary>
  /// Description of the spatial and temporal reference systems used in the dataset
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractRS_ReferenceSystem", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractRS_ReferenceSystem_Type")]
  public abstract class AbstractRS_ReferenceSystem_Type : AbstractObject_Type {
    #region Private fields
    private RS_Identifier_PropertyType _name;
    private List<EX_Extent_PropertyType> _domainOfValidity;
    #endregion

    /// <summary>
    /// AbstractRS_ReferenceSystem_Type class constructor
    /// </summary>
    public AbstractRS_ReferenceSystem_Type() {
      _domainOfValidity = new List<EX_Extent_PropertyType>();
      _name = new RS_Identifier_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("name", Order = 0)]
    public RS_Identifier_PropertyType name {
      get {
        return _name;
      }
      set {
        if ((_name == value)) {
          return;
        }
        if (((_name == null)
                    || (_name.Equals(value) != true))) {
          _name = value;
          OnPropertyChanged("name");
        }
      }
    }

    [XmlElement("domainOfValidity", Order = 1)]
    [JsonProperty("domainOfValidity", Order = 1)]
    public List<EX_Extent_PropertyType> domainOfValidity {
      get {
        return _domainOfValidity;
      }
      set {
        if ((_domainOfValidity == value)) {
          return;
        }
        if (((_domainOfValidity == null)
                    || (_domainOfValidity.Equals(value) != true))) {
          _domainOfValidity = value;
          OnPropertyChanged("domainOfValidity");
        }
      }
    }
  }

  /// <summary>
  /// Geographic area of the dataset
  /// </summary>
  [XmlInclude(typeof(EX_GeographicDescription_Type))]
  [XmlInclude(typeof(EX_GeographicBoundingBox_Type))]
  [XmlInclude(typeof(EX_BoundingPolygon_Type))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("AbstractEX_GeographicExtent", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("AbstractEX_GeographicExtent_Type")]
  public abstract class AbstractEX_GeographicExtent_Type : AbstractObject_Type {
    #region Private fields
    private Boolean_PropertyType _extentTypeCode;
    #endregion

    /// <summary>
    /// AbstractEX_GeographicExtent_Type class constructor
    /// </summary>
    public AbstractEX_GeographicExtent_Type() {
      _extentTypeCode = new Boolean_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("extentTypeCode", Order = 0)]
    public Boolean_PropertyType extentTypeCode {
      get {
        return _extentTypeCode;
      }
      set {
        if ((_extentTypeCode == value)) {
          return;
        }
        if (((_extentTypeCode == null)
                    || (_extentTypeCode.Equals(value) != true))) {
          _extentTypeCode = value;
          OnPropertyChanged("extentTypeCode");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_GeographicDescription", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_GeographicDescription_Type")]
  public class EX_GeographicDescription_Type : AbstractEX_GeographicExtent_Type {
    #region Private fields
    private MD_Identifier_PropertyType _geographicIdentifier;
    #endregion

    /// <summary>
    /// EX_GeographicDescription_Type class constructor
    /// </summary>
    public EX_GeographicDescription_Type() {
      _geographicIdentifier = new MD_Identifier_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("geographicIdentifier", Order = 0)]
    public MD_Identifier_PropertyType geographicIdentifier {
      get {
        return _geographicIdentifier;
      }
      set {
        if ((_geographicIdentifier == value)) {
          return;
        }
        if (((_geographicIdentifier == null)
                    || (_geographicIdentifier.Equals(value) != true))) {
          _geographicIdentifier = value;
          OnPropertyChanged("geographicIdentifier");
        }
      }
    }
  }

  /// <summary>
  /// Geographic area of the entire dataset referenced to WGS 84
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_GeographicBoundingBox", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_GeographicBoundingBox_Type")]
  public class EX_GeographicBoundingBox_Type : AbstractEX_GeographicExtent_Type {
    #region Private fields
    private Decimal_PropertyType _westBoundLongitude;
    private Decimal_PropertyType _eastBoundLongitude;
    private Decimal_PropertyType _southBoundLatitude;
    private Decimal_PropertyType _northBoundLatitude;
    #endregion

    /// <summary>
    /// EX_GeographicBoundingBox_Type class constructor
    /// </summary>
    public EX_GeographicBoundingBox_Type() {
      _northBoundLatitude = new Decimal_PropertyType();
      _southBoundLatitude = new Decimal_PropertyType();
      _eastBoundLongitude = new Decimal_PropertyType();
      _westBoundLongitude = new Decimal_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("westBoundLongitude", Order = 0)]
    public Decimal_PropertyType westBoundLongitude {
      get {
        return _westBoundLongitude;
      }
      set {
        if ((_westBoundLongitude == value)) {
          return;
        }
        if (((_westBoundLongitude == null)
                    || (_westBoundLongitude.Equals(value) != true))) {
          _westBoundLongitude = value;
          OnPropertyChanged("westBoundLongitude");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("eastBoundLongitude", Order = 1)]
    public Decimal_PropertyType eastBoundLongitude {
      get {
        return _eastBoundLongitude;
      }
      set {
        if ((_eastBoundLongitude == value)) {
          return;
        }
        if (((_eastBoundLongitude == null)
                    || (_eastBoundLongitude.Equals(value) != true))) {
          _eastBoundLongitude = value;
          OnPropertyChanged("eastBoundLongitude");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("southBoundLatitude", Order = 2)]
    public Decimal_PropertyType southBoundLatitude {
      get {
        return _southBoundLatitude;
      }
      set {
        if ((_southBoundLatitude == value)) {
          return;
        }
        if (((_southBoundLatitude == null)
                    || (_southBoundLatitude.Equals(value) != true))) {
          _southBoundLatitude = value;
          OnPropertyChanged("southBoundLatitude");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("northBoundLatitude", Order = 3)]
    public Decimal_PropertyType northBoundLatitude {
      get {
        return _northBoundLatitude;
      }
      set {
        if ((_northBoundLatitude == value)) {
          return;
        }
        if (((_northBoundLatitude == null)
                    || (_northBoundLatitude.Equals(value) != true))) {
          _northBoundLatitude = value;
          OnPropertyChanged("northBoundLatitude");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Decimal_PropertyType")]
  public class Decimal_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private decimal _decimal;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("Decimal", Order = 0)]
    public decimal Decimal {
      get {
        return _decimal;
      }
      set {
        if ((_decimal.Equals(value) != true)) {
          _decimal = value;
          OnPropertyChanged("Decimal");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_BoundingPolygon", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_BoundingPolygon_Type")]
  public class EX_BoundingPolygon_Type : AbstractEX_GeographicExtent_Type {
    #region Private fields
    private List<GM_Object_PropertyType> _polygon;
    #endregion

    /// <summary>
    /// EX_BoundingPolygon_Type class constructor
    /// </summary>
    public EX_BoundingPolygon_Type() {
      _polygon = new List<GM_Object_PropertyType>();
    }

    [XmlElement("polygon", Order = 0)]
    [JsonProperty("polygon", Order = 0)]
    public List<GM_Object_PropertyType> polygon {
      get {
        return _polygon;
      }
      set {
        if ((_polygon == value)) {
          return;
        }
        if (((_polygon == null)
                    || (_polygon.Equals(value) != true))) {
          _polygon = value;
          OnPropertyChanged("polygon");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gss")]
  [JsonObject("GM_Object_PropertyType")]
  public class GM_Object_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeometryType _abstractGeometry;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("AbstractGeometry", Order = 0)]
    public AbstractGeometryType AbstractGeometry {
      get {
        return _abstractGeometry;
      }
      set {
        if ((_abstractGeometry == value)) {
          return;
        }
        if (((_abstractGeometry == null)
                    || (_abstractGeometry.Equals(value) != true))) {
          _abstractGeometry = value;
          OnPropertyChanged("AbstractGeometry");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Vertical domain of dataset
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_VerticalExtent", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_VerticalExtent_Type")]
  public class EX_VerticalExtent_Type : AbstractObject_Type {
    #region Private fields
    private Real_PropertyType _minimumValue;
    private Real_PropertyType _maximumValue;
    private SC_CRS_PropertyType _verticalCRS;
    #endregion

    /// <summary>
    /// EX_VerticalExtent_Type class constructor
    /// </summary>
    public EX_VerticalExtent_Type() {
      _verticalCRS = new SC_CRS_PropertyType();
      _maximumValue = new Real_PropertyType();
      _minimumValue = new Real_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("minimumValue", Order = 0)]
    public Real_PropertyType minimumValue {
      get {
        return _minimumValue;
      }
      set {
        if ((_minimumValue == value)) {
          return;
        }
        if (((_minimumValue == null)
                    || (_minimumValue.Equals(value) != true))) {
          _minimumValue = value;
          OnPropertyChanged("minimumValue");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("maximumValue", Order = 1)]
    public Real_PropertyType maximumValue {
      get {
        return _maximumValue;
      }
      set {
        if ((_maximumValue == value)) {
          return;
        }
        if (((_maximumValue == null)
                    || (_maximumValue.Equals(value) != true))) {
          _maximumValue = value;
          OnPropertyChanged("maximumValue");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("verticalCRS", Order = 2)]
    public SC_CRS_PropertyType verticalCRS {
      get {
        return _verticalCRS;
      }
      set {
        if ((_verticalCRS == value)) {
          return;
        }
        if (((_verticalCRS == null)
                    || (_verticalCRS.Equals(value) != true))) {
          _verticalCRS = value;
          OnPropertyChanged("verticalCRS");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gsr")]
  [JsonObject("SC_CRS_PropertyType")]
  public class SC_CRS_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCRSType _abstractCRS;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("AbstractCRS", Order = 0)]
    public AbstractCRSType AbstractCRS {
      get {
        return _abstractCRS;
      }
      set {
        if ((_abstractCRS == value)) {
          return;
        }
        if (((_abstractCRS == null)
                    || (_abstractCRS.Equals(value) != true))) {
          _abstractCRS = value;
          OnPropertyChanged("AbstractCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(GeocentricCRSType))]
  [XmlInclude(typeof(TemporalCRSType))]
  [XmlInclude(typeof(ImageCRSType))]
  [XmlInclude(typeof(EngineeringCRSType))]
  [XmlInclude(typeof(VerticalCRSType))]
  [XmlInclude(typeof(CompoundCRSType))]
  [XmlInclude(typeof(GeographicCRSType))]
  [XmlInclude(typeof(GeodeticCRSType))]
  [XmlInclude(typeof(AbstractGeneralDerivedCRSType))]
  [XmlInclude(typeof(DerivedCRSType))]
  [XmlInclude(typeof(ProjectedCRSType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractCRSType")]
  public abstract class AbstractCRSType : IdentifiedObjectType {
    #region Private fields
    private List<domainOfValidity> _domainOfValidity;
    private List<string> _scope;
    #endregion

    /// <summary>
    /// AbstractCRSType class constructor
    /// </summary>
    public AbstractCRSType() {
      _scope = new List<string>();
      _domainOfValidity = new List<domainOfValidity>();
    }

    [XmlElement("domainOfValidity", Order = 0)]
    [JsonProperty("domainOfValidity", Order = 0)]
    public List<domainOfValidity> domainOfValidity {
      get {
        return _domainOfValidity;
      }
      set {
        if ((_domainOfValidity == value)) {
          return;
        }
        if (((_domainOfValidity == null)
                    || (_domainOfValidity.Equals(value) != true))) {
          _domainOfValidity = value;
          OnPropertyChanged("domainOfValidity");
        }
      }
    }

    [XmlElement("scope", Order = 1)]
    [JsonProperty("scope", Order = 1)]
    public List<string> scope {
      get {
        return _scope;
      }
      set {
        if ((_scope == value)) {
          return;
        }
        if (((_scope == null)
                    || (_scope.Equals(value) != true))) {
          _scope = value;
          OnPropertyChanged("scope");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeocentricCRSType")]
  public class GeocentricCRSType : AbstractCRSType {
    #region Private fields
    private object _item;
    private GeodeticDatumPropertyType _usesGeodeticDatum;
    #endregion

    /// <summary>
    /// GeocentricCRSType class constructor
    /// </summary>
    public GeocentricCRSType() {
      _usesGeodeticDatum = new GeodeticDatumPropertyType();
    }

    [XmlElement("usesCartesianCS", typeof(CartesianCSPropertyType), Order = 0)]
    [XmlElement("usesSphericalCS", typeof(SphericalCSPropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("usesGeodeticDatum", Order = 1)]
    public GeodeticDatumPropertyType usesGeodeticDatum {
      get {
        return _usesGeodeticDatum;
      }
      set {
        if ((_usesGeodeticDatum == value)) {
          return;
        }
        if (((_usesGeodeticDatum == null)
                    || (_usesGeodeticDatum.Equals(value) != true))) {
          _usesGeodeticDatum = value;
          OnPropertyChanged("usesGeodeticDatum");
        }
      }
    }
  }

  /// <summary>
  /// gml:CartesianCSPropertyType is a property type for association roles to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CartesianCSPropertyType")]
  public class CartesianCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private CartesianCSType _cartesianCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// CartesianCSPropertyType class constructor
    /// </summary>
    public CartesianCSPropertyType() {
      _cartesianCS = new CartesianCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CartesianCS", Order = 0)]
    public CartesianCSType CartesianCS {
      get {
        return _cartesianCS;
      }
      set {
        if ((_cartesianCS == value)) {
          return;
        }
        if (((_cartesianCS == null)
                    || (_cartesianCS.Equals(value) != true))) {
          _cartesianCS = value;
          OnPropertyChanged("CartesianCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CartesianCSType")]
  public class CartesianCSType : AbstractCoordinateSystemType {
  }

  [XmlInclude(typeof(ObliqueCartesianCSType))]
  [XmlInclude(typeof(AffineCSType))]
  [XmlInclude(typeof(CylindricalCSType))]
  [XmlInclude(typeof(PolarCSType))]
  [XmlInclude(typeof(SphericalCSType))]
  [XmlInclude(typeof(UserDefinedCSType))]
  [XmlInclude(typeof(LinearCSType))]
  [XmlInclude(typeof(TemporalCSType))]
  [XmlInclude(typeof(TimeCSType))]
  [XmlInclude(typeof(VerticalCSType))]
  [XmlInclude(typeof(CartesianCSType))]
  [XmlInclude(typeof(EllipsoidalCSType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractCoordinateSystemType")]
  public abstract class AbstractCoordinateSystemType : IdentifiedObjectType {
    #region Private fields
    private List<CoordinateSystemAxisPropertyType> _axis;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// AbstractCoordinateSystemType class constructor
    /// </summary>
    public AbstractCoordinateSystemType() {
      _axis = new List<CoordinateSystemAxisPropertyType>();
    }

    [XmlElement("axis", Order = 0)]
    [JsonProperty("axis", Order = 0)]
    public List<CoordinateSystemAxisPropertyType> axis {
      get {
        return _axis;
      }
      set {
        if ((_axis == value)) {
          return;
        }
        if (((_axis == null)
                    || (_axis.Equals(value) != true))) {
          _axis = value;
          OnPropertyChanged("axis");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  /// <summary>
  /// gml:CoordinateSystemAxisPropertyType is a property type for association roles to a coordinate system axis, either referencing or containing the definition of that axis.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CoordinateSystemAxisPropertyType")]
  public class CoordinateSystemAxisPropertyType : INotifyPropertyChanged {
    #region Private fields
    private CoordinateSystemAxisType _coordinateSystemAxis;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// CoordinateSystemAxisPropertyType class constructor
    /// </summary>
    public CoordinateSystemAxisPropertyType() {
      _coordinateSystemAxis = new CoordinateSystemAxisType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CoordinateSystemAxis", Order = 0)]
    public CoordinateSystemAxisType CoordinateSystemAxis {
      get {
        return _coordinateSystemAxis;
      }
      set {
        if ((_coordinateSystemAxis == value)) {
          return;
        }
        if (((_coordinateSystemAxis == null)
                    || (_coordinateSystemAxis.Equals(value) != true))) {
          _coordinateSystemAxis = value;
          OnPropertyChanged("CoordinateSystemAxis");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CoordinateSystemAxisType")]
  public class CoordinateSystemAxisType : IdentifiedObjectType {
    #region Private fields
    private CodeType _axisAbbrev;
    private CodeWithAuthorityType _axisDirection;
    private double _minimumValue;
    private double _maximumValue;
    private CodeWithAuthorityType _rangeMeaning;
    private string _uom;
    #endregion

    /// <summary>
    /// CoordinateSystemAxisType class constructor
    /// </summary>
    public CoordinateSystemAxisType() {
      _rangeMeaning = new CodeWithAuthorityType();
      _axisDirection = new CodeWithAuthorityType();
      _axisAbbrev = new CodeType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("axisAbbrev", Order = 0)]
    public CodeType axisAbbrev {
      get {
        return _axisAbbrev;
      }
      set {
        if ((_axisAbbrev == value)) {
          return;
        }
        if (((_axisAbbrev == null)
                    || (_axisAbbrev.Equals(value) != true))) {
          _axisAbbrev = value;
          OnPropertyChanged("axisAbbrev");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("axisDirection", Order = 1)]
    public CodeWithAuthorityType axisDirection {
      get {
        return _axisDirection;
      }
      set {
        if ((_axisDirection == value)) {
          return;
        }
        if (((_axisDirection == null)
                    || (_axisDirection.Equals(value) != true))) {
          _axisDirection = value;
          OnPropertyChanged("axisDirection");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("minimumValue", Order = 2)]
    public double minimumValue {
      get {
        return _minimumValue;
      }
      set {
        if ((_minimumValue.Equals(value) != true)) {
          _minimumValue = value;
          OnPropertyChanged("minimumValue");
        }
      }
    }

    [XmlElement(Order = 3)]
    [JsonProperty("maximumValue", Order = 3)]
    public double maximumValue {
      get {
        return _maximumValue;
      }
      set {
        if ((_maximumValue.Equals(value) != true)) {
          _maximumValue = value;
          OnPropertyChanged("maximumValue");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("rangeMeaning", Order = 4)]
    public CodeWithAuthorityType rangeMeaning {
      get {
        return _rangeMeaning;
      }
      set {
        if ((_rangeMeaning == value)) {
          return;
        }
        if (((_rangeMeaning == null)
                    || (_rangeMeaning.Equals(value) != true))) {
          _rangeMeaning = value;
          OnPropertyChanged("rangeMeaning");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("uom")]
    public string uom {
      get {
        return _uom;
      }
      set {
        if ((_uom == value)) {
          return;
        }
        if (((_uom == null)
                    || (_uom.Equals(value) != true))) {
          _uom = value;
          OnPropertyChanged("uom");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ObliqueCartesianCSType")]
  public class ObliqueCartesianCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AffineCSType")]
  public class AffineCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CylindricalCSType")]
  public class CylindricalCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PolarCSType")]
  public class PolarCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SphericalCSType")]
  public class SphericalCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("UserDefinedCSType")]
  public class UserDefinedCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LinearCSType")]
  public class LinearCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalCSType")]
  public class TemporalCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCSType")]
  public class TimeCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VerticalCSType")]
  public class VerticalCSType : AbstractCoordinateSystemType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EllipsoidalCSType")]
  public class EllipsoidalCSType : AbstractCoordinateSystemType {
  }

  /// <summary>
  /// gml:SphericalCSPropertyType is property type for association roles to a spherical coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SphericalCSPropertyType")]
  public class SphericalCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private SphericalCSType _sphericalCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// SphericalCSPropertyType class constructor
    /// </summary>
    public SphericalCSPropertyType() {
      _sphericalCS = new SphericalCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("SphericalCS", Order = 0)]
    public SphericalCSType SphericalCS {
      get {
        return _sphericalCS;
      }
      set {
        if ((_sphericalCS == value)) {
          return;
        }
        if (((_sphericalCS == null)
                    || (_sphericalCS.Equals(value) != true))) {
          _sphericalCS = value;
          OnPropertyChanged("SphericalCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:GeodeticDatumPropertyType is a property type for association roles to a geodetic datum, either referencing or containing the definition of that datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeodeticDatumPropertyType")]
  public class GeodeticDatumPropertyType : INotifyPropertyChanged {
    #region Private fields
    private GeodeticDatumType _geodeticDatum;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// GeodeticDatumPropertyType class constructor
    /// </summary>
    public GeodeticDatumPropertyType() {
      _geodeticDatum = new GeodeticDatumType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("GeodeticDatum", Order = 0)]
    public GeodeticDatumType GeodeticDatum {
      get {
        return _geodeticDatum;
      }
      set {
        if ((_geodeticDatum == value)) {
          return;
        }
        if (((_geodeticDatum == null)
                    || (_geodeticDatum.Equals(value) != true))) {
          _geodeticDatum = value;
          OnPropertyChanged("GeodeticDatum");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeodeticDatumType")]
  public class GeodeticDatumType : AbstractDatumType {
    #region Private fields
    private PrimeMeridianPropertyType _primeMeridian;
    private EllipsoidPropertyType _ellipsoid;
    #endregion

    /// <summary>
    /// GeodeticDatumType class constructor
    /// </summary>
    public GeodeticDatumType() {
      _ellipsoid = new EllipsoidPropertyType();
      _primeMeridian = new PrimeMeridianPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("primeMeridian", Order = 0)]
    public PrimeMeridianPropertyType primeMeridian {
      get {
        return _primeMeridian;
      }
      set {
        if ((_primeMeridian == value)) {
          return;
        }
        if (((_primeMeridian == null)
                    || (_primeMeridian.Equals(value) != true))) {
          _primeMeridian = value;
          OnPropertyChanged("primeMeridian");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("ellipsoid", Order = 1)]
    public EllipsoidPropertyType ellipsoid {
      get {
        return _ellipsoid;
      }
      set {
        if ((_ellipsoid == value)) {
          return;
        }
        if (((_ellipsoid == null)
                    || (_ellipsoid.Equals(value) != true))) {
          _ellipsoid = value;
          OnPropertyChanged("ellipsoid");
        }
      }
    }
  }

  /// <summary>
  /// gml:PrimeMeridianPropertyType is a property type for association roles to a prime meridian, either referencing or containing the definition of that meridian.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PrimeMeridianPropertyType")]
  public class PrimeMeridianPropertyType : INotifyPropertyChanged {
    #region Private fields
    private PrimeMeridianType _primeMeridian;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// PrimeMeridianPropertyType class constructor
    /// </summary>
    public PrimeMeridianPropertyType() {
      _primeMeridian = new PrimeMeridianType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("PrimeMeridian", Order = 0)]
    public PrimeMeridianType PrimeMeridian {
      get {
        return _primeMeridian;
      }
      set {
        if ((_primeMeridian == value)) {
          return;
        }
        if (((_primeMeridian == null)
                    || (_primeMeridian.Equals(value) != true))) {
          _primeMeridian = value;
          OnPropertyChanged("PrimeMeridian");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:EllipsoidPropertyType is a property type for association roles to an ellipsoid, either referencing or containing the definition of that ellipsoid.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EllipsoidPropertyType")]
  public class EllipsoidPropertyType : INotifyPropertyChanged {
    #region Private fields
    private EllipsoidType _ellipsoid;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// EllipsoidPropertyType class constructor
    /// </summary>
    public EllipsoidPropertyType() {
      _ellipsoid = new EllipsoidType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Ellipsoid", Order = 0)]
    public EllipsoidType Ellipsoid {
      get {
        return _ellipsoid;
      }
      set {
        if ((_ellipsoid == value)) {
          return;
        }
        if (((_ellipsoid == null)
                    || (_ellipsoid.Equals(value) != true))) {
          _ellipsoid = value;
          OnPropertyChanged("Ellipsoid");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalCRSType")]
  public class TemporalCRSType : AbstractCRSType {
    #region Private fields
    private object _item;
    private TemporalDatumPropertyType _temporalDatum;
    #endregion

    /// <summary>
    /// TemporalCRSType class constructor
    /// </summary>
    public TemporalCRSType() {
      _temporalDatum = new TemporalDatumPropertyType();
    }

    [XmlElement("timeCS", typeof(TimeCSPropertyType), Order = 0)]
    [XmlElement("usesTemporalCS", typeof(TemporalCSPropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("temporalDatum", Order = 1)]
    public TemporalDatumPropertyType temporalDatum {
      get {
        return _temporalDatum;
      }
      set {
        if ((_temporalDatum == value)) {
          return;
        }
        if (((_temporalDatum == null)
                    || (_temporalDatum.Equals(value) != true))) {
          _temporalDatum = value;
          OnPropertyChanged("temporalDatum");
        }
      }
    }
  }

  /// <summary>
  /// gml:TimeCSPropertyType is a property type for association roles to a time coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeCSPropertyType")]
  public class TimeCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeCSType _timeCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TimeCSPropertyType class constructor
    /// </summary>
    public TimeCSPropertyType() {
      _timeCS = new TimeCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeCS", Order = 0)]
    public TimeCSType TimeCS {
      get {
        return _timeCS;
      }
      set {
        if ((_timeCS == value)) {
          return;
        }
        if (((_timeCS == null)
                    || (_timeCS.Equals(value) != true))) {
          _timeCS = value;
          OnPropertyChanged("TimeCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalCSPropertyType")]
  public class TemporalCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TemporalCSType _temporalCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TemporalCSPropertyType class constructor
    /// </summary>
    public TemporalCSPropertyType() {
      _temporalCS = new TemporalCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TemporalCS", Order = 0)]
    public TemporalCSType TemporalCS {
      get {
        return _temporalCS;
      }
      set {
        if ((_temporalCS == value)) {
          return;
        }
        if (((_temporalCS == null)
                    || (_temporalCS.Equals(value) != true))) {
          _temporalCS = value;
          OnPropertyChanged("TemporalCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:TemporalDatumPropertyType is a property type for association roles to a temporal datum, either referencing or containing the definition of that datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalDatumPropertyType")]
  public class TemporalDatumPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TemporalDatumType _temporalDatum;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TemporalDatumPropertyType class constructor
    /// </summary>
    public TemporalDatumPropertyType() {
      _temporalDatum = new TemporalDatumType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TemporalDatum", Order = 0)]
    public TemporalDatumType TemporalDatum {
      get {
        return _temporalDatum;
      }
      set {
        if ((_temporalDatum == value)) {
          return;
        }
        if (((_temporalDatum == null)
                    || (_temporalDatum.Equals(value) != true))) {
          _temporalDatum = value;
          OnPropertyChanged("TemporalDatum");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalDatumType")]
  public class TemporalDatumType : TemporalDatumBaseType {
    #region Private fields
    private System.DateTime _origin;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("origin", Order = 0)]
    public System.DateTime origin {
      get {
        return _origin;
      }
      set {
        if ((_origin.Equals(value) != true)) {
          _origin = value;
          OnPropertyChanged("origin");
        }
      }
    }
  }

  /// <summary>
  /// The TemporalDatumBaseType partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorDefinition" and "realizationEpoch" elements.
  /// </summary>
  [XmlInclude(typeof(TemporalDatumType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalDatumBaseType")]
  public abstract class TemporalDatumBaseType : AbstractDatumType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ImageCRSType")]
  public class ImageCRSType : AbstractCRSType {
    #region Private fields
    private object _item;
    private ImageDatumPropertyType _imageDatum;
    #endregion

    /// <summary>
    /// ImageCRSType class constructor
    /// </summary>
    public ImageCRSType() {
      _imageDatum = new ImageDatumPropertyType();
    }

    [XmlElement("affineCS", typeof(AffineCSPropertyType), Order = 0)]
    [XmlElement("cartesianCS", typeof(CartesianCSPropertyType), Order = 0)]
    [XmlElement("usesObliqueCartesianCS", typeof(ObliqueCartesianCSPropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("imageDatum", Order = 1)]
    public ImageDatumPropertyType imageDatum {
      get {
        return _imageDatum;
      }
      set {
        if ((_imageDatum == value)) {
          return;
        }
        if (((_imageDatum == null)
                    || (_imageDatum.Equals(value) != true))) {
          _imageDatum = value;
          OnPropertyChanged("imageDatum");
        }
      }
    }
  }

  /// <summary>
  /// gml:AffineCSPropertyType is a property type for association roles to an affine coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AffineCSPropertyType")]
  public class AffineCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AffineCSType _affineCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// AffineCSPropertyType class constructor
    /// </summary>
    public AffineCSPropertyType() {
      _affineCS = new AffineCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AffineCS", Order = 0)]
    public AffineCSType AffineCS {
      get {
        return _affineCS;
      }
      set {
        if ((_affineCS == value)) {
          return;
        }
        if (((_affineCS == null)
                    || (_affineCS.Equals(value) != true))) {
          _affineCS = value;
          OnPropertyChanged("AffineCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ObliqueCartesianCSPropertyType")]
  public class ObliqueCartesianCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ObliqueCartesianCSType _obliqueCartesianCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ObliqueCartesianCSPropertyType class constructor
    /// </summary>
    public ObliqueCartesianCSPropertyType() {
      _obliqueCartesianCS = new ObliqueCartesianCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("ObliqueCartesianCS", Order = 0)]
    public ObliqueCartesianCSType ObliqueCartesianCS {
      get {
        return _obliqueCartesianCS;
      }
      set {
        if ((_obliqueCartesianCS == value)) {
          return;
        }
        if (((_obliqueCartesianCS == null)
                    || (_obliqueCartesianCS.Equals(value) != true))) {
          _obliqueCartesianCS = value;
          OnPropertyChanged("ObliqueCartesianCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:ImageDatumPropertyType is a property type for association roles to an image datum, either referencing or containing the definition of that datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ImageDatumPropertyType")]
  public class ImageDatumPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ImageDatumType _imageDatum;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ImageDatumPropertyType class constructor
    /// </summary>
    public ImageDatumPropertyType() {
      _imageDatum = new ImageDatumType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("ImageDatum", Order = 0)]
    public ImageDatumType ImageDatum {
      get {
        return _imageDatum;
      }
      set {
        if ((_imageDatum == value)) {
          return;
        }
        if (((_imageDatum == null)
                    || (_imageDatum.Equals(value) != true))) {
          _imageDatum = value;
          OnPropertyChanged("ImageDatum");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ImageDatumType")]
  public class ImageDatumType : AbstractDatumType {
    #region Private fields
    private CodeWithAuthorityType _pixelInCell;
    #endregion

    /// <summary>
    /// ImageDatumType class constructor
    /// </summary>
    public ImageDatumType() {
      _pixelInCell = new CodeWithAuthorityType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("pixelInCell", Order = 0)]
    public CodeWithAuthorityType pixelInCell {
      get {
        return _pixelInCell;
      }
      set {
        if ((_pixelInCell == value)) {
          return;
        }
        if (((_pixelInCell == null)
                    || (_pixelInCell.Equals(value) != true))) {
          _pixelInCell = value;
          OnPropertyChanged("pixelInCell");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EngineeringCRSType")]
  public class EngineeringCRSType : AbstractCRSType {
    #region Private fields
    private CoordinateSystemPropertyType _coordinateSystem;
    private EngineeringDatumPropertyType _engineeringDatum;
    #endregion

    /// <summary>
    /// EngineeringCRSType class constructor
    /// </summary>
    public EngineeringCRSType() {
      _engineeringDatum = new EngineeringDatumPropertyType();
      _coordinateSystem = new CoordinateSystemPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("coordinateSystem", Order = 0)]
    public CoordinateSystemPropertyType coordinateSystem {
      get {
        return _coordinateSystem;
      }
      set {
        if ((_coordinateSystem == value)) {
          return;
        }
        if (((_coordinateSystem == null)
                    || (_coordinateSystem.Equals(value) != true))) {
          _coordinateSystem = value;
          OnPropertyChanged("coordinateSystem");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("engineeringDatum", Order = 1)]
    public EngineeringDatumPropertyType engineeringDatum {
      get {
        return _engineeringDatum;
      }
      set {
        if ((_engineeringDatum == value)) {
          return;
        }
        if (((_engineeringDatum == null)
                    || (_engineeringDatum.Equals(value) != true))) {
          _engineeringDatum = value;
          OnPropertyChanged("engineeringDatum");
        }
      }
    }
  }

  /// <summary>
  /// gml:CoordinateSystemPropertyType is a property type for association roles to a coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CoordinateSystemPropertyType")]
  public class CoordinateSystemPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCoordinateSystemType _abstractCoordinateSystem;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractCoordinateSystem", Order = 0)]
    public AbstractCoordinateSystemType AbstractCoordinateSystem {
      get {
        return _abstractCoordinateSystem;
      }
      set {
        if ((_abstractCoordinateSystem == value)) {
          return;
        }
        if (((_abstractCoordinateSystem == null)
                    || (_abstractCoordinateSystem.Equals(value) != true))) {
          _abstractCoordinateSystem = value;
          OnPropertyChanged("AbstractCoordinateSystem");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:EngineeringDatumPropertyType is a property type for association roles to an engineering datum, either referencing or containing the definition of that datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EngineeringDatumPropertyType")]
  public class EngineeringDatumPropertyType : INotifyPropertyChanged {
    #region Private fields
    private EngineeringDatumType _engineeringDatum;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// EngineeringDatumPropertyType class constructor
    /// </summary>
    public EngineeringDatumPropertyType() {
      _engineeringDatum = new EngineeringDatumType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EngineeringDatum", Order = 0)]
    public EngineeringDatumType EngineeringDatum {
      get {
        return _engineeringDatum;
      }
      set {
        if ((_engineeringDatum == value)) {
          return;
        }
        if (((_engineeringDatum == null)
                    || (_engineeringDatum.Equals(value) != true))) {
          _engineeringDatum = value;
          OnPropertyChanged("EngineeringDatum");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EngineeringDatumType")]
  public class EngineeringDatumType : AbstractDatumType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VerticalCRSType")]
  public class VerticalCRSType : AbstractCRSType {
    #region Private fields
    private VerticalCSPropertyType _verticalCS;
    private VerticalDatumPropertyType _verticalDatum;
    #endregion

    /// <summary>
    /// VerticalCRSType class constructor
    /// </summary>
    public VerticalCRSType() {
      _verticalDatum = new VerticalDatumPropertyType();
      _verticalCS = new VerticalCSPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("verticalCS", Order = 0)]
    public VerticalCSPropertyType verticalCS {
      get {
        return _verticalCS;
      }
      set {
        if ((_verticalCS == value)) {
          return;
        }
        if (((_verticalCS == null)
                    || (_verticalCS.Equals(value) != true))) {
          _verticalCS = value;
          OnPropertyChanged("verticalCS");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("verticalDatum", Order = 1)]
    public VerticalDatumPropertyType verticalDatum {
      get {
        return _verticalDatum;
      }
      set {
        if ((_verticalDatum == value)) {
          return;
        }
        if (((_verticalDatum == null)
                    || (_verticalDatum.Equals(value) != true))) {
          _verticalDatum = value;
          OnPropertyChanged("verticalDatum");
        }
      }
    }
  }

  /// <summary>
  /// gml:VerticalCSPropertyType is a property type for association roles to a vertical coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VerticalCSPropertyType")]
  public class VerticalCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private VerticalCSType _verticalCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// VerticalCSPropertyType class constructor
    /// </summary>
    public VerticalCSPropertyType() {
      _verticalCS = new VerticalCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("VerticalCS", Order = 0)]
    public VerticalCSType VerticalCS {
      get {
        return _verticalCS;
      }
      set {
        if ((_verticalCS == value)) {
          return;
        }
        if (((_verticalCS == null)
                    || (_verticalCS.Equals(value) != true))) {
          _verticalCS = value;
          OnPropertyChanged("VerticalCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:VerticalDatumPropertyType is property type for association roles to a vertical datum, either referencing or containing the definition of that datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VerticalDatumPropertyType")]
  public class VerticalDatumPropertyType : INotifyPropertyChanged {
    #region Private fields
    private VerticalDatumType _verticalDatum;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// VerticalDatumPropertyType class constructor
    /// </summary>
    public VerticalDatumPropertyType() {
      _verticalDatum = new VerticalDatumType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("VerticalDatum", Order = 0)]
    public VerticalDatumType VerticalDatum {
      get {
        return _verticalDatum;
      }
      set {
        if ((_verticalDatum == value)) {
          return;
        }
        if (((_verticalDatum == null)
                    || (_verticalDatum.Equals(value) != true))) {
          _verticalDatum = value;
          OnPropertyChanged("VerticalDatum");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VerticalDatumType")]
  public class VerticalDatumType : AbstractDatumType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CompoundCRSType")]
  public class CompoundCRSType : AbstractCRSType {
    #region Private fields
    private List<SingleCRSPropertyType> _componentReferenceSystem;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// CompoundCRSType class constructor
    /// </summary>
    public CompoundCRSType() {
      _componentReferenceSystem = new List<SingleCRSPropertyType>();
    }

    [XmlElement("componentReferenceSystem", Order = 0)]
    [RequiredAttribute()]
    [JsonProperty("componentReferenceSystem", Order = 0)]
    public List<SingleCRSPropertyType> componentReferenceSystem {
      get {
        return _componentReferenceSystem;
      }
      set {
        if ((_componentReferenceSystem == value)) {
          return;
        }
        if (((_componentReferenceSystem == null)
                    || (_componentReferenceSystem.Equals(value) != true))) {
          ValidationContext validatorPropContext = new ValidationContext(this, null, null);
          validatorPropContext.MemberName = "componentReferenceSystem";
          Validator.ValidateProperty(value, validatorPropContext);
          _componentReferenceSystem = value;
          OnPropertyChanged("componentReferenceSystem");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  /// <summary>
  /// gml:SingleCRSPropertyType is a property type for association roles to a single coordinate reference system, either referencing or containing the definition of that coordinate reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SingleCRSPropertyType")]
  public class SingleCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCRSType _abstractSingleCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractSingleCRS", Order = 0)]
    public AbstractCRSType AbstractSingleCRS {
      get {
        return _abstractSingleCRS;
      }
      set {
        if ((_abstractSingleCRS == value)) {
          return;
        }
        if (((_abstractSingleCRS == null)
                    || (_abstractSingleCRS.Equals(value) != true))) {
          _abstractSingleCRS = value;
          OnPropertyChanged("AbstractSingleCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeographicCRSType")]
  public class GeographicCRSType : AbstractCRSType {
    #region Private fields
    private EllipsoidalCSPropertyType _usesEllipsoidalCS;
    private GeodeticDatumPropertyType _usesGeodeticDatum;
    #endregion

    /// <summary>
    /// GeographicCRSType class constructor
    /// </summary>
    public GeographicCRSType() {
      _usesGeodeticDatum = new GeodeticDatumPropertyType();
      _usesEllipsoidalCS = new EllipsoidalCSPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("usesEllipsoidalCS", Order = 0)]
    public EllipsoidalCSPropertyType usesEllipsoidalCS {
      get {
        return _usesEllipsoidalCS;
      }
      set {
        if ((_usesEllipsoidalCS == value)) {
          return;
        }
        if (((_usesEllipsoidalCS == null)
                    || (_usesEllipsoidalCS.Equals(value) != true))) {
          _usesEllipsoidalCS = value;
          OnPropertyChanged("usesEllipsoidalCS");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("usesGeodeticDatum", Order = 1)]
    public GeodeticDatumPropertyType usesGeodeticDatum {
      get {
        return _usesGeodeticDatum;
      }
      set {
        if ((_usesGeodeticDatum == value)) {
          return;
        }
        if (((_usesGeodeticDatum == null)
                    || (_usesGeodeticDatum.Equals(value) != true))) {
          _usesGeodeticDatum = value;
          OnPropertyChanged("usesGeodeticDatum");
        }
      }
    }
  }

  /// <summary>
  /// gml:EllipsoidalCSPropertyType is a property type for association roles to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EllipsoidalCSPropertyType")]
  public class EllipsoidalCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private EllipsoidalCSType _ellipsoidalCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// EllipsoidalCSPropertyType class constructor
    /// </summary>
    public EllipsoidalCSPropertyType() {
      _ellipsoidalCS = new EllipsoidalCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EllipsoidalCS", Order = 0)]
    public EllipsoidalCSType EllipsoidalCS {
      get {
        return _ellipsoidalCS;
      }
      set {
        if ((_ellipsoidalCS == value)) {
          return;
        }
        if (((_ellipsoidalCS == null)
                    || (_ellipsoidalCS.Equals(value) != true))) {
          _ellipsoidalCS = value;
          OnPropertyChanged("EllipsoidalCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:GeodeticCRS is a coordinate reference system based on a geodetic datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeodeticCRSType")]
  public class GeodeticCRSType : AbstractCRSType {
    #region Private fields
    private object _item;
    private GeodeticDatumPropertyType _geodeticDatum;
    #endregion

    /// <summary>
    /// GeodeticCRSType class constructor
    /// </summary>
    public GeodeticCRSType() {
      _geodeticDatum = new GeodeticDatumPropertyType();
    }

    [XmlElement("cartesianCS", typeof(CartesianCSPropertyType), Order = 0)]
    [XmlElement("ellipsoidalCS", typeof(EllipsoidalCSPropertyType), Order = 0)]
    [XmlElement("sphericalCS", typeof(SphericalCSPropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("geodeticDatum", Order = 1)]
    public GeodeticDatumPropertyType geodeticDatum {
      get {
        return _geodeticDatum;
      }
      set {
        if ((_geodeticDatum == value)) {
          return;
        }
        if (((_geodeticDatum == null)
                    || (_geodeticDatum.Equals(value) != true))) {
          _geodeticDatum = value;
          OnPropertyChanged("geodeticDatum");
        }
      }
    }
  }

  [XmlInclude(typeof(DerivedCRSType))]
  [XmlInclude(typeof(ProjectedCRSType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralDerivedCRSType")]
  public abstract class AbstractGeneralDerivedCRSType : AbstractCRSType {
    #region Private fields
    private GeneralConversionPropertyType _conversion;
    #endregion

    /// <summary>
    /// AbstractGeneralDerivedCRSType class constructor
    /// </summary>
    public AbstractGeneralDerivedCRSType() {
      _conversion = new GeneralConversionPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("conversion", Order = 0)]
    public GeneralConversionPropertyType conversion {
      get {
        return _conversion;
      }
      set {
        if ((_conversion == value)) {
          return;
        }
        if (((_conversion == null)
                    || (_conversion.Equals(value) != true))) {
          _conversion = value;
          OnPropertyChanged("conversion");
        }
      }
    }
  }

  /// <summary>
  /// gml:GeneralConversionPropertyType is a property type for association roles to a general conversion, either referencing or containing the definition of that conversion.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeneralConversionPropertyType")]
  public class GeneralConversionPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeneralConversionType _abstractGeneralConversion;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeneralConversion", Order = 0)]
    public AbstractGeneralConversionType AbstractGeneralConversion {
      get {
        return _abstractGeneralConversion;
      }
      set {
        if ((_abstractGeneralConversion == value)) {
          return;
        }
        if (((_abstractGeneralConversion == null)
                    || (_abstractGeneralConversion.Equals(value) != true))) {
          _abstractGeneralConversion = value;
          OnPropertyChanged("AbstractGeneralConversion");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(ConversionType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralConversionType")]
  public abstract class AbstractGeneralConversionType : AbstractCoordinateOperationType {
  }

  [XmlInclude(typeof(PassThroughOperationType))]
  [XmlInclude(typeof(ConcatenatedOperationType))]
  [XmlInclude(typeof(AbstractGeneralTransformationType))]
  [XmlInclude(typeof(TransformationType))]
  [XmlInclude(typeof(AbstractGeneralConversionType))]
  [XmlInclude(typeof(ConversionType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractCoordinateOperationType")]
  public abstract class AbstractCoordinateOperationType : IdentifiedObjectType {
    #region Private fields
    private domainOfValidity _domainOfValidity;
    private List<string> _scope;
    private string _operationVersion;
    private List<coordinateOperationAccuracy> _coordinateOperationAccuracy;
    private CRSPropertyType _sourceCRS;
    private CRSPropertyType _targetCRS;
    #endregion

    /// <summary>
    /// AbstractCoordinateOperationType class constructor
    /// </summary>
    public AbstractCoordinateOperationType() {
      _targetCRS = new CRSPropertyType();
      _sourceCRS = new CRSPropertyType();
      _coordinateOperationAccuracy = new List<coordinateOperationAccuracy>();
      _scope = new List<string>();
      _domainOfValidity = new domainOfValidity();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("domainOfValidity", Order = 0)]
    public domainOfValidity domainOfValidity {
      get {
        return _domainOfValidity;
      }
      set {
        if ((_domainOfValidity == value)) {
          return;
        }
        if (((_domainOfValidity == null)
                    || (_domainOfValidity.Equals(value) != true))) {
          _domainOfValidity = value;
          OnPropertyChanged("domainOfValidity");
        }
      }
    }

    [XmlElement("scope", Order = 1)]
    [JsonProperty("scope", Order = 1)]
    public List<string> scope {
      get {
        return _scope;
      }
      set {
        if ((_scope == value)) {
          return;
        }
        if (((_scope == null)
                    || (_scope.Equals(value) != true))) {
          _scope = value;
          OnPropertyChanged("scope");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("operationVersion", Order = 2)]
    public string operationVersion {
      get {
        return _operationVersion;
      }
      set {
        if ((_operationVersion == value)) {
          return;
        }
        if (((_operationVersion == null)
                    || (_operationVersion.Equals(value) != true))) {
          _operationVersion = value;
          OnPropertyChanged("operationVersion");
        }
      }
    }

    [XmlElement("coordinateOperationAccuracy", Order = 3)]
    [JsonProperty("coordinateOperationAccuracy", Order = 3)]
    public List<coordinateOperationAccuracy> coordinateOperationAccuracy {
      get {
        return _coordinateOperationAccuracy;
      }
      set {
        if ((_coordinateOperationAccuracy == value)) {
          return;
        }
        if (((_coordinateOperationAccuracy == null)
                    || (_coordinateOperationAccuracy.Equals(value) != true))) {
          _coordinateOperationAccuracy = value;
          OnPropertyChanged("coordinateOperationAccuracy");
        }
      }
    }

    [XmlElement(Order = 4)]
    [JsonProperty("sourceCRS", Order = 4)]
    public CRSPropertyType sourceCRS {
      get {
        return _sourceCRS;
      }
      set {
        if ((_sourceCRS == value)) {
          return;
        }
        if (((_sourceCRS == null)
                    || (_sourceCRS.Equals(value) != true))) {
          _sourceCRS = value;
          OnPropertyChanged("sourceCRS");
        }
      }
    }

    [XmlElement(Order = 5)]
    [JsonProperty("targetCRS", Order = 5)]
    public CRSPropertyType targetCRS {
      get {
        return _targetCRS;
      }
      set {
        if ((_targetCRS == value)) {
          return;
        }
        if (((_targetCRS == null)
                    || (_targetCRS.Equals(value) != true))) {
          _targetCRS = value;
          OnPropertyChanged("targetCRS");
        }
      }
    }
  }

  /// <summary>
  /// gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("coordinateOperationAccuracy")]
  public class coordinateOperationAccuracy : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_PositionalAccuracy_Type _abstractDQ_PositionalAccuracy;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Namespace = "http://www.isotc211.org/2005/gmd", Order = 0)]
    [JsonProperty("AbstractDQ_PositionalAccuracy", Order = 0)]
    public AbstractDQ_PositionalAccuracy_Type AbstractDQ_PositionalAccuracy {
      get {
        return _abstractDQ_PositionalAccuracy;
      }
      set {
        if ((_abstractDQ_PositionalAccuracy == value)) {
          return;
        }
        if (((_abstractDQ_PositionalAccuracy == null)
                    || (_abstractDQ_PositionalAccuracy.Equals(value) != true))) {
          _abstractDQ_PositionalAccuracy = value;
          OnPropertyChanged("AbstractDQ_PositionalAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:CRSPropertyType is a property type for association roles to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CRSPropertyType")]
  public class CRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCRSType _abstractCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractCRS", Order = 0)]
    public AbstractCRSType AbstractCRS {
      get {
        return _abstractCRS;
      }
      set {
        if ((_abstractCRS == value)) {
          return;
        }
        if (((_abstractCRS == null)
                    || (_abstractCRS.Equals(value) != true))) {
          _abstractCRS = value;
          OnPropertyChanged("AbstractCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PassThroughOperationType")]
  public class PassThroughOperationType : AbstractCoordinateOperationType {
    #region Private fields
    private List<string> _modifiedCoordinate;
    private CoordinateOperationPropertyType _coordOperation;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// PassThroughOperationType class constructor
    /// </summary>
    public PassThroughOperationType() {
      _coordOperation = new CoordinateOperationPropertyType();
      _modifiedCoordinate = new List<string>();
    }

    [XmlElement("modifiedCoordinate", DataType = "positiveInteger", Order = 0)]
    [JsonProperty("modifiedCoordinate", Order = 0)]
    public List<string> modifiedCoordinate {
      get {
        return _modifiedCoordinate;
      }
      set {
        if ((_modifiedCoordinate == value)) {
          return;
        }
        if (((_modifiedCoordinate == null)
                    || (_modifiedCoordinate.Equals(value) != true))) {
          _modifiedCoordinate = value;
          OnPropertyChanged("modifiedCoordinate");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("coordOperation", Order = 1)]
    public CoordinateOperationPropertyType coordOperation {
      get {
        return _coordOperation;
      }
      set {
        if ((_coordOperation == value)) {
          return;
        }
        if (((_coordOperation == null)
                    || (_coordOperation.Equals(value) != true))) {
          _coordOperation = value;
          OnPropertyChanged("coordOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  /// <summary>
  /// gml:CoordinateOperationPropertyType is a property type for association roles to a coordinate operation, either referencing or containing the definition of that coordinate operation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CoordinateOperationPropertyType")]
  public class CoordinateOperationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCoordinateOperationType _abstractCoordinateOperation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractCoordinateOperation", Order = 0)]
    public AbstractCoordinateOperationType AbstractCoordinateOperation {
      get {
        return _abstractCoordinateOperation;
      }
      set {
        if ((_abstractCoordinateOperation == value)) {
          return;
        }
        if (((_abstractCoordinateOperation == null)
                    || (_abstractCoordinateOperation.Equals(value) != true))) {
          _abstractCoordinateOperation = value;
          OnPropertyChanged("AbstractCoordinateOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:ConcatenatedOperation is an ordered sequence of two or more coordinate operations. This sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
  /// The gml:coordOperation property elements are an ordered sequence of associations to the two or more operations used by this concatenated operation. The AggregationAttributeGroup should be used to specify that the coordOperation associations are ordered.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConcatenatedOperationType")]
  public class ConcatenatedOperationType : AbstractCoordinateOperationType {
    #region Private fields
    private List<CoordinateOperationPropertyType> _coordOperation;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// ConcatenatedOperationType class constructor
    /// </summary>
    public ConcatenatedOperationType() {
      _coordOperation = new List<CoordinateOperationPropertyType>();
    }

    [XmlElement("coordOperation", Order = 0)]
    [RequiredAttribute()]
    [JsonProperty("coordOperation", Order = 0)]
    public List<CoordinateOperationPropertyType> coordOperation {
      get {
        return _coordOperation;
      }
      set {
        if ((_coordOperation == value)) {
          return;
        }
        if (((_coordOperation == null)
                    || (_coordOperation.Equals(value) != true))) {
          ValidationContext validatorPropContext = new ValidationContext(this, null, null);
          validatorPropContext.MemberName = "coordOperation";
          Validator.ValidateProperty(value, validatorPropContext);
          _coordOperation = value;
          OnPropertyChanged("coordOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [XmlInclude(typeof(TransformationType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralTransformationType")]
  public abstract class AbstractGeneralTransformationType : AbstractCoordinateOperationType {
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TransformationType")]
  public class TransformationType : AbstractGeneralTransformationType {
    #region Private fields
    private OperationMethodPropertyType _method;
    private List<AbstractGeneralParameterValuePropertyType> _parameterValue;
    #endregion

    /// <summary>
    /// TransformationType class constructor
    /// </summary>
    public TransformationType() {
      _parameterValue = new List<AbstractGeneralParameterValuePropertyType>();
      _method = new OperationMethodPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("method", Order = 0)]
    public OperationMethodPropertyType method {
      get {
        return _method;
      }
      set {
        if ((_method == value)) {
          return;
        }
        if (((_method == null)
                    || (_method.Equals(value) != true))) {
          _method = value;
          OnPropertyChanged("method");
        }
      }
    }

    [XmlElement("parameterValue", Order = 1)]
    [JsonProperty("parameterValue", Order = 1)]
    public List<AbstractGeneralParameterValuePropertyType> parameterValue {
      get {
        return _parameterValue;
      }
      set {
        if ((_parameterValue == value)) {
          return;
        }
        if (((_parameterValue == null)
                    || (_parameterValue.Equals(value) != true))) {
          _parameterValue = value;
          OnPropertyChanged("parameterValue");
        }
      }
    }
  }

  /// <summary>
  /// gml:OperationMethodPropertyType is a property type for association roles to a concrete general-purpose operation method, either referencing or containing the definition of that method.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationMethodPropertyType")]
  public class OperationMethodPropertyType : INotifyPropertyChanged {
    #region Private fields
    private OperationMethodType _operationMethod;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// OperationMethodPropertyType class constructor
    /// </summary>
    public OperationMethodPropertyType() {
      _operationMethod = new OperationMethodType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("OperationMethod", Order = 0)]
    public OperationMethodType OperationMethod {
      get {
        return _operationMethod;
      }
      set {
        if ((_operationMethod == value)) {
          return;
        }
        if (((_operationMethod == null)
                    || (_operationMethod.Equals(value) != true))) {
          _operationMethod = value;
          OnPropertyChanged("OperationMethod");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationMethodType")]
  public class OperationMethodType : IdentifiedObjectType {
    #region Private fields
    private CodeType _formula;
    private string _sourceDimensions;
    private string _targetDimensions;
    private List<AbstractGeneralOperationParameterPropertyType> _generalOperationParameter;
    #endregion

    /// <summary>
    /// OperationMethodType class constructor
    /// </summary>
    public OperationMethodType() {
      _generalOperationParameter = new List<AbstractGeneralOperationParameterPropertyType>();
      _formula = new CodeType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("formula", Order = 0)]
    public CodeType formula {
      get {
        return _formula;
      }
      set {
        if ((_formula == value)) {
          return;
        }
        if (((_formula == null)
                    || (_formula.Equals(value) != true))) {
          _formula = value;
          OnPropertyChanged("formula");
        }
      }
    }

    [XmlElement(DataType = "positiveInteger", Order = 1)]
    [JsonProperty("sourceDimensions", Order = 1)]
    public string sourceDimensions {
      get {
        return _sourceDimensions;
      }
      set {
        if ((_sourceDimensions == value)) {
          return;
        }
        if (((_sourceDimensions == null)
                    || (_sourceDimensions.Equals(value) != true))) {
          _sourceDimensions = value;
          OnPropertyChanged("sourceDimensions");
        }
      }
    }

    [XmlElement(DataType = "positiveInteger", Order = 2)]
    [JsonProperty("targetDimensions", Order = 2)]
    public string targetDimensions {
      get {
        return _targetDimensions;
      }
      set {
        if ((_targetDimensions == value)) {
          return;
        }
        if (((_targetDimensions == null)
                    || (_targetDimensions.Equals(value) != true))) {
          _targetDimensions = value;
          OnPropertyChanged("targetDimensions");
        }
      }
    }

    [XmlElement("generalOperationParameter", Order = 3)]
    [JsonProperty("generalOperationParameter", Order = 3)]
    public List<AbstractGeneralOperationParameterPropertyType> generalOperationParameter {
      get {
        return _generalOperationParameter;
      }
      set {
        if ((_generalOperationParameter == value)) {
          return;
        }
        if (((_generalOperationParameter == null)
                    || (_generalOperationParameter.Equals(value) != true))) {
          _generalOperationParameter = value;
          OnPropertyChanged("generalOperationParameter");
        }
      }
    }
  }

  /// <summary>
  /// gml:AbstractGeneralOperationParameterPropertyType is a property type for association roles to an operation parameter or group, either referencing or containing the definition of that parameter or group.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralOperationParameterPropertyType")]
  public class AbstractGeneralOperationParameterPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeneralOperationParameterType _abstractGeneralOperationParameter;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeneralOperationParameter", Order = 0)]
    public AbstractGeneralOperationParameterType AbstractGeneralOperationParameter {
      get {
        return _abstractGeneralOperationParameter;
      }
      set {
        if ((_abstractGeneralOperationParameter == value)) {
          return;
        }
        if (((_abstractGeneralOperationParameter == null)
                    || (_abstractGeneralOperationParameter.Equals(value) != true))) {
          _abstractGeneralOperationParameter = value;
          OnPropertyChanged("AbstractGeneralOperationParameter");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(OperationParameterGroupType))]
  [XmlInclude(typeof(OperationParameterType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralOperationParameterType")]
  public abstract class AbstractGeneralOperationParameterType : IdentifiedObjectType {
    #region Private fields
    private string _minimumOccurs;
    #endregion

    [XmlElement(DataType = "nonNegativeInteger", Order = 0)]
    [JsonProperty("minimumOccurs", Order = 0)]
    public string minimumOccurs {
      get {
        return _minimumOccurs;
      }
      set {
        if ((_minimumOccurs == value)) {
          return;
        }
        if (((_minimumOccurs == null)
                    || (_minimumOccurs.Equals(value) != true))) {
          _minimumOccurs = value;
          OnPropertyChanged("minimumOccurs");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationParameterGroupType")]
  public class OperationParameterGroupType : AbstractGeneralOperationParameterType {
    #region Private fields
    private string _maximumOccurs;
    private List<AbstractGeneralOperationParameterPropertyType> _generalOperationParameter;
    #endregion

    /// <summary>
    /// OperationParameterGroupType class constructor
    /// </summary>
    public OperationParameterGroupType() {
      _generalOperationParameter = new List<AbstractGeneralOperationParameterPropertyType>();
    }

    [XmlElement(DataType = "positiveInteger", Order = 0)]
    [JsonProperty("maximumOccurs", Order = 0)]
    public string maximumOccurs {
      get {
        return _maximumOccurs;
      }
      set {
        if ((_maximumOccurs == value)) {
          return;
        }
        if (((_maximumOccurs == null)
                    || (_maximumOccurs.Equals(value) != true))) {
          _maximumOccurs = value;
          OnPropertyChanged("maximumOccurs");
        }
      }
    }

    [XmlElement("generalOperationParameter", Order = 1)]
    [RequiredAttribute()]
    [JsonProperty("generalOperationParameter", Order = 1)]
    public List<AbstractGeneralOperationParameterPropertyType> generalOperationParameter {
      get {
        return _generalOperationParameter;
      }
      set {
        if ((_generalOperationParameter == value)) {
          return;
        }
        if (((_generalOperationParameter == null)
                    || (_generalOperationParameter.Equals(value) != true))) {
          ValidationContext validatorPropContext = new ValidationContext(this, null, null);
          validatorPropContext.MemberName = "generalOperationParameter";
          Validator.ValidateProperty(value, validatorPropContext);
          _generalOperationParameter = value;
          OnPropertyChanged("generalOperationParameter");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationParameterType")]
  public class OperationParameterType : AbstractGeneralOperationParameterType {
  }

  /// <summary>
  /// gml:AbstractGeneralParameterValuePropertyType is a  property type for inline association roles to a parameter value or group of parameter values, always containing the values.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralParameterValuePropertyType")]
  public class AbstractGeneralParameterValuePropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeneralParameterValueType _abstractGeneralParameterValue;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeneralParameterValue", Order = 0)]
    public AbstractGeneralParameterValueType AbstractGeneralParameterValue {
      get {
        return _abstractGeneralParameterValue;
      }
      set {
        if ((_abstractGeneralParameterValue == value)) {
          return;
        }
        if (((_abstractGeneralParameterValue == null)
                    || (_abstractGeneralParameterValue.Equals(value) != true))) {
          _abstractGeneralParameterValue = value;
          OnPropertyChanged("AbstractGeneralParameterValue");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [XmlInclude(typeof(ParameterValueGroupType))]
  [XmlInclude(typeof(ParameterValueType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractGeneralParameterValueType")]
  public abstract class AbstractGeneralParameterValueType : INotifyPropertyChanged {
    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ParameterValueGroupType")]
  public class ParameterValueGroupType : AbstractGeneralParameterValueType {
    #region Private fields
    private List<AbstractGeneralParameterValuePropertyType> _parameterValue;
    private OperationParameterGroupPropertyType _group;
    #endregion

    /// <summary>
    /// ParameterValueGroupType class constructor
    /// </summary>
    public ParameterValueGroupType() {
      _group = new OperationParameterGroupPropertyType();
      _parameterValue = new List<AbstractGeneralParameterValuePropertyType>();
    }

    [XmlElement("parameterValue", Order = 0)]
    [RequiredAttribute()]
    [JsonProperty("parameterValue", Order = 0)]
    public List<AbstractGeneralParameterValuePropertyType> parameterValue {
      get {
        return _parameterValue;
      }
      set {
        if ((_parameterValue == value)) {
          return;
        }
        if (((_parameterValue == null)
                    || (_parameterValue.Equals(value) != true))) {
          ValidationContext validatorPropContext = new ValidationContext(this, null, null);
          validatorPropContext.MemberName = "parameterValue";
          Validator.ValidateProperty(value, validatorPropContext);
          _parameterValue = value;
          OnPropertyChanged("parameterValue");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("group", Order = 1)]
    public OperationParameterGroupPropertyType group {
      get {
        return _group;
      }
      set {
        if ((_group == value)) {
          return;
        }
        if (((_group == null)
                    || (_group.Equals(value) != true))) {
          _group = value;
          OnPropertyChanged("group");
        }
      }
    }
  }

  /// <summary>
  /// gml:OperationParameterPropertyType is a property type for association roles to an operation parameter group, either referencing or containing the definition of that parameter group.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationParameterGroupPropertyType")]
  public class OperationParameterGroupPropertyType : INotifyPropertyChanged {
    #region Private fields
    private OperationParameterGroupType _operationParameterGroup;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// OperationParameterGroupPropertyType class constructor
    /// </summary>
    public OperationParameterGroupPropertyType() {
      _operationParameterGroup = new OperationParameterGroupType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("OperationParameterGroup", Order = 0)]
    public OperationParameterGroupType OperationParameterGroup {
      get {
        return _operationParameterGroup;
      }
      set {
        if ((_operationParameterGroup == value)) {
          return;
        }
        if (((_operationParameterGroup == null)
                    || (_operationParameterGroup.Equals(value) != true))) {
          _operationParameterGroup = value;
          OnPropertyChanged("OperationParameterGroup");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ParameterValueType")]
  public class ParameterValueType : AbstractGeneralParameterValueType {
    #region Private fields
    private object _item;
    private ItemChoiceType2 _itemElementName;
    private OperationParameterPropertyType _operationParameter;
    #endregion

    /// <summary>
    /// ParameterValueType class constructor
    /// </summary>
    public ParameterValueType() {
      _operationParameter = new OperationParameterPropertyType();
    }

    [XmlElement("booleanValue", typeof(bool), Order = 0)]
    [XmlElement("dmsAngleValue", typeof(DMSAngleType), Order = 0)]
    [XmlElement("integerValue", typeof(string), DataType = "positiveInteger", Order = 0)]
    [XmlElement("integerValueList", typeof(string), DataType = "integer", Order = 0)]
    [XmlElement("stringValue", typeof(string), Order = 0)]
    [XmlElement("value", typeof(MeasureType), Order = 0)]
    [XmlElement("valueFile", typeof(string), DataType = "anyURI", Order = 0)]
    [XmlElement("valueList", typeof(MeasureListType), Order = 0)]
    [XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [XmlIgnore]
    public ItemChoiceType2 ItemElementName {
      get {
        return _itemElementName;
      }
      set {
        if ((_itemElementName.Equals(value) != true)) {
          _itemElementName = value;
          OnPropertyChanged("ItemElementName");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("operationParameter", Order = 2)]
    public OperationParameterPropertyType operationParameter {
      get {
        return _operationParameter;
      }
      set {
        if ((_operationParameter == value)) {
          return;
        }
        if (((_operationParameter == null)
                    || (_operationParameter.Equals(value) != true))) {
          _operationParameter = value;
          OnPropertyChanged("operationParameter");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DMSAngleType")]
  public class DMSAngleType : INotifyPropertyChanged {
    #region Private fields
    private DegreesType _degrees;
    private object[] _items;
    private ItemsChoiceType8[] _itemsElementName;
    #endregion

    /// <summary>
    /// DMSAngleType class constructor
    /// </summary>
    public DMSAngleType() {
      _degrees = new DegreesType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("degrees", Order = 0)]
    public DegreesType degrees {
      get {
        return _degrees;
      }
      set {
        if ((_degrees == value)) {
          return;
        }
        if (((_degrees == null)
                    || (_degrees.Equals(value) != true))) {
          _degrees = value;
          OnPropertyChanged("degrees");
        }
      }
    }

    [XmlElement("decimalMinutes", typeof(decimal), Order = 1)]
    [XmlElement("minutes", typeof(string), DataType = "nonNegativeInteger", Order = 1)]
    [XmlElement("seconds", typeof(decimal), Order = 1)]
    [XmlChoiceIdentifierAttribute("ItemsElementName")]
    public object[] Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlElement("ItemsElementName", Order = 2)]
    [XmlIgnore]
    public ItemsChoiceType8[] ItemsElementName {
      get {
        return _itemsElementName;
      }
      set {
        if ((_itemsElementName == value)) {
          return;
        }
        if (((_itemsElementName == null)
                    || (_itemsElementName.Equals(value) != true))) {
          _itemsElementName = value;
          OnPropertyChanged("ItemsElementName");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DegreesType")]
  public class DegreesType : INotifyPropertyChanged {
    #region Private fields
    private DegreesTypeDirection _direction;
    private string _value;
    #endregion

    [XmlAttribute]
    public DegreesTypeDirection direction {
      get {
        return _direction;
      }
      set {
        if ((_direction.Equals(value) != true)) {
          _direction = value;
          OnPropertyChanged("direction");
        }
      }
    }

    [XmlTextAttribute(DataType = "nonNegativeInteger")]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  public enum DegreesTypeDirection {
    N,
    E,
    S,
    W,
    [XmlEnumAttribute("+")]
    [EnumMember(Value = "+")]
    Item,
    [XmlEnumAttribute("-")]
    [EnumMember(Value = "-")]
    Item1,
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemsChoiceType8 {
    decimalMinutes,
    minutes,
    seconds,
  }

  /// <summary>
  /// gml:MeasureListType provides for a list of quantities.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MeasureListType")]
  public class MeasureListType : INotifyPropertyChanged {
    #region Private fields
    private string _uom;
    private List<double> _text;
    #endregion

    /// <summary>
    /// MeasureListType class constructor
    /// </summary>
    public MeasureListType() {
      _text = new List<double>();
    }

    [XmlAttribute]
    [JsonProperty("uom")]
    public string uom {
      get {
        return _uom;
      }
      set {
        if ((_uom == value)) {
          return;
        }
        if (((_uom == null)
                    || (_uom.Equals(value) != true))) {
          _uom = value;
          OnPropertyChanged("uom");
        }
      }
    }

    [XmlAttribute]
    public List<double> Text {
      get {
        return _text;
      }
      set {
        if ((_text == value)) {
          return;
        }
        if (((_text == null)
                    || (_text.Equals(value) != true))) {
          _text = value;
          OnPropertyChanged("Text");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml", IncludeInSchema = false)]
  public enum ItemChoiceType2 {
    booleanValue,
    dmsAngleValue,
    integerValue,
    integerValueList,
    stringValue,
    value,
    valueFile,
    valueList,
  }

  /// <summary>
  /// gml:OperationParameterPropertyType is a property type for association roles to an operation parameter, either referencing or containing the definition of that parameter.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationParameterPropertyType")]
  public class OperationParameterPropertyType : INotifyPropertyChanged {
    #region Private fields
    private OperationParameterType _operationParameter;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// OperationParameterPropertyType class constructor
    /// </summary>
    public OperationParameterPropertyType() {
      _operationParameter = new OperationParameterType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("OperationParameter", Order = 0)]
    public OperationParameterType OperationParameter {
      get {
        return _operationParameter;
      }
      set {
        if ((_operationParameter == value)) {
          return;
        }
        if (((_operationParameter == null)
                    || (_operationParameter.Equals(value) != true))) {
          _operationParameter = value;
          OnPropertyChanged("OperationParameter");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConversionType")]
  public class ConversionType : AbstractGeneralConversionType {
    #region Private fields
    private OperationMethodPropertyType _method;
    private List<AbstractGeneralParameterValuePropertyType> _parameterValue;
    #endregion

    /// <summary>
    /// ConversionType class constructor
    /// </summary>
    public ConversionType() {
      _parameterValue = new List<AbstractGeneralParameterValuePropertyType>();
      _method = new OperationMethodPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("method", Order = 0)]
    public OperationMethodPropertyType method {
      get {
        return _method;
      }
      set {
        if ((_method == value)) {
          return;
        }
        if (((_method == null)
                    || (_method.Equals(value) != true))) {
          _method = value;
          OnPropertyChanged("method");
        }
      }
    }

    [XmlElement("parameterValue", Order = 1)]
    [JsonProperty("parameterValue", Order = 1)]
    public List<AbstractGeneralParameterValuePropertyType> parameterValue {
      get {
        return _parameterValue;
      }
      set {
        if ((_parameterValue == value)) {
          return;
        }
        if (((_parameterValue == null)
                    || (_parameterValue.Equals(value) != true))) {
          _parameterValue = value;
          OnPropertyChanged("parameterValue");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DerivedCRSType")]
  public class DerivedCRSType : AbstractGeneralDerivedCRSType {
    #region Private fields
    private SingleCRSPropertyType _baseCRS;
    private CodeWithAuthorityType _derivedCRSType;
    private CoordinateSystemPropertyType _coordinateSystem;
    #endregion

    /// <summary>
    /// DerivedCRSType class constructor
    /// </summary>
    public DerivedCRSType() {
      _coordinateSystem = new CoordinateSystemPropertyType();
      _derivedCRSType = new CodeWithAuthorityType();
      _baseCRS = new SingleCRSPropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("baseCRS", Order = 0)]
    public SingleCRSPropertyType baseCRS {
      get {
        return _baseCRS;
      }
      set {
        if ((_baseCRS == value)) {
          return;
        }
        if (((_baseCRS == null)
                    || (_baseCRS.Equals(value) != true))) {
          _baseCRS = value;
          OnPropertyChanged("baseCRS");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("derivedCRSType", Order = 1)]
    public CodeWithAuthorityType derivedCRSType {
      get {
        return _derivedCRSType;
      }
      set {
        if ((_derivedCRSType == value)) {
          return;
        }
        if (((_derivedCRSType == null)
                    || (_derivedCRSType.Equals(value) != true))) {
          _derivedCRSType = value;
          OnPropertyChanged("derivedCRSType");
        }
      }
    }

    [XmlElement(Order = 2)]
    [JsonProperty("coordinateSystem", Order = 2)]
    public CoordinateSystemPropertyType coordinateSystem {
      get {
        return _coordinateSystem;
      }
      set {
        if ((_coordinateSystem == value)) {
          return;
        }
        if (((_coordinateSystem == null)
                    || (_coordinateSystem.Equals(value) != true))) {
          _coordinateSystem = value;
          OnPropertyChanged("coordinateSystem");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ProjectedCRSType")]
  public class ProjectedCRSType : AbstractGeneralDerivedCRSType {
    #region Private fields
    private object _item;
    private CartesianCSPropertyType _cartesianCS;
    #endregion

    /// <summary>
    /// ProjectedCRSType class constructor
    /// </summary>
    public ProjectedCRSType() {
      _cartesianCS = new CartesianCSPropertyType();
    }

    [XmlElement("baseGeodeticCRS", typeof(GeodeticCRSPropertyType), Order = 0)]
    [XmlElement("baseGeographicCRS", typeof(GeographicCRSPropertyType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("cartesianCS", Order = 1)]
    public CartesianCSPropertyType cartesianCS {
      get {
        return _cartesianCS;
      }
      set {
        if ((_cartesianCS == value)) {
          return;
        }
        if (((_cartesianCS == null)
                    || (_cartesianCS.Equals(value) != true))) {
          _cartesianCS = value;
          OnPropertyChanged("cartesianCS");
        }
      }
    }
  }

  /// <summary>
  /// gml:GeodeticCRSPropertyType is a property type for association roles to a geodetic coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeodeticCRSPropertyType")]
  public class GeodeticCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private GeodeticCRSType _geodeticCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// GeodeticCRSPropertyType class constructor
    /// </summary>
    public GeodeticCRSPropertyType() {
      _geodeticCRS = new GeodeticCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("GeodeticCRS", Order = 0)]
    public GeodeticCRSType GeodeticCRS {
      get {
        return _geodeticCRS;
      }
      set {
        if ((_geodeticCRS == value)) {
          return;
        }
        if (((_geodeticCRS == null)
                    || (_geodeticCRS.Equals(value) != true))) {
          _geodeticCRS = value;
          OnPropertyChanged("GeodeticCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeographicCRSPropertyType")]
  public class GeographicCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private GeographicCRSType _geographicCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// GeographicCRSPropertyType class constructor
    /// </summary>
    public GeographicCRSPropertyType() {
      _geographicCRS = new GeographicCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("GeographicCRS", Order = 0)]
    public GeographicCRSType GeographicCRS {
      get {
        return _geographicCRS;
      }
      set {
        if ((_geographicCRS == value)) {
          return;
        }
        if (((_geographicCRS == null)
                    || (_geographicCRS.Equals(value) != true))) {
          _geographicCRS = value;
          OnPropertyChanged("GeographicCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_GeographicExtent_PropertyType")]
  public class EX_GeographicExtent_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractEX_GeographicExtent_Type _abstractEX_GeographicExtent;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractEX_GeographicExtent", Order = 0)]
    public AbstractEX_GeographicExtent_Type AbstractEX_GeographicExtent {
      get {
        return _abstractEX_GeographicExtent;
      }
      set {
        if ((_abstractEX_GeographicExtent == value)) {
          return;
        }
        if (((_abstractEX_GeographicExtent == null)
                    || (_abstractEX_GeographicExtent.Equals(value) != true))) {
          _abstractEX_GeographicExtent = value;
          OnPropertyChanged("AbstractEX_GeographicExtent");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_TemporalExtent_PropertyType")]
  public class EX_TemporalExtent_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_TemporalExtent_Type _eX_TemporalExtent;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_TemporalExtent_PropertyType class constructor
    /// </summary>
    public EX_TemporalExtent_PropertyType() {
      _eX_TemporalExtent = new EX_TemporalExtent_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_TemporalExtent", Order = 0)]
    public EX_TemporalExtent_Type EX_TemporalExtent {
      get {
        return _eX_TemporalExtent;
      }
      set {
        if ((_eX_TemporalExtent == value)) {
          return;
        }
        if (((_eX_TemporalExtent == null)
                    || (_eX_TemporalExtent.Equals(value) != true))) {
          _eX_TemporalExtent = value;
          OnPropertyChanged("EX_TemporalExtent");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_VerticalExtent_PropertyType")]
  public class EX_VerticalExtent_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_VerticalExtent_Type _eX_VerticalExtent;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_VerticalExtent_PropertyType class constructor
    /// </summary>
    public EX_VerticalExtent_PropertyType() {
      _eX_VerticalExtent = new EX_VerticalExtent_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_VerticalExtent", Order = 0)]
    public EX_VerticalExtent_Type EX_VerticalExtent {
      get {
        return _eX_VerticalExtent;
      }
      set {
        if ((_eX_VerticalExtent == value)) {
          return;
        }
        if (((_eX_VerticalExtent == null)
                    || (_eX_VerticalExtent.Equals(value) != true))) {
          _eX_VerticalExtent = value;
          OnPropertyChanged("EX_VerticalExtent");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DefinitionProxyType")]
  public class DefinitionProxyType : DefinitionType {
    #region Private fields
    private ReferenceType _definitionRef;
    #endregion

    /// <summary>
    /// DefinitionProxyType class constructor
    /// </summary>
    public DefinitionProxyType() {
      _definitionRef = new ReferenceType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("definitionRef", Order = 0)]
    public ReferenceType definitionRef {
      get {
        return _definitionRef;
      }
      set {
        if ((_definitionRef == value)) {
          return;
        }
        if (((_definitionRef == null)
                    || (_definitionRef.Equals(value) != true))) {
          _definitionRef = value;
          OnPropertyChanged("definitionRef");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DictionaryType")]
  public class DictionaryType : DefinitionType {
    #region Private fields
    private List<object> _items;
    private AggregationType _aggregationType;
    #endregion

    /// <summary>
    /// DictionaryType class constructor
    /// </summary>
    public DictionaryType() {
      _items = new List<object>();
    }

    [XmlElement("dictionaryEntry", typeof(DictionaryEntryType), Order = 0)]
    [XmlElement("indirectEntry", typeof(IndirectEntryType), Order = 0)]
    public List<object> Items {
      get {
        return _items;
      }
      set {
        if ((_items == value)) {
          return;
        }
        if (((_items == null)
                    || (_items.Equals(value) != true))) {
          _items = value;
          OnPropertyChanged("Items");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("aggregationType")]
    public AggregationType aggregationType {
      get {
        return _aggregationType;
      }
      set {
        if ((_aggregationType.Equals(value) != true)) {
          _aggregationType = value;
          OnPropertyChanged("aggregationType");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DictionaryEntryType")]
  public class DictionaryEntryType : AbstractMemberType {
    #region Private fields
    private DefinitionType _definition;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// DictionaryEntryType class constructor
    /// </summary>
    public DictionaryEntryType() {
      _definition = new DefinitionType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Definition", Order = 0)]
    public DefinitionType Definition {
      get {
        return _definition;
      }
      set {
        if ((_definition == value)) {
          return;
        }
        if (((_definition == null)
                    || (_definition.Equals(value) != true))) {
          _definition = value;
          OnPropertyChanged("Definition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }
  }

  /// <summary>
  /// To create a collection of GML Objects that are not all features, a property type shall be derived by extension from gml:AbstractMemberType.
  /// This abstract property type is intended to be used only in object types where software shall be able to identify that an instance of such an object type is to be interpreted as a collection of objects.
  /// By default, this abstract property type does not imply any ownership of the objects in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of an object in the collection. A collection shall not own an object already owned by another object.
  /// </summary>
  [XmlInclude(typeof(DictionaryEntryType))]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractMemberType")]
  public abstract class AbstractMemberType : INotifyPropertyChanged {
    #region Private fields
    private bool _owns;
    #endregion

    /// <summary>
    /// AbstractMemberType class constructor
    /// </summary>
    public AbstractMemberType() {
      _owns = false;
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("IndirectEntryType")]
  public class IndirectEntryType : INotifyPropertyChanged {
    #region Private fields
    private DefinitionProxyType _definitionProxy;
    #endregion

    /// <summary>
    /// IndirectEntryType class constructor
    /// </summary>
    public IndirectEntryType() {
      _definitionProxy = new DefinitionProxyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DefinitionProxy", Order = 0)]
    public DefinitionProxyType DefinitionProxy {
      get {
        return _definitionProxy;
      }
      set {
        if ((_definitionProxy == value)) {
          return;
        }
        if (((_definitionProxy == null)
                    || (_definitionProxy.Equals(value) != true))) {
          _definitionProxy = value;
          OnPropertyChanged("DefinitionProxy");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:TimeTopologyComplexPropertyType provides for associating a gml:TimeTopologyComplex with an object.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TimeTopologyComplexPropertyType")]
  public class TimeTopologyComplexPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TimeTopologyComplexType _timeTopologyComplex;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// TimeTopologyComplexPropertyType class constructor
    /// </summary>
    public TimeTopologyComplexPropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TimeTopologyComplex", Order = 0)]
    public TimeTopologyComplexType TimeTopologyComplex {
      get {
        return _timeTopologyComplex;
      }
      set {
        if ((_timeTopologyComplex == value)) {
          return;
        }
        if (((_timeTopologyComplex == null)
                    || (_timeTopologyComplex.Equals(value) != true))) {
          _timeTopologyComplex = value;
          OnPropertyChanged("TimeTopologyComplex");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeocentricCRSPropertyType")]
  public class GeocentricCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private GeocentricCRSType _geocentricCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// GeocentricCRSPropertyType class constructor
    /// </summary>
    public GeocentricCRSPropertyType() {
      _geocentricCRS = new GeocentricCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("GeocentricCRS", Order = 0)]
    public GeocentricCRSType GeocentricCRS {
      get {
        return _geocentricCRS;
      }
      set {
        if ((_geocentricCRS == value)) {
          return;
        }
        if (((_geocentricCRS == null)
                    || (_geocentricCRS.Equals(value) != true))) {
          _geocentricCRS = value;
          OnPropertyChanged("GeocentricCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:TemporalCRSPropertyType is a property type for association roles to a temporal coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TemporalCRSPropertyType")]
  public class TemporalCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TemporalCRSType _temporalCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TemporalCRSPropertyType class constructor
    /// </summary>
    public TemporalCRSPropertyType() {
      _temporalCRS = new TemporalCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TemporalCRS", Order = 0)]
    public TemporalCRSType TemporalCRS {
      get {
        return _temporalCRS;
      }
      set {
        if ((_temporalCRS == value)) {
          return;
        }
        if (((_temporalCRS == null)
                    || (_temporalCRS.Equals(value) != true))) {
          _temporalCRS = value;
          OnPropertyChanged("TemporalCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:ImageCRSPropertyType is a property type for association roles to an image coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ImageCRSPropertyType")]
  public class ImageCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ImageCRSType _imageCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ImageCRSPropertyType class constructor
    /// </summary>
    public ImageCRSPropertyType() {
      _imageCRS = new ImageCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("ImageCRS", Order = 0)]
    public ImageCRSType ImageCRS {
      get {
        return _imageCRS;
      }
      set {
        if ((_imageCRS == value)) {
          return;
        }
        if (((_imageCRS == null)
                    || (_imageCRS.Equals(value) != true))) {
          _imageCRS = value;
          OnPropertyChanged("ImageCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:EngineeringCRSPropertyType is a property type for association roles to an engineering coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("EngineeringCRSPropertyType")]
  public class EngineeringCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private EngineeringCRSType _engineeringCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// EngineeringCRSPropertyType class constructor
    /// </summary>
    public EngineeringCRSPropertyType() {
      _engineeringCRS = new EngineeringCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EngineeringCRS", Order = 0)]
    public EngineeringCRSType EngineeringCRS {
      get {
        return _engineeringCRS;
      }
      set {
        if ((_engineeringCRS == value)) {
          return;
        }
        if (((_engineeringCRS == null)
                    || (_engineeringCRS.Equals(value) != true))) {
          _engineeringCRS = value;
          OnPropertyChanged("EngineeringCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:DerivedCRSPropertyType is a property type for association roles to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DerivedCRSPropertyType")]
  public class DerivedCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private DerivedCRSType _derivedCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// DerivedCRSPropertyType class constructor
    /// </summary>
    public DerivedCRSPropertyType() {
      _derivedCRS = new DerivedCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DerivedCRS", Order = 0)]
    public DerivedCRSType DerivedCRS {
      get {
        return _derivedCRS;
      }
      set {
        if ((_derivedCRS == value)) {
          return;
        }
        if (((_derivedCRS == null)
                    || (_derivedCRS.Equals(value) != true))) {
          _derivedCRS = value;
          OnPropertyChanged("DerivedCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:ProjectedCRSPropertyType is a property type for association roles to a projected coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ProjectedCRSPropertyType")]
  public class ProjectedCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ProjectedCRSType _projectedCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ProjectedCRSPropertyType class constructor
    /// </summary>
    public ProjectedCRSPropertyType() {
      _projectedCRS = new ProjectedCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("ProjectedCRS", Order = 0)]
    public ProjectedCRSType ProjectedCRS {
      get {
        return _projectedCRS;
      }
      set {
        if ((_projectedCRS == value)) {
          return;
        }
        if (((_projectedCRS == null)
                    || (_projectedCRS.Equals(value) != true))) {
          _projectedCRS = value;
          OnPropertyChanged("ProjectedCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:VerticalCRSPropertyType is a property type for association roles to a vertical coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("VerticalCRSPropertyType")]
  public class VerticalCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private VerticalCRSType _verticalCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// VerticalCRSPropertyType class constructor
    /// </summary>
    public VerticalCRSPropertyType() {
      _verticalCRS = new VerticalCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("VerticalCRS", Order = 0)]
    public VerticalCRSType VerticalCRS {
      get {
        return _verticalCRS;
      }
      set {
        if ((_verticalCRS == value)) {
          return;
        }
        if (((_verticalCRS == null)
                    || (_verticalCRS.Equals(value) != true))) {
          _verticalCRS = value;
          OnPropertyChanged("VerticalCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:CompoundCRSPropertyType is a property type for association roles to a compound coordinate reference system, either referencing or containing the definition of that reference system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CompoundCRSPropertyType")]
  public class CompoundCRSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private CompoundCRSType _compoundCRS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// CompoundCRSPropertyType class constructor
    /// </summary>
    public CompoundCRSPropertyType() {
      _compoundCRS = new CompoundCRSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CompoundCRS", Order = 0)]
    public CompoundCRSType CompoundCRS {
      get {
        return _compoundCRS;
      }
      set {
        if ((_compoundCRS == value)) {
          return;
        }
        if (((_compoundCRS == null)
                    || (_compoundCRS.Equals(value) != true))) {
          _compoundCRS = value;
          OnPropertyChanged("CompoundCRS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:TransformationPropertyType is a property type for association roles to a transformation, either referencing or containing the definition of that transformation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TransformationPropertyType")]
  public class TransformationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TransformationType _transformation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// TransformationPropertyType class constructor
    /// </summary>
    public TransformationPropertyType() {
      _transformation = new TransformationType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Transformation", Order = 0)]
    public TransformationType Transformation {
      get {
        return _transformation;
      }
      set {
        if ((_transformation == value)) {
          return;
        }
        if (((_transformation == null)
                    || (_transformation.Equals(value) != true))) {
          _transformation = value;
          OnPropertyChanged("Transformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:ConversionPropertyType is a property type for association roles to a concrete general-purpose conversion, either referencing or containing the definition of that conversion.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConversionPropertyType")]
  public class ConversionPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ConversionType _conversion;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ConversionPropertyType class constructor
    /// </summary>
    public ConversionPropertyType() {
      _conversion = new ConversionType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Conversion", Order = 0)]
    public ConversionType Conversion {
      get {
        return _conversion;
      }
      set {
        if ((_conversion == value)) {
          return;
        }
        if (((_conversion == null)
                    || (_conversion.Equals(value) != true))) {
          _conversion = value;
          OnPropertyChanged("Conversion");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:PassThroughOperationPropertyType is a property type for association roles to a pass through operation, either referencing or containing the definition of that pass through operation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PassThroughOperationPropertyType")]
  public class PassThroughOperationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private PassThroughOperationType _passThroughOperation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// PassThroughOperationPropertyType class constructor
    /// </summary>
    public PassThroughOperationPropertyType() {
      _passThroughOperation = new PassThroughOperationType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("PassThroughOperation", Order = 0)]
    public PassThroughOperationType PassThroughOperation {
      get {
        return _passThroughOperation;
      }
      set {
        if ((_passThroughOperation == value)) {
          return;
        }
        if (((_passThroughOperation == null)
                    || (_passThroughOperation.Equals(value) != true))) {
          _passThroughOperation = value;
          OnPropertyChanged("PassThroughOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:ConcatenatedOperationPropertyType is a property type for association roles to a concatenated operation, either referencing or containing the definition of that concatenated operation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("ConcatenatedOperationPropertyType")]
  public class ConcatenatedOperationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private ConcatenatedOperationType _concatenatedOperation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// ConcatenatedOperationPropertyType class constructor
    /// </summary>
    public ConcatenatedOperationPropertyType() {
      _concatenatedOperation = new ConcatenatedOperationType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("ConcatenatedOperation", Order = 0)]
    public ConcatenatedOperationType ConcatenatedOperation {
      get {
        return _concatenatedOperation;
      }
      set {
        if ((_concatenatedOperation == value)) {
          return;
        }
        if (((_concatenatedOperation == null)
                    || (_concatenatedOperation.Equals(value) != true))) {
          _concatenatedOperation = value;
          OnPropertyChanged("ConcatenatedOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:GeneralTransformationPropertyType is a property type for association roles to a general transformation, either referencing or containing the definition of that transformation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeneralTransformationPropertyType")]
  public class GeneralTransformationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeneralTransformationType _abstractGeneralTransformation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeneralTransformation", Order = 0)]
    public AbstractGeneralTransformationType AbstractGeneralTransformation {
      get {
        return _abstractGeneralTransformation;
      }
      set {
        if ((_abstractGeneralTransformation == value)) {
          return;
        }
        if (((_abstractGeneralTransformation == null)
                    || (_abstractGeneralTransformation.Equals(value) != true))) {
          _abstractGeneralTransformation = value;
          OnPropertyChanged("AbstractGeneralTransformation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("OperationPropertyType")]
  public class OperationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCoordinateOperationType _abstractOperation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractOperation", Order = 0)]
    public AbstractCoordinateOperationType AbstractOperation {
      get {
        return _abstractOperation;
      }
      set {
        if ((_abstractOperation == value)) {
          return;
        }
        if (((_abstractOperation == null)
                    || (_abstractOperation.Equals(value) != true))) {
          _abstractOperation = value;
          OnPropertyChanged("AbstractOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:SingleOperationPropertyType is a property type for association roles to a single operation, either referencing or containing the definition of that single operation.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("SingleOperationPropertyType")]
  public class SingleOperationPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractCoordinateOperationType _abstractSingleOperation;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractSingleOperation", Order = 0)]
    public AbstractCoordinateOperationType AbstractSingleOperation {
      get {
        return _abstractSingleOperation;
      }
      set {
        if ((_abstractSingleOperation == value)) {
          return;
        }
        if (((_abstractSingleOperation == null)
                    || (_abstractSingleOperation.Equals(value) != true))) {
          _abstractSingleOperation = value;
          OnPropertyChanged("AbstractSingleOperation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:DatumPropertyType is a property type for association roles to a datum, either referencing or containing the definition of that datum.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("DatumPropertyType")]
  public class DatumPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDatumType _abstractDatum;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDatum", Order = 0)]
    public AbstractDatumType AbstractDatum {
      get {
        return _abstractDatum;
      }
      set {
        if ((_abstractDatum == value)) {
          return;
        }
        if (((_abstractDatum == null)
                    || (_abstractDatum.Equals(value) != true))) {
          _abstractDatum = value;
          OnPropertyChanged("AbstractDatum");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:CylindricalCSPropertyType is a property type for association roles to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CylindricalCSPropertyType")]
  public class CylindricalCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private CylindricalCSType _cylindricalCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// CylindricalCSPropertyType class constructor
    /// </summary>
    public CylindricalCSPropertyType() {
      _cylindricalCS = new CylindricalCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("CylindricalCS", Order = 0)]
    public CylindricalCSType CylindricalCS {
      get {
        return _cylindricalCS;
      }
      set {
        if ((_cylindricalCS == value)) {
          return;
        }
        if (((_cylindricalCS == null)
                    || (_cylindricalCS.Equals(value) != true))) {
          _cylindricalCS = value;
          OnPropertyChanged("CylindricalCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:PolarCSPropertyType is a property type for association roles to a polar coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("PolarCSPropertyType")]
  public class PolarCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private PolarCSType _polarCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// PolarCSPropertyType class constructor
    /// </summary>
    public PolarCSPropertyType() {
      _polarCS = new PolarCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("PolarCS", Order = 0)]
    public PolarCSType PolarCS {
      get {
        return _polarCS;
      }
      set {
        if ((_polarCS == value)) {
          return;
        }
        if (((_polarCS == null)
                    || (_polarCS.Equals(value) != true))) {
          _polarCS = value;
          OnPropertyChanged("PolarCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:UserDefinedCSPropertyType is a property type for association roles to a user-defined coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("UserDefinedCSPropertyType")]
  public class UserDefinedCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private UserDefinedCSType _userDefinedCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// UserDefinedCSPropertyType class constructor
    /// </summary>
    public UserDefinedCSPropertyType() {
      _userDefinedCS = new UserDefinedCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("UserDefinedCS", Order = 0)]
    public UserDefinedCSType UserDefinedCS {
      get {
        return _userDefinedCS;
      }
      set {
        if ((_userDefinedCS == value)) {
          return;
        }
        if (((_userDefinedCS == null)
                    || (_userDefinedCS.Equals(value) != true))) {
          _userDefinedCS = value;
          OnPropertyChanged("UserDefinedCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// gml:LinearCSPropertyType is a property type for association roles to a linear coordinate system, either referencing or containing the definition of that coordinate system.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LinearCSPropertyType")]
  public class LinearCSPropertyType : INotifyPropertyChanged {
    #region Private fields
    private LinearCSType _linearCS;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// LinearCSPropertyType class constructor
    /// </summary>
    public LinearCSPropertyType() {
      _linearCS = new LinearCSType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LinearCS", Order = 0)]
    public LinearCSType LinearCS {
      get {
        return _linearCS;
      }
      set {
        if ((_linearCS == value)) {
          return;
        }
        if (((_linearCS == null)
                    || (_linearCS.Equals(value) != true))) {
          _linearCS = value;
          OnPropertyChanged("LinearCS");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CountPropertyType")]
  public class CountPropertyType : INotifyPropertyChanged {
    #region Private fields
    private Count _count;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// CountPropertyType class constructor
    /// </summary>
    public CountPropertyType() {
      _count = new Count();
    }

    [XmlElement(IsNullable = true, Order = 0)]
    [JsonProperty("Count", Order = 0)]
    public Count Count {
      get {
        return _count;
      }
      set {
        if ((_count == value)) {
          return;
        }
        if (((_count == null)
                    || (_count.Equals(value) != true))) {
          _count = value;
          OnPropertyChanged("Count");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("Count")]
  public class Count : INotifyPropertyChanged {
    #region Private fields
    private string _nilReason;
    private string _value;
    #endregion

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlTextAttribute(DataType = "integer")]
    [JsonProperty("Value")]
    public string Value {
      get {
        return _value;
      }
      set {
        if ((_value == value)) {
          return;
        }
        if (((_value == null)
                    || (_value.Equals(value) != true))) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("QuantityPropertyType")]
  public class QuantityPropertyType : INotifyPropertyChanged {
    #region Private fields
    private Quantity _quantity;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// QuantityPropertyType class constructor
    /// </summary>
    public QuantityPropertyType() {
      _quantity = new Quantity();
    }

    [XmlElement(IsNullable = true, Order = 0)]
    [JsonProperty("Quantity", Order = 0)]
    public Quantity Quantity {
      get {
        return _quantity;
      }
      set {
        if ((_quantity == value)) {
          return;
        }
        if (((_quantity == null)
                    || (_quantity.Equals(value) != true))) {
          _quantity = value;
          OnPropertyChanged("Quantity");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// An XML attribute uom (“unit of measure”) is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("Quantity")]
  public class Quantity : MeasureType {
    #region Private fields
    private string _nilReason;
    #endregion

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("CategoryPropertyType")]
  public class CategoryPropertyType : INotifyPropertyChanged {
    #region Private fields
    private Category _category;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// CategoryPropertyType class constructor
    /// </summary>
    public CategoryPropertyType() {
      _category = new Category();
    }

    [XmlElement(IsNullable = true, Order = 0)]
    [JsonProperty("Category", Order = 0)]
    public Category Category {
      get {
        return _category;
      }
      set {
        if ((_category == value)) {
          return;
        }
        if (((_category == null)
                    || (_category.Equals(value) != true))) {
          _category = value;
          OnPropertyChanged("Category");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("Category")]
  public class Category : CodeType {
    #region Private fields
    private string _nilReason;
    #endregion

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("BooleanPropertyType")]
  public class BooleanPropertyType : INotifyPropertyChanged {
    #region Private fields
    private Boolean _boolean;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// BooleanPropertyType class constructor
    /// </summary>
    public BooleanPropertyType() {
      _boolean = new Boolean();
    }

    [XmlElement(IsNullable = true, Order = 0)]
    [JsonProperty("Boolean", Order = 0)]
    public Boolean Boolean {
      get {
        return _boolean;
      }
      set {
        if ((_boolean == value)) {
          return;
        }
        if (((_boolean == null)
                    || (_boolean.Equals(value) != true))) {
          _boolean = value;
          OnPropertyChanged("Boolean");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(AnonymousType = true, Namespace = "http://www.opengis.net/gml")]
  [JsonObject("Boolean")]
  public class Boolean : INotifyPropertyChanged {
    #region Private fields
    private string _nilReason;
    private bool _value;
    #endregion

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlTextAttribute]
    [JsonProperty("Value")]
    public bool Value {
      get {
        return _value;
      }
      set {
        if ((_value.Equals(value) != true)) {
          _value = value;
          OnPropertyChanged("Value");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoVolumePropertyType")]
  public class TopoVolumePropertyType : INotifyPropertyChanged {
    #region Private fields
    private TopoVolumeType _topoVolume;
    private bool _owns;
    #endregion

    /// <summary>
    /// TopoVolumePropertyType class constructor
    /// </summary>
    public TopoVolumePropertyType() {
      _topoVolume = new TopoVolumeType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TopoVolume", Order = 0)]
    public TopoVolumeType TopoVolume {
      get {
        return _topoVolume;
      }
      set {
        if ((_topoVolume == value)) {
          return;
        }
        if (((_topoVolume == null)
                    || (_topoVolume.Equals(value) != true))) {
          _topoVolume = value;
          OnPropertyChanged("TopoVolume");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoSurfacePropertyType")]
  public class TopoSurfacePropertyType : INotifyPropertyChanged {
    #region Private fields
    private TopoSurfaceType _topoSurface;
    private bool _owns;
    #endregion

    /// <summary>
    /// TopoSurfacePropertyType class constructor
    /// </summary>
    public TopoSurfacePropertyType() {
      _topoSurface = new TopoSurfaceType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TopoSurface", Order = 0)]
    public TopoSurfaceType TopoSurface {
      get {
        return _topoSurface;
      }
      set {
        if ((_topoSurface == value)) {
          return;
        }
        if (((_topoSurface == null)
                    || (_topoSurface.Equals(value) != true))) {
          _topoSurface = value;
          OnPropertyChanged("TopoSurface");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoCurvePropertyType")]
  public class TopoCurvePropertyType : INotifyPropertyChanged {
    #region Private fields
    private TopoCurveType _topoCurve;
    private bool _owns;
    #endregion

    /// <summary>
    /// TopoCurvePropertyType class constructor
    /// </summary>
    public TopoCurvePropertyType() {
      _topoCurve = new TopoCurveType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TopoCurve", Order = 0)]
    public TopoCurveType TopoCurve {
      get {
        return _topoCurve;
      }
      set {
        if ((_topoCurve == value)) {
          return;
        }
        if (((_topoCurve == null)
                    || (_topoCurve.Equals(value) != true))) {
          _topoCurve = value;
          OnPropertyChanged("TopoCurve");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("TopoPointPropertyType")]
  public class TopoPointPropertyType : INotifyPropertyChanged {
    #region Private fields
    private TopoPointType _topoPoint;
    private bool _owns;
    #endregion

    /// <summary>
    /// TopoPointPropertyType class constructor
    /// </summary>
    public TopoPointPropertyType() {
      _topoPoint = new TopoPointType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("TopoPoint", Order = 0)]
    public TopoPointType TopoPoint {
      get {
        return _topoPoint;
      }
      set {
        if ((_topoPoint == value)) {
          return;
        }
        if (((_topoPoint == null)
                    || (_topoPoint.Equals(value) != true))) {
          _topoPoint = value;
          OnPropertyChanged("TopoPoint");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a geometric complex as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("GeometricComplexPropertyType")]
  public class GeometricComplexPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeometryType _item;
    private bool _owns;
    private string _nilReason;
    private string _remoteSchema;
    #endregion

    /// <summary>
    /// GeometricComplexPropertyType class constructor
    /// </summary>
    public GeometricComplexPropertyType() {
      _owns = false;
    }

    [XmlElement("CompositeCurve", typeof(CompositeCurveType), Order = 0)]
    [XmlElement("CompositeSolid", typeof(CompositeSolidType), Order = 0)]
    [XmlElement("CompositeSurface", typeof(CompositeSurfaceType), Order = 0)]
    [XmlElement("GeometricComplex", typeof(GeometricComplexType), Order = 0)]
    public AbstractGeometryType Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a collection of solids as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSolidPropertyType")]
  public class MultiSolidPropertyType : INotifyPropertyChanged {
    #region Private fields
    private MultiSolidType _multiSolid;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// MultiSolidPropertyType class constructor
    /// </summary>
    public MultiSolidPropertyType() {
      _multiSolid = new MultiSolidType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MultiSolid", Order = 0)]
    public MultiSolidType MultiSolid {
      get {
        return _multiSolid;
      }
      set {
        if ((_multiSolid == value)) {
          return;
        }
        if (((_multiSolid == null)
                    || (_multiSolid.Equals(value) != true))) {
          _multiSolid = value;
          OnPropertyChanged("MultiSolid");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a collection of surfaces as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiSurfacePropertyType")]
  public class MultiSurfacePropertyType : INotifyPropertyChanged {
    #region Private fields
    private MultiSurfaceType _multiSurface;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// MultiSurfacePropertyType class constructor
    /// </summary>
    public MultiSurfacePropertyType() {
      _multiSurface = new MultiSurfaceType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MultiSurface", Order = 0)]
    public MultiSurfaceType MultiSurface {
      get {
        return _multiSurface;
      }
      set {
        if ((_multiSurface == value)) {
          return;
        }
        if (((_multiSurface == null)
                    || (_multiSurface.Equals(value) != true))) {
          _multiSurface = value;
          OnPropertyChanged("MultiSurface");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a collection of curves as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiCurvePropertyType")]
  public class MultiCurvePropertyType : INotifyPropertyChanged {
    #region Private fields
    private MultiCurveType _multiCurve;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// MultiCurvePropertyType class constructor
    /// </summary>
    public MultiCurvePropertyType() {
      _multiCurve = new MultiCurveType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MultiCurve", Order = 0)]
    public MultiCurveType MultiCurve {
      get {
        return _multiCurve;
      }
      set {
        if ((_multiCurve == value)) {
          return;
        }
        if (((_multiCurve == null)
                    || (_multiCurve.Equals(value) != true))) {
          _multiCurve = value;
          OnPropertyChanged("MultiCurve");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a collection of points as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiPointPropertyType")]
  public class MultiPointPropertyType : INotifyPropertyChanged {
    #region Private fields
    private MultiPointType _multiPoint;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// MultiPointPropertyType class constructor
    /// </summary>
    public MultiPointPropertyType() {
      _multiPoint = new MultiPointType();
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MultiPoint", Order = 0)]
    public MultiPointType MultiPoint {
      get {
        return _multiPoint;
      }
      set {
        if ((_multiPoint == value)) {
          return;
        }
        if (((_multiPoint == null)
                    || (_multiPoint.Equals(value) != true))) {
          _multiPoint = value;
          OnPropertyChanged("MultiPoint");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property that has a geometric aggregate as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("MultiGeometryPropertyType")]
  public class MultiGeometryPropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractGeometricAggregateType _abstractGeometricAggregate;
    private string _nilReason;
    private string _remoteSchema;
    private bool _owns;
    #endregion

    /// <summary>
    /// MultiGeometryPropertyType class constructor
    /// </summary>
    public MultiGeometryPropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractGeometricAggregate", Order = 0)]
    public AbstractGeometricAggregateType AbstractGeometricAggregate {
      get {
        return _abstractGeometricAggregate;
      }
      set {
        if ((_abstractGeometricAggregate == value)) {
          return;
        }
        if (((_abstractGeometricAggregate == null)
                    || (_abstractGeometricAggregate.Equals(value) != true))) {
          _abstractGeometricAggregate = value;
          OnPropertyChanged("AbstractGeometricAggregate");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, DataType = "anyURI")]
    [JsonProperty("remoteSchema")]
    public string remoteSchema {
      get {
        return _remoteSchema;
      }
      set {
        if ((_remoteSchema == value)) {
          return;
        }
        if (((_remoteSchema == null)
                    || (_remoteSchema.Equals(value) != true))) {
          _remoteSchema = value;
          OnPropertyChanged("remoteSchema");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property with the content model of gml:RingPropertyType encapsulates a ring to represent a component of a surface boundary.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("RingPropertyType")]
  public class RingPropertyType : INotifyPropertyChanged {
    #region Private fields
    private RingType _ring;
    #endregion

    /// <summary>
    /// RingPropertyType class constructor
    /// </summary>
    public RingPropertyType() {
      _ring = new RingType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Ring", Order = 0)]
    public RingType Ring {
      get {
        return _ring;
      }
      set {
        if ((_ring == value)) {
          return;
        }
        if (((_ring == null)
                    || (_ring.Equals(value) != true))) {
          _ring = value;
          OnPropertyChanged("Ring");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// A property with the content model of gml:LinearRingPropertyType encapsulates a linear ring to represent a component of a surface boundary.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("LinearRingPropertyType")]
  public class LinearRingPropertyType : INotifyPropertyChanged {
    #region Private fields
    private LinearRingType _linearRing;
    #endregion

    /// <summary>
    /// LinearRingPropertyType class constructor
    /// </summary>
    public LinearRingPropertyType() {
      _linearRing = new LinearRingType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LinearRing", Order = 0)]
    public LinearRingType LinearRing {
      get {
        return _linearRing;
      }
      set {
        if ((_linearRing == value)) {
          return;
        }
        if (((_linearRing == null)
                    || (_linearRing.Equals(value) != true))) {
          _linearRing = value;
          OnPropertyChanged("LinearRing");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AngleChoiceType")]
  public class AngleChoiceType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    #endregion

    [XmlElement("angle", typeof(AngleType), Order = 0)]
    [XmlElement("dmsAngle", typeof(DMSAngleType), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// To associate metadata described by any XML Schema with a GML object, a property element shall be defined whose content model is derived by extension from gml:AbstractMetadataPropertyType.
  /// The value of such a property shall be metadata. The content model of such a property type, i.e. the metadata application schema shall be specified by the GML Application Schema.
  /// By default, this abstract property type does not imply any ownership of the metadata. The owns attribute of gml:OwnershipAttributeGroup may be used on a metadata property element instance to assert ownership of the metadata.
  /// If metadata following the conceptual model of ISO 19115 is to be encoded in a GML document, the corresponding Implementation Specification specified in ISO/TS 19139 shall be used to encode the metadata information.
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("AbstractMetadataPropertyType")]
  public abstract class AbstractMetadataPropertyType : INotifyPropertyChanged {
    #region Private fields
    private bool _owns;
    #endregion

    /// <summary>
    /// AbstractMetadataPropertyType class constructor
    /// </summary>
    public AbstractMetadataPropertyType() {
      _owns = false;
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.opengis.net/gml")]
  [JsonObject("InlinePropertyType")]
  public class InlinePropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _abstractObject;
    private bool _owns;
    #endregion

    /// <summary>
    /// InlinePropertyType class constructor
    /// </summary>
    public InlinePropertyType() {
      _owns = false;
    }

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractObject", Order = 0)]
    public object AbstractObject {
      get {
        return _abstractObject;
      }
      set {
        if ((_abstractObject == value)) {
          return;
        }
        if (((_abstractObject == null)
                    || (_abstractObject.Equals(value) != true))) {
          _abstractObject = value;
          OnPropertyChanged("AbstractObject");
        }
      }
    }

    [XmlAttribute]
    [DefaultValue(false)]
    [JsonProperty("owns")]
    public bool owns {
      get {
        return _owns;
      }
      set {
        if ((_owns.Equals(value) != true)) {
          _owns = value;
          OnPropertyChanged("owns");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Number_PropertyType")]
  public class Number_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private object _item;
    private string _nilReason;
    #endregion

    [XmlElement("Decimal", typeof(decimal), Order = 0)]
    [XmlElement("Integer", typeof(string), DataType = "integer", Order = 0)]
    [XmlElement("Real", typeof(double), Order = 0)]
    public object Item {
      get {
        return _item;
      }
      set {
        if ((_item == value)) {
          return;
        }
        if (((_item == null)
                    || (_item.Equals(value) != true))) {
          _item = value;
          OnPropertyChanged("Item");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomVolume_PropertyType")]
  public class UomVolume_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomVolume_PropertyType class constructor
    /// </summary>
    public UomVolume_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomTime_PropertyType")]
  public class UomTime_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomTime_PropertyType class constructor
    /// </summary>
    public UomTime_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomVelocity_PropertyType")]
  public class UomVelocity_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomVelocity_PropertyType class constructor
    /// </summary>
    public UomVelocity_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomArea_PropertyType")]
  public class UomArea_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomArea_PropertyType class constructor
    /// </summary>
    public UomArea_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomScale_PropertyType")]
  public class UomScale_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomScale_PropertyType class constructor
    /// </summary>
    public UomScale_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("UomAngle_PropertyType")]
  public class UomAngle_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private UnitDefinitionType _unitDefinition;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// UomAngle_PropertyType class constructor
    /// </summary>
    public UomAngle_PropertyType() {
      _unitDefinition = new UnitDefinitionType();
    }

    [XmlElement(Namespace = "http://www.opengis.net/gml", Order = 0)]
    [JsonProperty("UnitDefinition", Order = 0)]
    public UnitDefinitionType UnitDefinition {
      get {
        return _unitDefinition;
      }
      set {
        if ((_unitDefinition == value)) {
          return;
        }
        if (((_unitDefinition == null)
                    || (_unitDefinition.Equals(value) != true))) {
          _unitDefinition = value;
          OnPropertyChanged("UnitDefinition");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("ScopedName_PropertyType")]
  public class ScopedName_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeType _scopedName;
    private string _nilReason;
    #endregion

    /// <summary>
    /// ScopedName_PropertyType class constructor
    /// </summary>
    public ScopedName_PropertyType() {
      _scopedName = new CodeType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("ScopedName", Order = 0)]
    public CodeType ScopedName {
      get {
        return _scopedName;
      }
      set {
        if ((_scopedName == value)) {
          return;
        }
        if (((_scopedName == null)
                    || (_scopedName.Equals(value) != true))) {
          _scopedName = value;
          OnPropertyChanged("ScopedName");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("LocalName_PropertyType")]
  public class LocalName_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeType _localName;
    private string _nilReason;
    #endregion

    /// <summary>
    /// LocalName_PropertyType class constructor
    /// </summary>
    public LocalName_PropertyType() {
      _localName = new CodeType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("LocalName", Order = 0)]
    public CodeType LocalName {
      get {
        return _localName;
      }
      set {
        if ((_localName == value)) {
          return;
        }
        if (((_localName == null)
                    || (_localName.Equals(value) != true))) {
          _localName = value;
          OnPropertyChanged("LocalName");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Scale_PropertyType")]
  public class Scale_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private ScaleType _scale;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Scale_PropertyType class constructor
    /// </summary>
    public Scale_PropertyType() {
      _scale = new ScaleType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Scale", Order = 0)]
    public ScaleType Scale {
      get {
        return _scale;
      }
      set {
        if ((_scale == value)) {
          return;
        }
        if (((_scale == null)
                    || (_scale.Equals(value) != true))) {
          _scale = value;
          OnPropertyChanged("Scale");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Angle_PropertyType")]
  public class Angle_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AngleType _angle;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Angle_PropertyType class constructor
    /// </summary>
    public Angle_PropertyType() {
      _angle = new AngleType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Angle", Order = 0)]
    public AngleType Angle {
      get {
        return _angle;
      }
      set {
        if ((_angle == value)) {
          return;
        }
        if (((_angle == null)
                    || (_angle.Equals(value) != true))) {
          _angle = value;
          OnPropertyChanged("Angle");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Length_PropertyType")]
  public class Length_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private LengthType _length;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Length_PropertyType class constructor
    /// </summary>
    public Length_PropertyType() {
      _length = new LengthType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Length", Order = 0)]
    public LengthType Length {
      get {
        return _length;
      }
      set {
        if ((_length == value)) {
          return;
        }
        if (((_length == null)
                    || (_length.Equals(value) != true))) {
          _length = value;
          OnPropertyChanged("Length");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gco")]
  [JsonObject("Multiplicity_PropertyType")]
  public class Multiplicity_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private Multiplicity_Type _multiplicity;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// Multiplicity_PropertyType class constructor
    /// </summary>
    public Multiplicity_PropertyType() {
      _multiplicity = new Multiplicity_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("Multiplicity", Order = 0)]
    public Multiplicity_Type Multiplicity {
      get {
        return _multiplicity;
      }
      set {
        if ((_multiplicity == value)) {
          return;
        }
        if (((_multiplicity == null)
                    || (_multiplicity.Equals(value) != true))) {
          _multiplicity = value;
          OnPropertyChanged("Multiplicity");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified)]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_StereoMate_PropertyType")]
  public class DS_StereoMate_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_StereoMate_Type _dS_StereoMate;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_StereoMate_PropertyType class constructor
    /// </summary>
    public DS_StereoMate_PropertyType() {
      _dS_StereoMate = new DS_StereoMate_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_StereoMate", Order = 0)]
    public DS_StereoMate_Type DS_StereoMate {
      get {
        return _dS_StereoMate;
      }
      set {
        if ((_dS_StereoMate == value)) {
          return;
        }
        if (((_dS_StereoMate == null)
                    || (_dS_StereoMate.Equals(value) != true))) {
          _dS_StereoMate = value;
          OnPropertyChanged("DS_StereoMate");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_ProductionSeries_PropertyType")]
  public class DS_ProductionSeries_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_ProductionSeries_Type _dS_ProductionSeries;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_ProductionSeries_PropertyType class constructor
    /// </summary>
    public DS_ProductionSeries_PropertyType() {
      _dS_ProductionSeries = new DS_ProductionSeries_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_ProductionSeries", Order = 0)]
    public DS_ProductionSeries_Type DS_ProductionSeries {
      get {
        return _dS_ProductionSeries;
      }
      set {
        if ((_dS_ProductionSeries == value)) {
          return;
        }
        if (((_dS_ProductionSeries == null)
                    || (_dS_ProductionSeries.Equals(value) != true))) {
          _dS_ProductionSeries = value;
          OnPropertyChanged("DS_ProductionSeries");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_Sensor_PropertyType")]
  public class DS_Sensor_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_Sensor_Type _dS_Sensor;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_Sensor_PropertyType class constructor
    /// </summary>
    public DS_Sensor_PropertyType() {
      _dS_Sensor = new DS_Sensor_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_Sensor", Order = 0)]
    public DS_Sensor_Type DS_Sensor {
      get {
        return _dS_Sensor;
      }
      set {
        if ((_dS_Sensor == value)) {
          return;
        }
        if (((_dS_Sensor == null)
                    || (_dS_Sensor.Equals(value) != true))) {
          _dS_Sensor = value;
          OnPropertyChanged("DS_Sensor");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_Platform_PropertyType")]
  public class DS_Platform_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_Platform_Type _dS_Platform;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_Platform_PropertyType class constructor
    /// </summary>
    public DS_Platform_PropertyType() {
      _dS_Platform = new DS_Platform_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_Platform", Order = 0)]
    public DS_Platform_Type DS_Platform {
      get {
        return _dS_Platform;
      }
      set {
        if ((_dS_Platform == value)) {
          return;
        }
        if (((_dS_Platform == null)
                    || (_dS_Platform.Equals(value) != true))) {
          _dS_Platform = value;
          OnPropertyChanged("DS_Platform");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_Initiative_PropertyType")]
  public class DS_Initiative_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_Initiative_Type _dS_Initiative;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_Initiative_PropertyType class constructor
    /// </summary>
    public DS_Initiative_PropertyType() {
      _dS_Initiative = new DS_Initiative_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_Initiative", Order = 0)]
    public DS_Initiative_Type DS_Initiative {
      get {
        return _dS_Initiative;
      }
      set {
        if ((_dS_Initiative == value)) {
          return;
        }
        if (((_dS_Initiative == null)
                    || (_dS_Initiative.Equals(value) != true))) {
          _dS_Initiative = value;
          OnPropertyChanged("DS_Initiative");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_Series_PropertyType")]
  public class DS_Series_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_Series_Type _dS_Series;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_Series_PropertyType class constructor
    /// </summary>
    public DS_Series_PropertyType() {
      _dS_Series = new DS_Series_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_Series", Order = 0)]
    public DS_Series_Type DS_Series {
      get {
        return _dS_Series;
      }
      set {
        if ((_dS_Series == value)) {
          return;
        }
        if (((_dS_Series == null)
                    || (_dS_Series.Equals(value) != true))) {
          _dS_Series = value;
          OnPropertyChanged("DS_Series");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_OtherAggregate_PropertyType")]
  public class DS_OtherAggregate_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_OtherAggregate_Type _dS_OtherAggregate;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_OtherAggregate_PropertyType class constructor
    /// </summary>
    public DS_OtherAggregate_PropertyType() {
      _dS_OtherAggregate = new DS_OtherAggregate_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_OtherAggregate", Order = 0)]
    public DS_OtherAggregate_Type DS_OtherAggregate {
      get {
        return _dS_OtherAggregate;
      }
      set {
        if ((_dS_OtherAggregate == value)) {
          return;
        }
        if (((_dS_OtherAggregate == null)
                    || (_dS_OtherAggregate.Equals(value) != true))) {
          _dS_OtherAggregate = value;
          OnPropertyChanged("DS_OtherAggregate");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("PT_LocaleContainer_PropertyType")]
  public class PT_LocaleContainer_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private PT_LocaleContainer_Type _pT_LocaleContainer;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// PT_LocaleContainer_PropertyType class constructor
    /// </summary>
    public PT_LocaleContainer_PropertyType() {
      _pT_LocaleContainer = new PT_LocaleContainer_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("PT_LocaleContainer", Order = 0)]
    public PT_LocaleContainer_Type PT_LocaleContainer {
      get {
        return _pT_LocaleContainer;
      }
      set {
        if ((_pT_LocaleContainer == value)) {
          return;
        }
        if (((_pT_LocaleContainer == null)
                    || (_pT_LocaleContainer.Equals(value) != true))) {
          _pT_LocaleContainer = value;
          OnPropertyChanged("PT_LocaleContainer");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("PT_LocaleContainer", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("PT_LocaleContainer_Type")]
  public class PT_LocaleContainer_Type : INotifyPropertyChanged {
    #region Private fields
    private CharacterString_PropertyType _description;
    private PT_Locale_PropertyType _locale;
    private List<CI_Date_PropertyType> _date;
    private List<CI_ResponsibleParty_PropertyType> _responsibleParty;
    private List<LocalisedCharacterString_PropertyType> _localisedString;
    #endregion

    /// <summary>
    /// PT_LocaleContainer_Type class constructor
    /// </summary>
    public PT_LocaleContainer_Type() {
      _localisedString = new List<LocalisedCharacterString_PropertyType>();
      _responsibleParty = new List<CI_ResponsibleParty_PropertyType>();
      _date = new List<CI_Date_PropertyType>();
      _locale = new PT_Locale_PropertyType();
      _description = new CharacterString_PropertyType();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("description", Order = 0)]
    public CharacterString_PropertyType description {
      get {
        return _description;
      }
      set {
        if ((_description == value)) {
          return;
        }
        if (((_description == null)
                    || (_description.Equals(value) != true))) {
          _description = value;
          OnPropertyChanged("description");
        }
      }
    }

    [XmlElement(Order = 1)]
    [JsonProperty("locale", Order = 1)]
    public PT_Locale_PropertyType locale {
      get {
        return _locale;
      }
      set {
        if ((_locale == value)) {
          return;
        }
        if (((_locale == null)
                    || (_locale.Equals(value) != true))) {
          _locale = value;
          OnPropertyChanged("locale");
        }
      }
    }

    [XmlElement("date", Order = 2)]
    [JsonProperty("date", Order = 2)]
    public List<CI_Date_PropertyType> date {
      get {
        return _date;
      }
      set {
        if ((_date == value)) {
          return;
        }
        if (((_date == null)
                    || (_date.Equals(value) != true))) {
          _date = value;
          OnPropertyChanged("date");
        }
      }
    }

    [XmlElement("responsibleParty", Order = 3)]
    [JsonProperty("responsibleParty", Order = 3)]
    public List<CI_ResponsibleParty_PropertyType> responsibleParty {
      get {
        return _responsibleParty;
      }
      set {
        if ((_responsibleParty == value)) {
          return;
        }
        if (((_responsibleParty == null)
                    || (_responsibleParty.Equals(value) != true))) {
          _responsibleParty = value;
          OnPropertyChanged("responsibleParty");
        }
      }
    }

    [XmlElement("localisedString", Order = 4)]
    [JsonProperty("localisedString", Order = 4)]
    public List<LocalisedCharacterString_PropertyType> localisedString {
      get {
        return _localisedString;
      }
      set {
        if ((_localisedString == value)) {
          return;
        }
        if (((_localisedString == null)
                    || (_localisedString.Equals(value) != true))) {
          _localisedString = value;
          OnPropertyChanged("localisedString");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_Completeness_PropertyType")]
  public class DQ_Completeness_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_Completeness_Type _abstractDQ_Completeness;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_Completeness", Order = 0)]
    public AbstractDQ_Completeness_Type AbstractDQ_Completeness {
      get {
        return _abstractDQ_Completeness;
      }
      set {
        if ((_abstractDQ_Completeness == value)) {
          return;
        }
        if (((_abstractDQ_Completeness == null)
                    || (_abstractDQ_Completeness.Equals(value) != true))) {
          _abstractDQ_Completeness = value;
          OnPropertyChanged("AbstractDQ_Completeness");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_LogicalConsistency_PropertyType")]
  public class DQ_LogicalConsistency_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_LogicalConsistency_Type _abstractDQ_LogicalConsistency;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_LogicalConsistency", Order = 0)]
    public AbstractDQ_LogicalConsistency_Type AbstractDQ_LogicalConsistency {
      get {
        return _abstractDQ_LogicalConsistency;
      }
      set {
        if ((_abstractDQ_LogicalConsistency == value)) {
          return;
        }
        if (((_abstractDQ_LogicalConsistency == null)
                    || (_abstractDQ_LogicalConsistency.Equals(value) != true))) {
          _abstractDQ_LogicalConsistency = value;
          OnPropertyChanged("AbstractDQ_LogicalConsistency");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_PositionalAccuracy_PropertyType")]
  public class DQ_PositionalAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_PositionalAccuracy_Type _abstractDQ_PositionalAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_PositionalAccuracy", Order = 0)]
    public AbstractDQ_PositionalAccuracy_Type AbstractDQ_PositionalAccuracy {
      get {
        return _abstractDQ_PositionalAccuracy;
      }
      set {
        if ((_abstractDQ_PositionalAccuracy == value)) {
          return;
        }
        if (((_abstractDQ_PositionalAccuracy == null)
                    || (_abstractDQ_PositionalAccuracy.Equals(value) != true))) {
          _abstractDQ_PositionalAccuracy = value;
          OnPropertyChanged("AbstractDQ_PositionalAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_ThematicAccuracy_PropertyType")]
  public class DQ_ThematicAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_ThematicAccuracy_Type _abstractDQ_ThematicAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_ThematicAccuracy", Order = 0)]
    public AbstractDQ_ThematicAccuracy_Type AbstractDQ_ThematicAccuracy {
      get {
        return _abstractDQ_ThematicAccuracy;
      }
      set {
        if ((_abstractDQ_ThematicAccuracy == value)) {
          return;
        }
        if (((_abstractDQ_ThematicAccuracy == null)
                    || (_abstractDQ_ThematicAccuracy.Equals(value) != true))) {
          _abstractDQ_ThematicAccuracy = value;
          OnPropertyChanged("AbstractDQ_ThematicAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_TemporalAccuracy_PropertyType")]
  public class DQ_TemporalAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractDQ_TemporalAccuracy_Type _abstractDQ_TemporalAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractDQ_TemporalAccuracy", Order = 0)]
    public AbstractDQ_TemporalAccuracy_Type AbstractDQ_TemporalAccuracy {
      get {
        return _abstractDQ_TemporalAccuracy;
      }
      set {
        if ((_abstractDQ_TemporalAccuracy == value)) {
          return;
        }
        if (((_abstractDQ_TemporalAccuracy == null)
                    || (_abstractDQ_TemporalAccuracy.Equals(value) != true))) {
          _abstractDQ_TemporalAccuracy = value;
          OnPropertyChanged("AbstractDQ_TemporalAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_CompletenessCommission_PropertyType")]
  public class DQ_CompletenessCommission_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_CompletenessCommission_Type _dQ_CompletenessCommission;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_CompletenessCommission_PropertyType class constructor
    /// </summary>
    public DQ_CompletenessCommission_PropertyType() {
      _dQ_CompletenessCommission = new DQ_CompletenessCommission_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_CompletenessCommission", Order = 0)]
    public DQ_CompletenessCommission_Type DQ_CompletenessCommission {
      get {
        return _dQ_CompletenessCommission;
      }
      set {
        if ((_dQ_CompletenessCommission == value)) {
          return;
        }
        if (((_dQ_CompletenessCommission == null)
                    || (_dQ_CompletenessCommission.Equals(value) != true))) {
          _dQ_CompletenessCommission = value;
          OnPropertyChanged("DQ_CompletenessCommission");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_CompletenessOmission_PropertyType")]
  public class DQ_CompletenessOmission_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_CompletenessOmission_Type _dQ_CompletenessOmission;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_CompletenessOmission_PropertyType class constructor
    /// </summary>
    public DQ_CompletenessOmission_PropertyType() {
      _dQ_CompletenessOmission = new DQ_CompletenessOmission_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_CompletenessOmission", Order = 0)]
    public DQ_CompletenessOmission_Type DQ_CompletenessOmission {
      get {
        return _dQ_CompletenessOmission;
      }
      set {
        if ((_dQ_CompletenessOmission == value)) {
          return;
        }
        if (((_dQ_CompletenessOmission == null)
                    || (_dQ_CompletenessOmission.Equals(value) != true))) {
          _dQ_CompletenessOmission = value;
          OnPropertyChanged("DQ_CompletenessOmission");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_ConceptualConsistency_PropertyType")]
  public class DQ_ConceptualConsistency_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_ConceptualConsistency_Type _dQ_ConceptualConsistency;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_ConceptualConsistency_PropertyType class constructor
    /// </summary>
    public DQ_ConceptualConsistency_PropertyType() {
      _dQ_ConceptualConsistency = new DQ_ConceptualConsistency_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_ConceptualConsistency", Order = 0)]
    public DQ_ConceptualConsistency_Type DQ_ConceptualConsistency {
      get {
        return _dQ_ConceptualConsistency;
      }
      set {
        if ((_dQ_ConceptualConsistency == value)) {
          return;
        }
        if (((_dQ_ConceptualConsistency == null)
                    || (_dQ_ConceptualConsistency.Equals(value) != true))) {
          _dQ_ConceptualConsistency = value;
          OnPropertyChanged("DQ_ConceptualConsistency");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_DomainConsistency_PropertyType")]
  public class DQ_DomainConsistency_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_DomainConsistency_Type _dQ_DomainConsistency;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_DomainConsistency_PropertyType class constructor
    /// </summary>
    public DQ_DomainConsistency_PropertyType() {
      _dQ_DomainConsistency = new DQ_DomainConsistency_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_DomainConsistency", Order = 0)]
    public DQ_DomainConsistency_Type DQ_DomainConsistency {
      get {
        return _dQ_DomainConsistency;
      }
      set {
        if ((_dQ_DomainConsistency == value)) {
          return;
        }
        if (((_dQ_DomainConsistency == null)
                    || (_dQ_DomainConsistency.Equals(value) != true))) {
          _dQ_DomainConsistency = value;
          OnPropertyChanged("DQ_DomainConsistency");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_FormatConsistency_PropertyType")]
  public class DQ_FormatConsistency_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_FormatConsistency_Type _dQ_FormatConsistency;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_FormatConsistency_PropertyType class constructor
    /// </summary>
    public DQ_FormatConsistency_PropertyType() {
      _dQ_FormatConsistency = new DQ_FormatConsistency_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_FormatConsistency", Order = 0)]
    public DQ_FormatConsistency_Type DQ_FormatConsistency {
      get {
        return _dQ_FormatConsistency;
      }
      set {
        if ((_dQ_FormatConsistency == value)) {
          return;
        }
        if (((_dQ_FormatConsistency == null)
                    || (_dQ_FormatConsistency.Equals(value) != true))) {
          _dQ_FormatConsistency = value;
          OnPropertyChanged("DQ_FormatConsistency");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_TopologicalConsistency_PropertyType")]
  public class DQ_TopologicalConsistency_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_TopologicalConsistency_Type _dQ_TopologicalConsistency;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_TopologicalConsistency_PropertyType class constructor
    /// </summary>
    public DQ_TopologicalConsistency_PropertyType() {
      _dQ_TopologicalConsistency = new DQ_TopologicalConsistency_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_TopologicalConsistency", Order = 0)]
    public DQ_TopologicalConsistency_Type DQ_TopologicalConsistency {
      get {
        return _dQ_TopologicalConsistency;
      }
      set {
        if ((_dQ_TopologicalConsistency == value)) {
          return;
        }
        if (((_dQ_TopologicalConsistency == null)
                    || (_dQ_TopologicalConsistency.Equals(value) != true))) {
          _dQ_TopologicalConsistency = value;
          OnPropertyChanged("DQ_TopologicalConsistency");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_AbsoluteExternalPositionalAccuracy_PropertyType")]
  public class DQ_AbsoluteExternalPositionalAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_AbsoluteExternalPositionalAccuracy_Type _dQ_AbsoluteExternalPositionalAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_AbsoluteExternalPositionalAccuracy_PropertyType class constructor
    /// </summary>
    public DQ_AbsoluteExternalPositionalAccuracy_PropertyType() {
      _dQ_AbsoluteExternalPositionalAccuracy = new DQ_AbsoluteExternalPositionalAccuracy_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_AbsoluteExternalPositionalAccuracy", Order = 0)]
    public DQ_AbsoluteExternalPositionalAccuracy_Type DQ_AbsoluteExternalPositionalAccuracy {
      get {
        return _dQ_AbsoluteExternalPositionalAccuracy;
      }
      set {
        if ((_dQ_AbsoluteExternalPositionalAccuracy == value)) {
          return;
        }
        if (((_dQ_AbsoluteExternalPositionalAccuracy == null)
                    || (_dQ_AbsoluteExternalPositionalAccuracy.Equals(value) != true))) {
          _dQ_AbsoluteExternalPositionalAccuracy = value;
          OnPropertyChanged("DQ_AbsoluteExternalPositionalAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_GriddedDataPositionalAccuracy_PropertyType")]
  public class DQ_GriddedDataPositionalAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_GriddedDataPositionalAccuracy_Type _dQ_GriddedDataPositionalAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_GriddedDataPositionalAccuracy_PropertyType class constructor
    /// </summary>
    public DQ_GriddedDataPositionalAccuracy_PropertyType() {
      _dQ_GriddedDataPositionalAccuracy = new DQ_GriddedDataPositionalAccuracy_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_GriddedDataPositionalAccuracy", Order = 0)]
    public DQ_GriddedDataPositionalAccuracy_Type DQ_GriddedDataPositionalAccuracy {
      get {
        return _dQ_GriddedDataPositionalAccuracy;
      }
      set {
        if ((_dQ_GriddedDataPositionalAccuracy == value)) {
          return;
        }
        if (((_dQ_GriddedDataPositionalAccuracy == null)
                    || (_dQ_GriddedDataPositionalAccuracy.Equals(value) != true))) {
          _dQ_GriddedDataPositionalAccuracy = value;
          OnPropertyChanged("DQ_GriddedDataPositionalAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_RelativeInternalPositionalAccuracy_PropertyType")]
  public class DQ_RelativeInternalPositionalAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_RelativeInternalPositionalAccuracy_Type _dQ_RelativeInternalPositionalAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_RelativeInternalPositionalAccuracy_PropertyType class constructor
    /// </summary>
    public DQ_RelativeInternalPositionalAccuracy_PropertyType() {
      _dQ_RelativeInternalPositionalAccuracy = new DQ_RelativeInternalPositionalAccuracy_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_RelativeInternalPositionalAccuracy", Order = 0)]
    public DQ_RelativeInternalPositionalAccuracy_Type DQ_RelativeInternalPositionalAccuracy {
      get {
        return _dQ_RelativeInternalPositionalAccuracy;
      }
      set {
        if ((_dQ_RelativeInternalPositionalAccuracy == value)) {
          return;
        }
        if (((_dQ_RelativeInternalPositionalAccuracy == null)
                    || (_dQ_RelativeInternalPositionalAccuracy.Equals(value) != true))) {
          _dQ_RelativeInternalPositionalAccuracy = value;
          OnPropertyChanged("DQ_RelativeInternalPositionalAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_ThematicClassificationCorrectness_PropertyType")]
  public class DQ_ThematicClassificationCorrectness_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_ThematicClassificationCorrectness_Type _dQ_ThematicClassificationCorrectness;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_ThematicClassificationCorrectness_PropertyType class constructor
    /// </summary>
    public DQ_ThematicClassificationCorrectness_PropertyType() {
      _dQ_ThematicClassificationCorrectness = new DQ_ThematicClassificationCorrectness_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_ThematicClassificationCorrectness", Order = 0)]
    public DQ_ThematicClassificationCorrectness_Type DQ_ThematicClassificationCorrectness {
      get {
        return _dQ_ThematicClassificationCorrectness;
      }
      set {
        if ((_dQ_ThematicClassificationCorrectness == value)) {
          return;
        }
        if (((_dQ_ThematicClassificationCorrectness == null)
                    || (_dQ_ThematicClassificationCorrectness.Equals(value) != true))) {
          _dQ_ThematicClassificationCorrectness = value;
          OnPropertyChanged("DQ_ThematicClassificationCorrectness");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_NonQuantitativeAttributeAccuracy_PropertyType")]
  public class DQ_NonQuantitativeAttributeAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_NonQuantitativeAttributeAccuracy_Type _dQ_NonQuantitativeAttributeAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_NonQuantitativeAttributeAccuracy_PropertyType class constructor
    /// </summary>
    public DQ_NonQuantitativeAttributeAccuracy_PropertyType() {
      _dQ_NonQuantitativeAttributeAccuracy = new DQ_NonQuantitativeAttributeAccuracy_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_NonQuantitativeAttributeAccuracy", Order = 0)]
    public DQ_NonQuantitativeAttributeAccuracy_Type DQ_NonQuantitativeAttributeAccuracy {
      get {
        return _dQ_NonQuantitativeAttributeAccuracy;
      }
      set {
        if ((_dQ_NonQuantitativeAttributeAccuracy == value)) {
          return;
        }
        if (((_dQ_NonQuantitativeAttributeAccuracy == null)
                    || (_dQ_NonQuantitativeAttributeAccuracy.Equals(value) != true))) {
          _dQ_NonQuantitativeAttributeAccuracy = value;
          OnPropertyChanged("DQ_NonQuantitativeAttributeAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_QuantitativeAttributeAccuracy_PropertyType")]
  public class DQ_QuantitativeAttributeAccuracy_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_QuantitativeAttributeAccuracy_Type _dQ_QuantitativeAttributeAccuracy;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_QuantitativeAttributeAccuracy_PropertyType class constructor
    /// </summary>
    public DQ_QuantitativeAttributeAccuracy_PropertyType() {
      _dQ_QuantitativeAttributeAccuracy = new DQ_QuantitativeAttributeAccuracy_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_QuantitativeAttributeAccuracy", Order = 0)]
    public DQ_QuantitativeAttributeAccuracy_Type DQ_QuantitativeAttributeAccuracy {
      get {
        return _dQ_QuantitativeAttributeAccuracy;
      }
      set {
        if ((_dQ_QuantitativeAttributeAccuracy == value)) {
          return;
        }
        if (((_dQ_QuantitativeAttributeAccuracy == null)
                    || (_dQ_QuantitativeAttributeAccuracy.Equals(value) != true))) {
          _dQ_QuantitativeAttributeAccuracy = value;
          OnPropertyChanged("DQ_QuantitativeAttributeAccuracy");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_AccuracyOfATimeMeasurement_PropertyType")]
  public class DQ_AccuracyOfATimeMeasurement_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_AccuracyOfATimeMeasurement_Type _dQ_AccuracyOfATimeMeasurement;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_AccuracyOfATimeMeasurement_PropertyType class constructor
    /// </summary>
    public DQ_AccuracyOfATimeMeasurement_PropertyType() {
      _dQ_AccuracyOfATimeMeasurement = new DQ_AccuracyOfATimeMeasurement_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_AccuracyOfATimeMeasurement", Order = 0)]
    public DQ_AccuracyOfATimeMeasurement_Type DQ_AccuracyOfATimeMeasurement {
      get {
        return _dQ_AccuracyOfATimeMeasurement;
      }
      set {
        if ((_dQ_AccuracyOfATimeMeasurement == value)) {
          return;
        }
        if (((_dQ_AccuracyOfATimeMeasurement == null)
                    || (_dQ_AccuracyOfATimeMeasurement.Equals(value) != true))) {
          _dQ_AccuracyOfATimeMeasurement = value;
          OnPropertyChanged("DQ_AccuracyOfATimeMeasurement");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_TemporalConsistency_PropertyType")]
  public class DQ_TemporalConsistency_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_TemporalConsistency_Type _dQ_TemporalConsistency;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_TemporalConsistency_PropertyType class constructor
    /// </summary>
    public DQ_TemporalConsistency_PropertyType() {
      _dQ_TemporalConsistency = new DQ_TemporalConsistency_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_TemporalConsistency", Order = 0)]
    public DQ_TemporalConsistency_Type DQ_TemporalConsistency {
      get {
        return _dQ_TemporalConsistency;
      }
      set {
        if ((_dQ_TemporalConsistency == value)) {
          return;
        }
        if (((_dQ_TemporalConsistency == null)
                    || (_dQ_TemporalConsistency.Equals(value) != true))) {
          _dQ_TemporalConsistency = value;
          OnPropertyChanged("DQ_TemporalConsistency");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_TemporalValidity_PropertyType")]
  public class DQ_TemporalValidity_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_TemporalValidity_Type _dQ_TemporalValidity;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_TemporalValidity_PropertyType class constructor
    /// </summary>
    public DQ_TemporalValidity_PropertyType() {
      _dQ_TemporalValidity = new DQ_TemporalValidity_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_TemporalValidity", Order = 0)]
    public DQ_TemporalValidity_Type DQ_TemporalValidity {
      get {
        return _dQ_TemporalValidity;
      }
      set {
        if ((_dQ_TemporalValidity == value)) {
          return;
        }
        if (((_dQ_TemporalValidity == null)
                    || (_dQ_TemporalValidity.Equals(value) != true))) {
          _dQ_TemporalValidity = value;
          OnPropertyChanged("DQ_TemporalValidity");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_QuantitativeResult_PropertyType")]
  public class DQ_QuantitativeResult_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_QuantitativeResult_Type _dQ_QuantitativeResult;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_QuantitativeResult_PropertyType class constructor
    /// </summary>
    public DQ_QuantitativeResult_PropertyType() {
      _dQ_QuantitativeResult = new DQ_QuantitativeResult_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_QuantitativeResult", Order = 0)]
    public DQ_QuantitativeResult_Type DQ_QuantitativeResult {
      get {
        return _dQ_QuantitativeResult;
      }
      set {
        if ((_dQ_QuantitativeResult == value)) {
          return;
        }
        if (((_dQ_QuantitativeResult == null)
                    || (_dQ_QuantitativeResult.Equals(value) != true))) {
          _dQ_QuantitativeResult = value;
          OnPropertyChanged("DQ_QuantitativeResult");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DQ_ConformanceResult_PropertyType")]
  public class DQ_ConformanceResult_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DQ_ConformanceResult_Type _dQ_ConformanceResult;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DQ_ConformanceResult_PropertyType class constructor
    /// </summary>
    public DQ_ConformanceResult_PropertyType() {
      _dQ_ConformanceResult = new DQ_ConformanceResult_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DQ_ConformanceResult", Order = 0)]
    public DQ_ConformanceResult_Type DQ_ConformanceResult {
      get {
        return _dQ_ConformanceResult;
      }
      set {
        if ((_dQ_ConformanceResult == value)) {
          return;
        }
        if (((_dQ_ConformanceResult == null)
                    || (_dQ_ConformanceResult.Equals(value) != true))) {
          _dQ_ConformanceResult = value;
          OnPropertyChanged("DQ_ConformanceResult");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("DS_Association_PropertyType")]
  public class DS_Association_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private DS_Association_Type _dS_Association;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// DS_Association_PropertyType class constructor
    /// </summary>
    public DS_Association_PropertyType() {
      _dS_Association = new DS_Association_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("DS_Association", Order = 0)]
    public DS_Association_Type DS_Association {
      get {
        return _dS_Association;
      }
      set {
        if ((_dS_Association == value)) {
          return;
        }
        if (((_dS_Association == null)
                    || (_dS_Association.Equals(value) != true))) {
          _dS_Association = value;
          OnPropertyChanged("DS_Association");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ServiceIdentification_PropertyType")]
  public class MD_ServiceIdentification_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ServiceIdentification_Type _mD_ServiceIdentification;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ServiceIdentification_PropertyType class constructor
    /// </summary>
    public MD_ServiceIdentification_PropertyType() {
      _mD_ServiceIdentification = new MD_ServiceIdentification_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ServiceIdentification", Order = 0)]
    public MD_ServiceIdentification_Type MD_ServiceIdentification {
      get {
        return _mD_ServiceIdentification;
      }
      set {
        if ((_mD_ServiceIdentification == value)) {
          return;
        }
        if (((_mD_ServiceIdentification == null)
                    || (_mD_ServiceIdentification.Equals(value) != true))) {
          _mD_ServiceIdentification = value;
          OnPropertyChanged("MD_ServiceIdentification");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_DataIdentification_PropertyType")]
  public class MD_DataIdentification_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_DataIdentification_Type _mD_DataIdentification;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_DataIdentification_PropertyType class constructor
    /// </summary>
    public MD_DataIdentification_PropertyType() {
      _mD_DataIdentification = new MD_DataIdentification_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_DataIdentification", Order = 0)]
    public MD_DataIdentification_Type MD_DataIdentification {
      get {
        return _mD_DataIdentification;
      }
      set {
        if ((_mD_DataIdentification == value)) {
          return;
        }
        if (((_mD_DataIdentification == null)
                    || (_mD_DataIdentification.Equals(value) != true))) {
          _mD_DataIdentification = value;
          OnPropertyChanged("MD_DataIdentification");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_DistributionUnits_PropertyType")]
  public class MD_DistributionUnits_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private CodeListValue_Type _mD_DistributionUnits;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_DistributionUnits_PropertyType class constructor
    /// </summary>
    public MD_DistributionUnits_PropertyType() {
      _mD_DistributionUnits = new CodeListValue_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_DistributionUnits", Order = 0)]
    public CodeListValue_Type MD_DistributionUnits {
      get {
        return _mD_DistributionUnits;
      }
      set {
        if ((_mD_DistributionUnits == value)) {
          return;
        }
        if (((_mD_DistributionUnits == null)
                    || (_mD_DistributionUnits.Equals(value) != true))) {
          _mD_DistributionUnits = value;
          OnPropertyChanged("MD_DistributionUnits");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_SecurityConstraints_PropertyType")]
  public class MD_SecurityConstraints_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_SecurityConstraints_Type _mD_SecurityConstraints;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_SecurityConstraints_PropertyType class constructor
    /// </summary>
    public MD_SecurityConstraints_PropertyType() {
      _mD_SecurityConstraints = new MD_SecurityConstraints_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_SecurityConstraints", Order = 0)]
    public MD_SecurityConstraints_Type MD_SecurityConstraints {
      get {
        return _mD_SecurityConstraints;
      }
      set {
        if ((_mD_SecurityConstraints == value)) {
          return;
        }
        if (((_mD_SecurityConstraints == null)
                    || (_mD_SecurityConstraints.Equals(value) != true))) {
          _mD_SecurityConstraints = value;
          OnPropertyChanged("MD_SecurityConstraints");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_LegalConstraints_PropertyType")]
  public class MD_LegalConstraints_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_LegalConstraints_Type _mD_LegalConstraints;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_LegalConstraints_PropertyType class constructor
    /// </summary>
    public MD_LegalConstraints_PropertyType() {
      _mD_LegalConstraints = new MD_LegalConstraints_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_LegalConstraints", Order = 0)]
    public MD_LegalConstraints_Type MD_LegalConstraints {
      get {
        return _mD_LegalConstraints;
      }
      set {
        if ((_mD_LegalConstraints == value)) {
          return;
        }
        if (((_mD_LegalConstraints == null)
                    || (_mD_LegalConstraints.Equals(value) != true))) {
          _mD_LegalConstraints = value;
          OnPropertyChanged("MD_LegalConstraints");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Band_PropertyType")]
  public class MD_Band_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Band_Type _mD_Band;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Band_PropertyType class constructor
    /// </summary>
    public MD_Band_PropertyType() {
      _mD_Band = new MD_Band_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Band", Order = 0)]
    public MD_Band_Type MD_Band {
      get {
        return _mD_Band;
      }
      set {
        if ((_mD_Band == value)) {
          return;
        }
        if (((_mD_Band == null)
                    || (_mD_Band.Equals(value) != true))) {
          _mD_Band = value;
          OnPropertyChanged("MD_Band");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_ImageDescription_PropertyType")]
  public class MD_ImageDescription_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_ImageDescription_Type _mD_ImageDescription;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_ImageDescription_PropertyType class constructor
    /// </summary>
    public MD_ImageDescription_PropertyType() {
      _mD_ImageDescription = new MD_ImageDescription_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_ImageDescription", Order = 0)]
    public MD_ImageDescription_Type MD_ImageDescription {
      get {
        return _mD_ImageDescription;
      }
      set {
        if ((_mD_ImageDescription == value)) {
          return;
        }
        if (((_mD_ImageDescription == null)
                    || (_mD_ImageDescription.Equals(value) != true))) {
          _mD_ImageDescription = value;
          OnPropertyChanged("MD_ImageDescription");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_CoverageDescription_PropertyType")]
  public class MD_CoverageDescription_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_CoverageDescription_Type _mD_CoverageDescription;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_CoverageDescription_PropertyType class constructor
    /// </summary>
    public MD_CoverageDescription_PropertyType() {
      _mD_CoverageDescription = new MD_CoverageDescription_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_CoverageDescription", Order = 0)]
    public MD_CoverageDescription_Type MD_CoverageDescription {
      get {
        return _mD_CoverageDescription;
      }
      set {
        if ((_mD_CoverageDescription == value)) {
          return;
        }
        if (((_mD_CoverageDescription == null)
                    || (_mD_CoverageDescription.Equals(value) != true))) {
          _mD_CoverageDescription = value;
          OnPropertyChanged("MD_CoverageDescription");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_FeatureCatalogueDescription_PropertyType")]
  public class MD_FeatureCatalogueDescription_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_FeatureCatalogueDescription_Type _mD_FeatureCatalogueDescription;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_FeatureCatalogueDescription_PropertyType class constructor
    /// </summary>
    public MD_FeatureCatalogueDescription_PropertyType() {
      _mD_FeatureCatalogueDescription = new MD_FeatureCatalogueDescription_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_FeatureCatalogueDescription", Order = 0)]
    public MD_FeatureCatalogueDescription_Type MD_FeatureCatalogueDescription {
      get {
        return _mD_FeatureCatalogueDescription;
      }
      set {
        if ((_mD_FeatureCatalogueDescription == value)) {
          return;
        }
        if (((_mD_FeatureCatalogueDescription == null)
                    || (_mD_FeatureCatalogueDescription.Equals(value) != true))) {
          _mD_FeatureCatalogueDescription = value;
          OnPropertyChanged("MD_FeatureCatalogueDescription");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Georectified_PropertyType")]
  public class MD_Georectified_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Georectified_Type _mD_Georectified;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Georectified_PropertyType class constructor
    /// </summary>
    public MD_Georectified_PropertyType() {
      _mD_Georectified = new MD_Georectified_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Georectified", Order = 0)]
    public MD_Georectified_Type MD_Georectified {
      get {
        return _mD_Georectified;
      }
      set {
        if ((_mD_Georectified == value)) {
          return;
        }
        if (((_mD_Georectified == null)
                    || (_mD_Georectified.Equals(value) != true))) {
          _mD_Georectified = value;
          OnPropertyChanged("MD_Georectified");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_Georeferenceable_PropertyType")]
  public class MD_Georeferenceable_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_Georeferenceable_Type _mD_Georeferenceable;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_Georeferenceable_PropertyType class constructor
    /// </summary>
    public MD_Georeferenceable_PropertyType() {
      _mD_Georeferenceable = new MD_Georeferenceable_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_Georeferenceable", Order = 0)]
    public MD_Georeferenceable_Type MD_Georeferenceable {
      get {
        return _mD_Georeferenceable;
      }
      set {
        if ((_mD_Georeferenceable == value)) {
          return;
        }
        if (((_mD_Georeferenceable == null)
                    || (_mD_Georeferenceable.Equals(value) != true))) {
          _mD_Georeferenceable = value;
          OnPropertyChanged("MD_Georeferenceable");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_VectorSpatialRepresentation_PropertyType")]
  public class MD_VectorSpatialRepresentation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_VectorSpatialRepresentation_Type _mD_VectorSpatialRepresentation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_VectorSpatialRepresentation_PropertyType class constructor
    /// </summary>
    public MD_VectorSpatialRepresentation_PropertyType() {
      _mD_VectorSpatialRepresentation = new MD_VectorSpatialRepresentation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_VectorSpatialRepresentation", Order = 0)]
    public MD_VectorSpatialRepresentation_Type MD_VectorSpatialRepresentation {
      get {
        return _mD_VectorSpatialRepresentation;
      }
      set {
        if ((_mD_VectorSpatialRepresentation == value)) {
          return;
        }
        if (((_mD_VectorSpatialRepresentation == null)
                    || (_mD_VectorSpatialRepresentation.Equals(value) != true))) {
          _mD_VectorSpatialRepresentation = value;
          OnPropertyChanged("MD_VectorSpatialRepresentation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("MD_GridSpatialRepresentation_PropertyType")]
  public class MD_GridSpatialRepresentation_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private MD_GridSpatialRepresentation_Type _mD_GridSpatialRepresentation;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// MD_GridSpatialRepresentation_PropertyType class constructor
    /// </summary>
    public MD_GridSpatialRepresentation_PropertyType() {
      _mD_GridSpatialRepresentation = new MD_GridSpatialRepresentation_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("MD_GridSpatialRepresentation", Order = 0)]
    public MD_GridSpatialRepresentation_Type MD_GridSpatialRepresentation {
      get {
        return _mD_GridSpatialRepresentation;
      }
      set {
        if ((_mD_GridSpatialRepresentation == value)) {
          return;
        }
        if (((_mD_GridSpatialRepresentation == null)
                    || (_mD_GridSpatialRepresentation.Equals(value) != true))) {
          _mD_GridSpatialRepresentation = value;
          OnPropertyChanged("MD_GridSpatialRepresentation");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("RS_ReferenceSystem_PropertyType")]
  public class RS_ReferenceSystem_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private AbstractRS_ReferenceSystem_Type _abstractRS_ReferenceSystem;
    private string _uuidref;
    private string _nilReason;
    #endregion

    [XmlElement(Order = 0)]
    [JsonProperty("AbstractRS_ReferenceSystem", Order = 0)]
    public AbstractRS_ReferenceSystem_Type AbstractRS_ReferenceSystem {
      get {
        return _abstractRS_ReferenceSystem;
      }
      set {
        if ((_abstractRS_ReferenceSystem == value)) {
          return;
        }
        if (((_abstractRS_ReferenceSystem == null)
                    || (_abstractRS_ReferenceSystem.Equals(value) != true))) {
          _abstractRS_ReferenceSystem = value;
          OnPropertyChanged("AbstractRS_ReferenceSystem");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_GeographicDescription_PropertyType")]
  public class EX_GeographicDescription_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_GeographicDescription_Type _eX_GeographicDescription;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_GeographicDescription_PropertyType class constructor
    /// </summary>
    public EX_GeographicDescription_PropertyType() {
      _eX_GeographicDescription = new EX_GeographicDescription_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_GeographicDescription", Order = 0)]
    public EX_GeographicDescription_Type EX_GeographicDescription {
      get {
        return _eX_GeographicDescription;
      }
      set {
        if ((_eX_GeographicDescription == value)) {
          return;
        }
        if (((_eX_GeographicDescription == null)
                    || (_eX_GeographicDescription.Equals(value) != true))) {
          _eX_GeographicDescription = value;
          OnPropertyChanged("EX_GeographicDescription");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_SpatialTemporalExtent_PropertyType")]
  public class EX_SpatialTemporalExtent_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_SpatialTemporalExtent_Type _eX_SpatialTemporalExtent;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_SpatialTemporalExtent_PropertyType class constructor
    /// </summary>
    public EX_SpatialTemporalExtent_PropertyType() {
      _eX_SpatialTemporalExtent = new EX_SpatialTemporalExtent_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_SpatialTemporalExtent", Order = 0)]
    public EX_SpatialTemporalExtent_Type EX_SpatialTemporalExtent {
      get {
        return _eX_SpatialTemporalExtent;
      }
      set {
        if ((_eX_SpatialTemporalExtent == value)) {
          return;
        }
        if (((_eX_SpatialTemporalExtent == null)
                    || (_eX_SpatialTemporalExtent.Equals(value) != true))) {
          _eX_SpatialTemporalExtent = value;
          OnPropertyChanged("EX_SpatialTemporalExtent");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  /// <summary>
  /// Extent with respect to date and time
  /// </summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [XmlRootAttribute("EX_SpatialTemporalExtent", Namespace = "http://www.isotc211.org/2005/gmd", IsNullable = false)]
  [JsonObject("EX_SpatialTemporalExtent_Type")]
  public class EX_SpatialTemporalExtent_Type : EX_TemporalExtent_Type {
    #region Private fields
    private List<EX_GeographicExtent_PropertyType> _spatialExtent;
    #endregion

    /// <summary>
    /// EX_SpatialTemporalExtent_Type class constructor
    /// </summary>
    public EX_SpatialTemporalExtent_Type() {
      _spatialExtent = new List<EX_GeographicExtent_PropertyType>();
    }

    [XmlElement("spatialExtent", Order = 0)]
    [JsonProperty("spatialExtent", Order = 0)]
    public List<EX_GeographicExtent_PropertyType> spatialExtent {
      get {
        return _spatialExtent;
      }
      set {
        if ((_spatialExtent == value)) {
          return;
        }
        if (((_spatialExtent == null)
                    || (_spatialExtent.Equals(value) != true))) {
          _spatialExtent = value;
          OnPropertyChanged("spatialExtent");
        }
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_GeographicBoundingBox_PropertyType")]
  public class EX_GeographicBoundingBox_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_GeographicBoundingBox_Type _eX_GeographicBoundingBox;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_GeographicBoundingBox_PropertyType class constructor
    /// </summary>
    public EX_GeographicBoundingBox_PropertyType() {
      _eX_GeographicBoundingBox = new EX_GeographicBoundingBox_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_GeographicBoundingBox", Order = 0)]
    public EX_GeographicBoundingBox_Type EX_GeographicBoundingBox {
      get {
        return _eX_GeographicBoundingBox;
      }
      set {
        if ((_eX_GeographicBoundingBox == value)) {
          return;
        }
        if (((_eX_GeographicBoundingBox == null)
                    || (_eX_GeographicBoundingBox.Equals(value) != true))) {
          _eX_GeographicBoundingBox = value;
          OnPropertyChanged("EX_GeographicBoundingBox");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
  [Serializable]
  [DebuggerStepThrough]
  [DesignerCategoryAttribute("code")]
  [XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmd")]
  [JsonObject("EX_BoundingPolygon_PropertyType")]
  public class EX_BoundingPolygon_PropertyType : INotifyPropertyChanged {
    #region Private fields
    private EX_BoundingPolygon_Type _eX_BoundingPolygon;
    private string _uuidref;
    private string _nilReason;
    #endregion

    /// <summary>
    /// EX_BoundingPolygon_PropertyType class constructor
    /// </summary>
    public EX_BoundingPolygon_PropertyType() {
      _eX_BoundingPolygon = new EX_BoundingPolygon_Type();
    }

    [XmlElement(Order = 0)]
    [JsonProperty("EX_BoundingPolygon", Order = 0)]
    public EX_BoundingPolygon_Type EX_BoundingPolygon {
      get {
        return _eX_BoundingPolygon;
      }
      set {
        if ((_eX_BoundingPolygon == value)) {
          return;
        }
        if (((_eX_BoundingPolygon == null)
                    || (_eX_BoundingPolygon.Equals(value) != true))) {
          _eX_BoundingPolygon = value;
          OnPropertyChanged("EX_BoundingPolygon");
        }
      }
    }

    [XmlAttribute]
    [JsonProperty("uuidref")]
    public string uuidref {
      get {
        return _uuidref;
      }
      set {
        if ((_uuidref == value)) {
          return;
        }
        if (((_uuidref == null)
                    || (_uuidref.Equals(value) != true))) {
          _uuidref = value;
          OnPropertyChanged("uuidref");
        }
      }
    }

    [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.isotc211.org/2005/gco")]
    [JsonProperty("nilReason")]
    public string nilReason {
      get {
        return _nilReason;
      }
      set {
        if ((_nilReason == value)) {
          return;
        }
        if (((_nilReason == null)
                    || (_nilReason.Equals(value) != true))) {
          _nilReason = value;
          OnPropertyChanged("nilReason");
        }
      }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    public virtual void OnPropertyChanged(string propertyName) {
      PropertyChangedEventHandler handler = PropertyChanged;
      if ((handler != null)) {
        handler(this, new PropertyChangedEventArgs(propertyName));
      }
    }
  }
}
#pragma warning restore
