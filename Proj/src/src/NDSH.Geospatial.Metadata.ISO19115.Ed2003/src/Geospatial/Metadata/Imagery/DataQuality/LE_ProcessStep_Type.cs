
#region Header
// Title Name        : 
// Member of         : 
// Description       : 
// Created by        :  27/01/2023, 01:39, @gisvlasta.
// Updated by        : 
// Version           : 1.0.0
// GitHub Repository : https://github.com/UoMResearchIT/nerc-digital-solutions-hub
// License           : MIT Licence
// Copyright         : 
//
// Comments          : 
// ---------------------------------------------------------------------------------------------------------------------
// XSD               : /2005/gmi/dataQualityInformation.xsd
// ---------------------------------------------------------------------------------------------------------------------
// <xs:complexType name="LE_ProcessStep_Type">
//   <xs:annotation>
//     <xs:documentation>Description: Information about an event or transformation in the life of the dataset including details of the algorithm and software used for processing - FGDC:  - shortName: DetailProcStep</xs:documentation>
//   </xs:annotation>
//   <xs:complexContent>
//     <xs:extension base="gmd:LI_ProcessStep_Type">
//       <xs:sequence>
//         <xs:element name="output" type="gmi:LE_Source_PropertyType" minOccurs="0" maxOccurs="unbounded"/>
//         <xs:element name="report" type="gmi:LE_ProcessStepReport_PropertyType" minOccurs="0" maxOccurs="unbounded"/>
//         <xs:element name="processingInformation" type="gmi:LE_Processing_PropertyType" minOccurs="0"/>
//       </xs:sequence>
//     </xs:extension>
//   </xs:complexContent>
// </xs:complexType>
// <xs:element name="LE_ProcessStep" type="gmi:LE_ProcessStep_Type" substitutionGroup="gmd:LI_ProcessStep"/>
// <xs:complexType name="LE_ProcessStep_PropertyType">
//   <xs:sequence>
//     <xs:element ref="gmi:LE_ProcessStep" minOccurs="0"/>
//   </xs:sequence>
//   <xs:attributeGroup ref="gco:ObjectReference"/>
//   <xs:attribute ref="gco:nilReason"/>
// </xs:complexType>
// ---------------------------------------------------------------------------------------------------------------------
#endregion

#region Imported Namespaces

using NDSH.Geospatial.Metadata.DataQuality.Lineage;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Serialization;

#endregion

namespace NDSH.Geospatial.Metadata.Imagery.DataQuality {

  /// <summary>
  /// Information about an event or transformation in the life of the dataset
  /// including details of the algorithm and software used for processing.
  /// </summary>
  /// <remarks>ShortName: DetailProcStep</remarks>
  [Serializable]
  [XmlType("LE_ProcessStep", Namespace = "http://www.isotc211.org/2005/gmi")]
  [XmlRoot("LE_ProcessStep", Namespace = "http://www.isotc211.org/2005/gmi", IsNullable = false)]
  [JsonObject("LE_ProcessStep")]
  public class LE_ProcessStep_Type : LI_ProcessStep_Type {

    #region Constructors - Destructors

    /// <summary>
    /// Initializes the <see cref="LE_ProcessStep_Type"/>
    /// </summary>
    public LE_ProcessStep_Type() {

      xmlns = new XmlSerializerNamespaces();
      xmlns.Add("gmi", "http://www.isotc211.org/2005/gmi");

      _output = default; // new List<LE_Source_Type>();
      _report = default; // new List<LE_ProcessStepReport_Type>();
      _processingInformation = default; // new LE_Processing_Type();

    }

    #endregion

    #region Public Fields

    /// <summary>
    /// 
    /// </summary>
    [XmlNamespaceDeclarations()]
    public new XmlSerializerNamespaces xmlns;

    #endregion

    #region Public Properties

    private List<LE_Source_Type> _output;

    /// <summary>
    /// Description of the product generated as a result of the process step.
    /// </summary>
    // TODO: OBL - O
    // TODO: CAR - N
    [XmlElement("output", Order = 0)]
    [JsonProperty("output", Order = 0)]
    public List<LE_Source_Type> Output {
      get {
        return _output;
      }
      set => SetProperty(ref _output, value);
    }

    private List<LE_ProcessStepReport_Type> _report;

    /// <summary>
    /// Report generated by the process step.
    /// </summary>
    // TODO: OBL - O
    // TODO: CAR - N
    [XmlElement("report", Order = 1)]
    [JsonProperty("report", Order = 1)]
    public List<LE_ProcessStepReport_Type> Report {
      get {
        return _report;
      }
      set => SetProperty(ref _report, value);
    }

    private LE_Processing_Type _processingInformation;

    /// <summary>
    /// Comprehensive information about the procedure by which the algorithm was applied to derive geographic data from
    /// the raw instrument measurements, such as datasets, software used, and the processing environment.
    /// </summary>
    // TODO: OBL - O
    // TODO: CAR - 1
    [XmlElement("processingInformation", Order = 2)]
    [JsonProperty("processingInformation", Order = 2)]
    public LE_Processing_Type ProcessingInformation {
      get {
        return _processingInformation;
      }
      set => SetProperty(ref _processingInformation, value);
    }

    #endregion

  }

}
