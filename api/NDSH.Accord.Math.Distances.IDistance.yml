### YamlMime:ManagedReference
items:
- uid: NDSH.Accord.Math.Distances.IDistance
  commentId: T:NDSH.Accord.Math.Distances.IDistance
  id: IDistance
  parent: NDSH.Accord.Math.Distances
  children: []
  langs:
  - csharp
  - vb
  name: IDistance
  nameWithType: IDistance
  fullName: NDSH.Accord.Math.Distances.IDistance
  type: Interface
  source:
    remote:
      path: Proj/src/src/NDSH/src/Accord/Math/Distances/IDistance.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/ndsh-dotnet-temp.git
    id: IDistance
    path: ../../../GitHub/ndsh-dotnet-temp/dev/Proj/src/src/NDSH/src/Accord/Math/Distances/IDistance.cs
    startLine: 116
  assemblies:
  - NDSH
  namespace: NDSH.Accord.Math.Distances
  summary: Common interface for distance functions (not necessarily metrics).
  remarks: >-
    <p>
      The framework distinguishes between metrics and distances by using different
      types for them. This makes it possible to let the compiler figure out logic
      problems such as the specification of a non-metric for a method that requires
      a proper metric (i.e. that respects the triangle inequality).</p>

    <p>
      The objective of this technique is to make it harder to make some mistakes.
      However, it is generally possible to bypass this mechanism by using named constructors
      available at each of the classes, such as Minkowski's Minkowski.Nonmetric 
      method, to create distances implementing the <xref href="NDSH.Accord.Math.Distances.IMetric%601" data-throw-if-not-resolved="false"></xref> interface that are not
      really metrics. Use at your own risk.</p>
  example: []
  syntax:
    content: 'public interface IDistance : IDistance<double[]>, IDistance<double[], double[]>'
    content.vb: Public Interface IDistance Inherits IDistance(Of Double()), IDistance(Of Double(), Double())
  seealso:
  - linkId: NDSH.Accord.Math.Distances.IDistance`1
    commentId: T:NDSH.Accord.Math.Distances.IDistance`1
  - linkId: NDSH.Accord.Math.Distances.IMetric`1
    commentId: T:NDSH.Accord.Math.Distances.IMetric`1
  inheritedMembers:
  - NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}.Distance(System.Double[],System.Double[])
references:
- uid: NDSH.Accord.Math.Distances.IDistance`1
  commentId: T:NDSH.Accord.Math.Distances.IDistance`1
  href: NDSH.Accord.Math.Distances.IDistance-1.html
  name: IDistance<T>
  nameWithType: IDistance<T>
  fullName: NDSH.Accord.Math.Distances.IDistance<T>
  nameWithType.vb: IDistance(Of T)
  fullName.vb: NDSH.Accord.Math.Distances.IDistance(Of T)
  name.vb: IDistance(Of T)
  spec.csharp:
  - uid: NDSH.Accord.Math.Distances.IDistance`1
    name: IDistance
    href: NDSH.Accord.Math.Distances.IDistance-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NDSH.Accord.Math.Distances.IDistance`1
    name: IDistance
    href: NDSH.Accord.Math.Distances.IDistance-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NDSH.Accord.Math.Distances.IMetric`1
  commentId: T:NDSH.Accord.Math.Distances.IMetric`1
  href: NDSH.Accord.Math.Distances.IMetric-1.html
  name: IMetric<T>
  nameWithType: IMetric<T>
  fullName: NDSH.Accord.Math.Distances.IMetric<T>
  nameWithType.vb: IMetric(Of T)
  fullName.vb: NDSH.Accord.Math.Distances.IMetric(Of T)
  name.vb: IMetric(Of T)
  spec.csharp:
  - uid: NDSH.Accord.Math.Distances.IMetric`1
    name: IMetric
    href: NDSH.Accord.Math.Distances.IMetric-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NDSH.Accord.Math.Distances.IMetric`1
    name: IMetric
    href: NDSH.Accord.Math.Distances.IMetric-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NDSH.Accord.Math.Distances
  commentId: N:NDSH.Accord.Math.Distances
  href: NDSH.html
  name: NDSH.Accord.Math.Distances
  nameWithType: NDSH.Accord.Math.Distances
  fullName: NDSH.Accord.Math.Distances
  spec.csharp:
  - uid: NDSH
    name: NDSH
    href: NDSH.html
  - name: .
  - uid: NDSH.Accord
    name: Accord
    href: NDSH.Accord.html
  - name: .
  - uid: NDSH.Accord.Math
    name: Math
    href: NDSH.Accord.Math.html
  - name: .
  - uid: NDSH.Accord.Math.Distances
    name: Distances
    href: NDSH.Accord.Math.Distances.html
  spec.vb:
  - uid: NDSH
    name: NDSH
    href: NDSH.html
  - name: .
  - uid: NDSH.Accord
    name: Accord
    href: NDSH.Accord.html
  - name: .
  - uid: NDSH.Accord.Math
    name: Math
    href: NDSH.Accord.Math.html
  - name: .
  - uid: NDSH.Accord.Math.Distances
    name: Distances
    href: NDSH.Accord.Math.Distances.html
- uid: NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}.Distance(System.Double[],System.Double[])
  commentId: M:NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}.Distance(System.Double[],System.Double[])
  parent: NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}
  definition: NDSH.Accord.Math.Distances.IDistance`2.Distance(`0,`1)
  href: NDSH.Accord.Math.Distances.IDistance-2.html#NDSH_Accord_Math_Distances_IDistance_2_Distance__0__1_
  name: Distance(double[], double[])
  nameWithType: IDistance<double[], double[]>.Distance(double[], double[])
  fullName: NDSH.Accord.Math.Distances.IDistance<double[], double[]>.Distance(double[], double[])
  nameWithType.vb: IDistance(Of Double(), Double()).Distance(Double(), Double())
  fullName.vb: NDSH.Accord.Math.Distances.IDistance(Of Double(), Double()).Distance(Double(), Double())
  name.vb: Distance(Double(), Double())
  spec.csharp:
  - uid: NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}.Distance(System.Double[],System.Double[])
    name: Distance
    href: NDSH.Accord.Math.Distances.IDistance-2.html#NDSH_Accord_Math_Distances_IDistance_2_Distance__0__1_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}.Distance(System.Double[],System.Double[])
    name: Distance
    href: NDSH.Accord.Math.Distances.IDistance-2.html#NDSH_Accord_Math_Distances_IDistance_2_Distance__0__1_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: )
- uid: NDSH.Accord.Math.Distances.IDistance`2.Distance(`0,`1)
  commentId: M:NDSH.Accord.Math.Distances.IDistance`2.Distance(`0,`1)
  href: NDSH.Accord.Math.Distances.IDistance-2.html#NDSH_Accord_Math_Distances_IDistance_2_Distance__0__1_
  name: Distance(T, U)
  nameWithType: IDistance<T, U>.Distance(T, U)
  fullName: NDSH.Accord.Math.Distances.IDistance<T, U>.Distance(T, U)
  nameWithType.vb: IDistance(Of T, U).Distance(T, U)
  fullName.vb: NDSH.Accord.Math.Distances.IDistance(Of T, U).Distance(T, U)
  spec.csharp:
  - uid: NDSH.Accord.Math.Distances.IDistance`2.Distance(`0,`1)
    name: Distance
    href: NDSH.Accord.Math.Distances.IDistance-2.html#NDSH_Accord_Math_Distances_IDistance_2_Distance__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
  spec.vb:
  - uid: NDSH.Accord.Math.Distances.IDistance`2.Distance(`0,`1)
    name: Distance
    href: NDSH.Accord.Math.Distances.IDistance-2.html#NDSH_Accord_Math_Distances_IDistance_2_Distance__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}
  commentId: T:NDSH.Accord.Math.Distances.IDistance{System.Double[],System.Double[]}
  parent: NDSH.Accord.Math.Distances
  definition: NDSH.Accord.Math.Distances.IDistance`2
  href: NDSH.Accord.Math.Distances.IDistance-2.html
  name: IDistance<double[], double[]>
  nameWithType: IDistance<double[], double[]>
  fullName: NDSH.Accord.Math.Distances.IDistance<double[], double[]>
  nameWithType.vb: IDistance(Of Double(), Double())
  fullName.vb: NDSH.Accord.Math.Distances.IDistance(Of Double(), Double())
  name.vb: IDistance(Of Double(), Double())
  spec.csharp:
  - uid: NDSH.Accord.Math.Distances.IDistance`2
    name: IDistance
    href: NDSH.Accord.Math.Distances.IDistance-2.html
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: NDSH.Accord.Math.Distances.IDistance`2
    name: IDistance
    href: NDSH.Accord.Math.Distances.IDistance-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: )
- uid: NDSH.Accord.Math.Distances.IDistance`2
  commentId: T:NDSH.Accord.Math.Distances.IDistance`2
  href: NDSH.Accord.Math.Distances.IDistance-2.html
  name: IDistance<T, U>
  nameWithType: IDistance<T, U>
  fullName: NDSH.Accord.Math.Distances.IDistance<T, U>
  nameWithType.vb: IDistance(Of T, U)
  fullName.vb: NDSH.Accord.Math.Distances.IDistance(Of T, U)
  name.vb: IDistance(Of T, U)
  spec.csharp:
  - uid: NDSH.Accord.Math.Distances.IDistance`2
    name: IDistance
    href: NDSH.Accord.Math.Distances.IDistance-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: NDSH.Accord.Math.Distances.IDistance`2
    name: IDistance
    href: NDSH.Accord.Math.Distances.IDistance-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
