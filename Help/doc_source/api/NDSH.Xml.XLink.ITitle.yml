### YamlMime:ManagedReference
items:
- uid: NDSH.Xml.XLink.ITitle
  commentId: T:NDSH.Xml.XLink.ITitle
  id: ITitle
  parent: NDSH.Xml.XLink
  children:
  - NDSH.Xml.XLink.ITitle.Title
  langs:
  - csharp
  - vb
  name: ITitle
  nameWithType: ITitle
  fullName: NDSH.Xml.XLink.ITitle
  type: Interface
  source:
    remote:
      path: Proj/src/src/NDSH.Xml/src/Xml/XLink/ITitle.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: ITitle
    path: ../../Proj/src/src/NDSH.Xml/src/Xml/XLink/ITitle.cs
    startLine: 26
  assemblies:
  - NDSH.Xml
  namespace: NDSH.Xml.XLink
  summary: Provides the contract for the <code>xlink:title</code> attribute.
  example: []
  syntax:
    content: public interface ITitle
    content.vb: Public Interface ITitle
- uid: NDSH.Xml.XLink.ITitle.Title
  commentId: P:NDSH.Xml.XLink.ITitle.Title
  id: Title
  parent: NDSH.Xml.XLink.ITitle
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ITitle.Title
  fullName: NDSH.Xml.XLink.ITitle.Title
  type: Property
  source:
    remote:
      path: Proj/src/src/NDSH.Xml/src/Xml/XLink/ITitle.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: Title
    path: ../../Proj/src/src/NDSH.Xml/src/Xml/XLink/ITitle.cs
    startLine: 46
  assemblies:
  - NDSH.Xml
  namespace: NDSH.Xml.XLink
  summary: >-
    <p>
      The <code>xlink:title</code> is an optional attribute that provides descriptive metadata for a link.
      Its main purpose is to give a human-readable description of the linkâ€™s meaning or purpose.
    </p>

    <p>
      <b>Uses:</b>
      <ul><li>
          It is typically used within elements that support XLink, like &lt;a&gt;,
          &lt;resource&gt;, or &lt;locator&gt; in XML-based languages.
        </li><li>Used in geospatial data to describe linked geographic objects.</li><li>Used in structured documents to describe external resources.</li></ul>
    </p>
  remarks: The <code>xlink:title</code> is a semantic attribute.
  example: []
  syntax:
    content: string? Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Title As String
  overload: NDSH.Xml.XLink.ITitle.Title*
references:
- uid: NDSH.Xml.XLink
  commentId: N:NDSH.Xml.XLink
  href: NDSH.html
  name: NDSH.Xml.XLink
  nameWithType: NDSH.Xml.XLink
  fullName: NDSH.Xml.XLink
  spec.csharp:
  - uid: NDSH
    name: NDSH
    href: NDSH.html
  - name: .
  - uid: NDSH.Xml
    name: Xml
    href: NDSH.Xml.html
  - name: .
  - uid: NDSH.Xml.XLink
    name: XLink
    href: NDSH.Xml.XLink.html
  spec.vb:
  - uid: NDSH
    name: NDSH
    href: NDSH.html
  - name: .
  - uid: NDSH.Xml
    name: Xml
    href: NDSH.Xml.html
  - name: .
  - uid: NDSH.Xml.XLink
    name: XLink
    href: NDSH.Xml.XLink.html
- uid: NDSH.Xml.XLink.ITitle.Title*
  commentId: Overload:NDSH.Xml.XLink.ITitle.Title
  href: NDSH.Xml.XLink.ITitle.html#NDSH_Xml_XLink_ITitle_Title
  name: Title
  nameWithType: ITitle.Title
  fullName: NDSH.Xml.XLink.ITitle.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
