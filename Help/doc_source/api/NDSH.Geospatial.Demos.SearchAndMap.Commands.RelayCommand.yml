### YamlMime:ManagedReference
items:
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  commentId: T:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  id: RelayCommand
  parent: NDSH.Geospatial.Demos.SearchAndMap.Commands
  children:
  - NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor(Action{System.Object})
  - NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor(Action{System.Object},Predicate{System.Object})
  - NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute(System.Nullable{System.Object})
  - NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecuteChanged
  - NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute(System.Nullable{System.Object})
  langs:
  - csharp
  - vb
  name: RelayCommand
  nameWithType: RelayCommand
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  type: Class
  source:
    remote:
      path: Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: RelayCommand
    path: ../../Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
    startLine: 17
  assemblies:
  - NDSH.Geospatial.Demos.SearchAndMap.Wpf
  namespace: NDSH.Geospatial.Demos.SearchAndMap.Commands
  summary: RelayCommand is a general purpose simple implementation of the ICommand interface.
  example: []
  syntax:
    content: 'public class RelayCommand : ICommand'
    content.vb: Public Class RelayCommand Inherits ICommand
  inheritance:
  - System.Object
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor(Action{System.Object})
  commentId: M:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor(Action{System.Object})
  id: '#ctor(Action{System.Object})'
  parent: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<object>)
  nameWithType: RelayCommand.RelayCommand(Action<object>)
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.RelayCommand(Action<object>)
  type: Constructor
  source:
    remote:
      path: Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: .ctor
    path: ../../Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
    startLine: 34
  assemblies:
  - NDSH.Geospatial.Demos.SearchAndMap.Wpf
  namespace: NDSH.Geospatial.Demos.SearchAndMap.Commands
  summary: Initializes the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RelayCommand(Action<object> execute)
    parameters:
    - id: execute
      type: Action{System.Object}
      description: The Action&lt;T&gt; to execute, where T is an System.Object.
    content.vb: Public Sub New(execute As Action(Of Object))
  overload: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor*
  nameWithType.vb: RelayCommand.New(Action(Of Object))
  fullName.vb: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.New(Action(Of Object))
  name.vb: New(Action(Of Object))
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor(Action{System.Object},Predicate{System.Object})
  commentId: M:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor(Action{System.Object},Predicate{System.Object})
  id: '#ctor(Action{System.Object},Predicate{System.Object})'
  parent: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  langs:
  - csharp
  - vb
  name: RelayCommand(Action<object>, Predicate<object>)
  nameWithType: RelayCommand.RelayCommand(Action<object>, Predicate<object>)
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.RelayCommand(Action<object>, Predicate<object>)
  type: Constructor
  source:
    remote:
      path: Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: .ctor
    path: ../../Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
    startLine: 51
  assemblies:
  - NDSH.Geospatial.Demos.SearchAndMap.Wpf
  namespace: NDSH.Geospatial.Demos.SearchAndMap.Commands
  summary: Initializes the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RelayCommand(Action<object> execute, Predicate<object> canExecute)
    parameters:
    - id: execute
      type: Action{System.Object}
      description: The Action&lt;T&gt; to execute, where T is an System.Object.
    - id: canExecute
      type: Predicate{System.Object}
      description: >-
        The Predicate&lt;T&gt; which determines whether the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref>

        can be executed or not, where T is an onject.
    content.vb: Public Sub New(execute As Action(Of Object), canExecute As Predicate(Of Object))
  overload: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor*
  nameWithType.vb: RelayCommand.New(Action(Of Object), Predicate(Of Object))
  fullName.vb: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.New(Action(Of Object), Predicate(Of Object))
  name.vb: New(Action(Of Object), Predicate(Of Object))
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute(System.Nullable{System.Object})
  commentId: M:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute(System.Nullable{System.Object})
  id: CanExecute(System.Nullable{System.Object})
  parent: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  langs:
  - csharp
  - vb
  name: CanExecute(object?)
  nameWithType: RelayCommand.CanExecute(object?)
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute(object?)
  type: Method
  source:
    remote:
      path: Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: CanExecute
    path: ../../Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
    startLine: 67
  assemblies:
  - NDSH.Geospatial.Demos.SearchAndMap.Wpf
  namespace: NDSH.Geospatial.Demos.SearchAndMap.Commands
  summary: The method determines whether the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref> can be executed or not.
  example: []
  syntax:
    content: public bool CanExecute(object? parameter)
    parameters:
    - id: parameter
      type: System.Nullable{System.Object}
      description: The System.Object used by the method.
    return:
      type: System.Boolean
      description: A System.Boolean indicating whether the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref> can be executed or not.
    content.vb: Public Function CanExecute(parameter As Object?) As Boolean
  overload: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute*
  nameWithType.vb: RelayCommand.CanExecute(Object?)
  fullName.vb: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute(Object?)
  name.vb: CanExecute(Object?)
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute(System.Nullable{System.Object})
  commentId: M:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute(System.Nullable{System.Object})
  id: Execute(System.Nullable{System.Object})
  parent: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  langs:
  - csharp
  - vb
  name: Execute(object?)
  nameWithType: RelayCommand.Execute(object?)
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute(object?)
  type: Method
  source:
    remote:
      path: Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: Execute
    path: ../../Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
    startLine: 75
  assemblies:
  - NDSH.Geospatial.Demos.SearchAndMap.Wpf
  namespace: NDSH.Geospatial.Demos.SearchAndMap.Commands
  summary: Executes the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Execute(object? parameter)
    parameters:
    - id: parameter
      type: System.Nullable{System.Object}
      description: The System.Object used by the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Execute(parameter As Object?)
  overload: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute*
  nameWithType.vb: RelayCommand.Execute(Object?)
  fullName.vb: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute(Object?)
  name.vb: Execute(Object?)
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecuteChanged
  commentId: E:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  nameWithType: RelayCommand.CanExecuteChanged
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecuteChanged
  type: Event
  source:
    remote:
      path: Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
      branch: dev
      repo: https://github.com/NERC-Digital-Solutions-Hub/test-doc.git
    id: CanExecuteChanged
    path: ../../Proj/src/src/NDSH.Geospatial.Demos.SearchAndMap.Wpf/src/Commands/RelayCommand.cs
    startLine: 86
  assemblies:
  - NDSH.Geospatial.Demos.SearchAndMap.Wpf
  namespace: NDSH.Geospatial.Demos.SearchAndMap.Commands
  summary: Occurs when the status whether the <xref href="NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand?text=RelaySommand%27s" data-throw-if-not-resolved="false"></xref> ability to be executed has been changed.
  example: []
  syntax:
    content: public event EventHandler? CanExecuteChanged
    return:
      type: System.Nullable{EventHandler}
    content.vb: Public Event CanExecuteChanged As EventHandler?
references:
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands
  commentId: N:NDSH.Geospatial.Demos.SearchAndMap.Commands
  href: NDSH.html
  name: NDSH.Geospatial.Demos.SearchAndMap.Commands
  nameWithType: NDSH.Geospatial.Demos.SearchAndMap.Commands
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands
  spec.csharp:
  - uid: NDSH
    name: NDSH
    href: NDSH.html
  - name: .
  - uid: NDSH.Geospatial
    name: Geospatial
    href: NDSH.Geospatial.html
  - name: .
  - uid: NDSH.Geospatial.Demos
    name: Demos
    href: NDSH.Geospatial.Demos.html
  - name: .
  - uid: NDSH.Geospatial.Demos.SearchAndMap
    name: SearchAndMap
    href: NDSH.Geospatial.Demos.SearchAndMap.html
  - name: .
  - uid: NDSH.Geospatial.Demos.SearchAndMap.Commands
    name: Commands
    href: NDSH.Geospatial.Demos.SearchAndMap.Commands.html
  spec.vb:
  - uid: NDSH
    name: NDSH
    href: NDSH.html
  - name: .
  - uid: NDSH.Geospatial
    name: Geospatial
    href: NDSH.Geospatial.html
  - name: .
  - uid: NDSH.Geospatial.Demos
    name: Demos
    href: NDSH.Geospatial.Demos.html
  - name: .
  - uid: NDSH.Geospatial.Demos.SearchAndMap
    name: SearchAndMap
    href: NDSH.Geospatial.Demos.SearchAndMap.html
  - name: .
  - uid: NDSH.Geospatial.Demos.SearchAndMap.Commands
    name: Commands
    href: NDSH.Geospatial.Demos.SearchAndMap.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  commentId: T:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
  href: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.html
  name: RelayCommand
  nameWithType: RelayCommand
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor*
  commentId: Overload:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.#ctor
  href: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.html#NDSH_Geospatial_Demos_SearchAndMap_Commands_RelayCommand__ctor_Action_System_Object__
  name: RelayCommand
  nameWithType: RelayCommand.RelayCommand
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.RelayCommand
  nameWithType.vb: RelayCommand.New
  fullName.vb: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.New
  name.vb: New
- uid: Action{System.Object}
  commentId: '!:Action{System.Object}'
  definition: Action`1
  name: Action<object>
  nameWithType: Action<object>
  fullName: Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Predicate{System.Object}
  commentId: '!:Predicate{System.Object}'
  definition: Predicate`1
  name: Predicate<object>
  nameWithType: Predicate<object>
  fullName: Predicate<object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: Predicate(Of Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Predicate`1
  commentId: '!:Predicate`1'
  isExternal: true
  name: Predicate<>
  nameWithType: Predicate<>
  fullName: Predicate<>
  nameWithType.vb: Predicate(Of )
  fullName.vb: Predicate(Of )
  name.vb: Predicate(Of )
  spec.csharp:
  - uid: Predicate`1
    name: Predicate
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Predicate`1
    name: Predicate
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute*
  commentId: Overload:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute
  href: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.html#NDSH_Geospatial_Demos_SearchAndMap_Commands_RelayCommand_CanExecute_System_Nullable_System_Object__
  name: CanExecute
  nameWithType: RelayCommand.CanExecute
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.CanExecute
- uid: System.Nullable{System.Object}
  commentId: '!:System.Nullable{System.Object}'
  definition: System.Nullable`1
  name: object?
  nameWithType: object?
  fullName: object?
  nameWithType.vb: Object?
  fullName.vb: Object?
  name.vb: Object?
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
  - name: '?'
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute*
  commentId: Overload:NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute
  href: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.html#NDSH_Geospatial_Demos_SearchAndMap_Commands_RelayCommand_Execute_System_Nullable_System_Object__
  name: Execute
  nameWithType: RelayCommand.Execute
  fullName: NDSH.Geospatial.Demos.SearchAndMap.Commands.RelayCommand.Execute
- uid: System.Nullable{EventHandler}
  commentId: '!:System.Nullable{EventHandler}'
  definition: System.Nullable`1
  name: EventHandler?
  nameWithType: EventHandler?
  fullName: EventHandler?
  spec.csharp:
  - uid: EventHandler
    name: EventHandler
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: EventHandler
    name: EventHandler
    isExternal: true
  - name: '?'
